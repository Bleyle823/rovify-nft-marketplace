{"id":"e8e29ab2ad48ff0ee70e8c2d491594d8","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Receiver} from \"./IERC721Receiver.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n     * the `spender` for the specific `tokenId`.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        _checkOnERC721Received(address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    revert ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert ERC721InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/ERC721Enumerable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC721} from \"../ERC721.sol\";\nimport {IERC721Enumerable} from \"./IERC721Enumerable.sol\";\nimport {IERC165} from \"../../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev This implements an optional extension of {ERC721} defined in the EIP that adds enumerability\n * of all the token ids in the contract as well as all token ids owned by each account.\n *\n * CAUTION: `ERC721` extensions that implement custom `balanceOf` logic, such as `ERC721Consecutive`,\n * interfere with enumerability and should not be used together with `ERC721Enumerable`.\n */\nabstract contract ERC721Enumerable is ERC721, IERC721Enumerable {\n    mapping(address owner => mapping(uint256 index => uint256)) private _ownedTokens;\n    mapping(uint256 tokenId => uint256) private _ownedTokensIndex;\n\n    uint256[] private _allTokens;\n    mapping(uint256 tokenId => uint256) private _allTokensIndex;\n\n    /**\n     * @dev An `owner`'s token query was out of bounds for `index`.\n     *\n     * NOTE: The owner being `address(0)` indicates a global out of bounds index.\n     */\n    error ERC721OutOfBoundsIndex(address owner, uint256 index);\n\n    /**\n     * @dev Batch mint is not allowed.\n     */\n    error ERC721EnumerableForbiddenBatchMint();\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC721) returns (bool) {\n        return interfaceId == type(IERC721Enumerable).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-tokenOfOwnerByIndex}.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual returns (uint256) {\n        if (index >= balanceOf(owner)) {\n            revert ERC721OutOfBoundsIndex(owner, index);\n        }\n        return _ownedTokens[owner][index];\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _allTokens.length;\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-tokenByIndex}.\n     */\n    function tokenByIndex(uint256 index) public view virtual returns (uint256) {\n        if (index >= totalSupply()) {\n            revert ERC721OutOfBoundsIndex(address(0), index);\n        }\n        return _allTokens[index];\n    }\n\n    /**\n     * @dev See {ERC721-_update}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual override returns (address) {\n        address previousOwner = super._update(to, tokenId, auth);\n\n        if (previousOwner == address(0)) {\n            _addTokenToAllTokensEnumeration(tokenId);\n        } else if (previousOwner != to) {\n            _removeTokenFromOwnerEnumeration(previousOwner, tokenId);\n        }\n        if (to == address(0)) {\n            _removeTokenFromAllTokensEnumeration(tokenId);\n        } else if (previousOwner != to) {\n            _addTokenToOwnerEnumeration(to, tokenId);\n        }\n\n        return previousOwner;\n    }\n\n    /**\n     * @dev Private function to add a token to this extension's ownership-tracking data structures.\n     * @param to address representing the new owner of the given token ID\n     * @param tokenId uint256 ID of the token to be added to the tokens list of the given address\n     */\n    function _addTokenToOwnerEnumeration(address to, uint256 tokenId) private {\n        uint256 length = balanceOf(to) - 1;\n        _ownedTokens[to][length] = tokenId;\n        _ownedTokensIndex[tokenId] = length;\n    }\n\n    /**\n     * @dev Private function to add a token to this extension's token tracking data structures.\n     * @param tokenId uint256 ID of the token to be added to the tokens list\n     */\n    function _addTokenToAllTokensEnumeration(uint256 tokenId) private {\n        _allTokensIndex[tokenId] = _allTokens.length;\n        _allTokens.push(tokenId);\n    }\n\n    /**\n     * @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\n     * while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\n     * gas optimizations e.g. when performing a transfer operation (avoiding double writes).\n     * This has O(1) time complexity, but alters the order of the _ownedTokens array.\n     * @param from address representing the previous owner of the given token ID\n     * @param tokenId uint256 ID of the token to be removed from the tokens list of the given address\n     */\n    function _removeTokenFromOwnerEnumeration(address from, uint256 tokenId) private {\n        // To prevent a gap in from's tokens array, we store the last token in the index of the token to delete, and\n        // then delete the last slot (swap and pop).\n\n        uint256 lastTokenIndex = balanceOf(from);\n        uint256 tokenIndex = _ownedTokensIndex[tokenId];\n\n        // When the token to delete is the last token, the swap operation is unnecessary\n        if (tokenIndex != lastTokenIndex) {\n            uint256 lastTokenId = _ownedTokens[from][lastTokenIndex];\n\n            _ownedTokens[from][tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\n            _ownedTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\n        }\n\n        // This also deletes the contents at the last position of the array\n        delete _ownedTokensIndex[tokenId];\n        delete _ownedTokens[from][lastTokenIndex];\n    }\n\n    /**\n     * @dev Private function to remove a token from this extension's token tracking data structures.\n     * This has O(1) time complexity, but alters the order of the _allTokens array.\n     * @param tokenId uint256 ID of the token to be removed from the tokens list\n     */\n    function _removeTokenFromAllTokensEnumeration(uint256 tokenId) private {\n        // To prevent a gap in the tokens array, we store the last token in the index of the token to delete, and\n        // then delete the last slot (swap and pop).\n\n        uint256 lastTokenIndex = _allTokens.length - 1;\n        uint256 tokenIndex = _allTokensIndex[tokenId];\n\n        // When the token to delete is the last token, the swap operation is unnecessary. However, since this occurs so\n        // rarely (when the last minted token is burnt) that we still do the swap here to avoid the gas cost of adding\n        // an 'if' statement (like in _removeTokenFromOwnerEnumeration)\n        uint256 lastTokenId = _allTokens[lastTokenIndex];\n\n        _allTokens[tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\n        _allTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\n\n        // This also deletes the contents at the last position of the array\n        delete _allTokensIndex[tokenId];\n        _allTokens.pop();\n    }\n\n    /**\n     * See {ERC721-_increaseBalance}. We need that to account tokens that were minted in batch\n     */\n    function _increaseBalance(address account, uint128 amount) internal virtual override {\n        if (amount > 0) {\n            revert ERC721EnumerableForbiddenBatchMint();\n        }\n        super._increaseBalance(account, amount);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Enumerable.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Enumerable is IERC721 {\n    /**\n     * @dev Returns the total amount of tokens stored by the contract.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n     * Use along with {totalSupply} to enumerate all tokens.\n     */\n    function tokenByIndex(uint256 index) external view returns (uint256);\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/utils/Base64.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.2) (utils/Base64.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides a set of functions to operate with Base64 strings.\n */\nlibrary Base64 {\n    /**\n     * @dev Base64 Encoding/Decoding Table\n     */\n    string internal constant _TABLE = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\n    /**\n     * @dev Converts a `bytes` to its Bytes64 `string` representation.\n     */\n    function encode(bytes memory data) internal pure returns (string memory) {\n        /**\n         * Inspired by Brecht Devos (Brechtpd) implementation - MIT licence\n         * https://github.com/Brechtpd/base64/blob/e78d9fd951e7b0977ddca77d92dc85183770daf4/base64.sol\n         */\n        if (data.length == 0) return \"\";\n\n        // Loads the table into memory\n        string memory table = _TABLE;\n\n        // Encoding takes 3 bytes chunks of binary data from `bytes` data parameter\n        // and split into 4 numbers of 6 bits.\n        // The final Base64 length should be `bytes` data length multiplied by 4/3 rounded up\n        // - `data.length + 2`  -> Round up\n        // - `/ 3`              -> Number of 3-bytes chunks\n        // - `4 *`              -> 4 characters for each chunk\n        string memory result = new string(4 * ((data.length + 2) / 3));\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Prepare the lookup table (skip the first \"length\" byte)\n            let tablePtr := add(table, 1)\n\n            // Prepare result pointer, jump over length\n            let resultPtr := add(result, 0x20)\n            let dataPtr := data\n            let endPtr := add(data, mload(data))\n\n            // In some cases, the last iteration will read bytes after the end of the data. We cache the value, and\n            // set it to zero to make sure no dirty bytes are read in that section.\n            let afterPtr := add(endPtr, 0x20)\n            let afterCache := mload(afterPtr)\n            mstore(afterPtr, 0x00)\n\n            // Run over the input, 3 bytes at a time\n            for {\n\n            } lt(dataPtr, endPtr) {\n\n            } {\n                // Advance 3 bytes\n                dataPtr := add(dataPtr, 3)\n                let input := mload(dataPtr)\n\n                // To write each character, shift the 3 byte (24 bits) chunk\n                // 4 times in blocks of 6 bits for each character (18, 12, 6, 0)\n                // and apply logical AND with 0x3F to bitmask the least significant 6 bits.\n                // Use this as an index into the lookup table, mload an entire word\n                // so the desired character is in the least significant byte, and\n                // mstore8 this least significant byte into the result and continue.\n\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(18, input), 0x3F))))\n                resultPtr := add(resultPtr, 1) // Advance\n\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(12, input), 0x3F))))\n                resultPtr := add(resultPtr, 1) // Advance\n\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(6, input), 0x3F))))\n                resultPtr := add(resultPtr, 1) // Advance\n\n                mstore8(resultPtr, mload(add(tablePtr, and(input, 0x3F))))\n                resultPtr := add(resultPtr, 1) // Advance\n            }\n\n            // Reset the value that was cached\n            mstore(afterPtr, afterCache)\n\n            // When data `bytes` is not exactly 3 bytes long\n            // it is padded with `=` characters at the end\n            switch mod(mload(data), 3)\n            case 1 {\n                mstore8(sub(resultPtr, 1), 0x3d)\n                mstore8(sub(resultPtr, 2), 0x3d)\n            }\n            case 2 {\n                mstore8(sub(resultPtr, 1), 0x3d)\n            }\n        }\n\n        return result;\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"contracts/EventTicketNFT.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity >=0.8.0 <0.9.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/utils/Base64.sol\";\r\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\r\n\r\n/**\r\n * @title EventTicketNFT\r\n * @dev NFT-based event ticketing system with marketplace functionality\r\n */\r\ncontract EventTicketNFT is ERC721Enumerable, Ownable, ReentrancyGuard {\r\n    uint256 public eventIdCounter;\r\n    uint256 public ticketIdCounter;\r\n\r\n    struct Event {\r\n        uint256 id;\r\n        string name;\r\n        string description;\r\n        uint256 eventDate;\r\n        uint256 ticketPrice;\r\n        uint256 maxSupply;\r\n        uint256 soldTickets;\r\n        address organizer;\r\n        bool isActive;\r\n        string imageCID; // IPFS CID for event image\r\n    }\r\n\r\n    struct Ticket {\r\n        uint256 id;\r\n        uint256 eventId;\r\n        uint256 ticketNumber;\r\n        string metadataURI;\r\n    }\r\n\r\n    struct MarketplaceListing {\r\n        uint256 ticketId;\r\n        address seller;\r\n        uint256 price;\r\n        bool isActive;\r\n    }\r\n\r\n    // Mappings\r\n    mapping(uint256 => Event) public events;\r\n    mapping(uint256 => Ticket) public tickets;\r\n    mapping(uint256 => MarketplaceListing) public marketplaceListings;\r\n    mapping(uint256 => uint256) public ticketToEvent; // ticketId => eventId\r\n    \r\n    // Events\r\n    event EventCreated(uint256 indexed eventId, string name, address indexed organizer, uint256 ticketPrice, uint256 maxSupply);\r\n    event TicketMinted(uint256 indexed ticketId, uint256 indexed eventId, address indexed buyer, uint256 ticketNumber);\r\n    event TicketListed(uint256 indexed ticketId, address indexed seller, uint256 price);\r\n    event TicketSold(uint256 indexed ticketId, address indexed seller, address indexed buyer, uint256 price);\r\n    event TicketListingCancelled(uint256 indexed ticketId, address indexed seller);\r\n\r\n    constructor() ERC721(\"EventTicketNFT\", \"ETNFT\") Ownable(msg.sender) {}\r\n\r\n    /**\r\n     * @dev Create a new event\r\n     */\r\n    function createEvent(\r\n        string memory _name,\r\n        string memory _description,\r\n        uint256 _eventDate,\r\n        uint256 _ticketPrice,\r\n        uint256 _maxSupply,\r\n        string memory _imageCID\r\n    ) external returns (uint256) {\r\n        require(_eventDate > block.timestamp, \"Event date must be in the future\");\r\n        require(_ticketPrice > 0, \"Ticket price must be greater than 0\");\r\n        require(_maxSupply > 0, \"Max supply must be greater than 0\");\r\n        require(bytes(_name).length > 0, \"Event name cannot be empty\");\r\n\r\n        eventIdCounter++;\r\n        uint256 eventId = eventIdCounter;\r\n\r\n        events[eventId] = Event({\r\n            id: eventId,\r\n            name: _name,\r\n            description: _description,\r\n            eventDate: _eventDate,\r\n            ticketPrice: _ticketPrice,\r\n            maxSupply: _maxSupply,\r\n            soldTickets: 0,\r\n            organizer: msg.sender,\r\n            isActive: true,\r\n            imageCID: _imageCID\r\n        });\r\n\r\n        emit EventCreated(eventId, _name, msg.sender, _ticketPrice, _maxSupply);\r\n        return eventId;\r\n    }\r\n\r\n    /**\r\n     * @dev Purchase a ticket for an event\r\n     */\r\n    function buyTicket(uint256 _eventId) external payable nonReentrant returns (uint256) {\r\n        Event storage eventInfo = events[_eventId];\r\n        require(eventInfo.isActive, \"Event is not active\");\r\n        require(eventInfo.soldTickets < eventInfo.maxSupply, \"Event is sold out\");\r\n        require(msg.value >= eventInfo.ticketPrice, \"Insufficient payment\");\r\n        require(block.timestamp < eventInfo.eventDate, \"Event has already passed\");\r\n\r\n        ticketIdCounter++;\r\n        uint256 ticketId = ticketIdCounter;\r\n        uint256 ticketNumber = eventInfo.soldTickets + 1;\r\n\r\n        // Update event sold tickets\r\n        eventInfo.soldTickets++;\r\n\r\n        // Create ticket with temporary metadata URI - will be updated by frontend\r\n        tickets[ticketId] = Ticket({\r\n            id: ticketId,\r\n            eventId: _eventId,\r\n            ticketNumber: ticketNumber,\r\n            metadataURI: \"\"\r\n        });\r\n\r\n        ticketToEvent[ticketId] = _eventId;\r\n\r\n        // Mint NFT to buyer\r\n        _safeMint(msg.sender, ticketId);\r\n\r\n        // Transfer payment to event organizer\r\n        (bool success, ) = payable(eventInfo.organizer).call{value: msg.value}(\"\");\r\n        require(success, \"Payment transfer failed\");\r\n\r\n        emit TicketMinted(ticketId, _eventId, msg.sender, ticketNumber);\r\n        return ticketId;\r\n    }\r\n\r\n    /**\r\n     * @dev List a ticket for resale on the marketplace\r\n     */\r\n    function listTicket(uint256 _ticketId, uint256 _price) external {\r\n        require(ownerOf(_ticketId) == msg.sender, \"You don't own this ticket\");\r\n        require(_price > 0, \"Price must be greater than 0\");\r\n        require(!marketplaceListings[_ticketId].isActive, \"Ticket is already listed\");\r\n\r\n        // Check if event hasn't passed yet\r\n        uint256 eventId = ticketToEvent[_ticketId];\r\n        require(events[eventId].eventDate > block.timestamp, \"Cannot sell tickets for past events\");\r\n\r\n        marketplaceListings[_ticketId] = MarketplaceListing({\r\n            ticketId: _ticketId,\r\n            seller: msg.sender,\r\n            price: _price,\r\n            isActive: true\r\n        });\r\n\r\n        emit TicketListed(_ticketId, msg.sender, _price);\r\n    }\r\n\r\n    /**\r\n     * @dev Buy a ticket from the marketplace\r\n     */\r\n    function buyListedTicket(uint256 _ticketId) external payable nonReentrant {\r\n        MarketplaceListing storage listing = marketplaceListings[_ticketId];\r\n        require(listing.isActive, \"Ticket is not listed for sale\");\r\n        require(msg.value >= listing.price, \"Insufficient payment\");\r\n        require(ownerOf(_ticketId) == listing.seller, \"Seller no longer owns the ticket\");\r\n\r\n        // Check if event hasn't passed yet\r\n        uint256 eventId = ticketToEvent[_ticketId];\r\n        require(events[eventId].eventDate > block.timestamp, \"Cannot buy tickets for past events\");\r\n\r\n        address seller = listing.seller;\r\n        uint256 price = listing.price;\r\n\r\n        // Deactivate listing\r\n        listing.isActive = false;\r\n\r\n        // Transfer ticket ownership\r\n        _transfer(seller, msg.sender, _ticketId);\r\n\r\n        // Transfer payment to seller\r\n        (bool success, ) = payable(seller).call{value: msg.value}(\"\");\r\n        require(success, \"Payment transfer failed\");\r\n\r\n        emit TicketSold(_ticketId, seller, msg.sender, price);\r\n    }\r\n\r\n    /**\r\n     * @dev Cancel a marketplace listing\r\n     */\r\n    function cancelListing(uint256 _ticketId) external {\r\n        MarketplaceListing storage listing = marketplaceListings[_ticketId];\r\n        require(listing.seller == msg.sender, \"You are not the seller\");\r\n        require(listing.isActive, \"Listing is not active\");\r\n\r\n        listing.isActive = false;\r\n\r\n        emit TicketListingCancelled(_ticketId, msg.sender);\r\n    }\r\n\r\n    /**\r\n     * @dev Get event details\r\n     */\r\n    function getEvent(uint256 _eventId) external view returns (Event memory) {\r\n        return events[_eventId];\r\n    }\r\n\r\n    /**\r\n     * @dev Get ticket details\r\n     */\r\n    function getTicket(uint256 _ticketId) external view returns (Ticket memory) {\r\n        return tickets[_ticketId];\r\n    }\r\n\r\n    /**\r\n     * @dev Get marketplace listing details\r\n     */\r\n    function getMarketplaceListing(uint256 _ticketId) external view returns (MarketplaceListing memory) {\r\n        return marketplaceListings[_ticketId];\r\n    }\r\n\r\n    /**\r\n     * @dev Get all events (for frontend display)\r\n     */\r\n    function getAllEvents() external view returns (Event[] memory) {\r\n        Event[] memory allEvents = new Event[](eventIdCounter);\r\n        for (uint256 i = 1; i <= eventIdCounter; i++) {\r\n            allEvents[i - 1] = events[i];\r\n        }\r\n        return allEvents;\r\n    }\r\n\r\n    /**\r\n     * @dev Get active marketplace listings\r\n     */\r\n    function getActiveListings() external view returns (uint256[] memory) {\r\n        uint256 activeCount = 0;\r\n        \r\n        // First, count active listings\r\n        for (uint256 i = 1; i <= ticketIdCounter; i++) {\r\n            if (marketplaceListings[i].isActive) {\r\n                activeCount++;\r\n            }\r\n        }\r\n        \r\n        // Create array and populate\r\n        uint256[] memory activeListings = new uint256[](activeCount);\r\n        uint256 currentIndex = 0;\r\n        \r\n        for (uint256 i = 1; i <= ticketIdCounter; i++) {\r\n            if (marketplaceListings[i].isActive) {\r\n                activeListings[currentIndex] = i;\r\n                currentIndex++;\r\n            }\r\n        }\r\n        \r\n        return activeListings;\r\n    }\r\n\r\n    /**\r\n     * @dev Get tickets owned by an address for a specific event\r\n     */\r\n    function getTicketsByEventAndOwner(uint256 _eventId, address _owner) external view returns (uint256[] memory) {\r\n        uint256 balance = balanceOf(_owner);\r\n        uint256[] memory eventTickets = new uint256[](balance);\r\n        uint256 currentIndex = 0;\r\n        \r\n        for (uint256 i = 0; i < balance; i++) {\r\n            uint256 ticketId = tokenOfOwnerByIndex(_owner, i);\r\n            if (ticketToEvent[ticketId] == _eventId) {\r\n                eventTickets[currentIndex] = ticketId;\r\n                currentIndex++;\r\n            }\r\n        }\r\n        \r\n        // Resize array to actual size\r\n        uint256[] memory result = new uint256[](currentIndex);\r\n        for (uint256 i = 0; i < currentIndex; i++) {\r\n            result[i] = eventTickets[i];\r\n        }\r\n        \r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Update ticket metadata URI after IPFS upload\r\n     */\r\n    function updateTicketMetadata(uint256 _ticketId, string memory _metadataURI) external {\r\n        require(ownerOf(_ticketId) == msg.sender, \"You don't own this ticket\");\r\n        require(bytes(_metadataURI).length > 0, \"Metadata URI cannot be empty\");\r\n        \r\n        tickets[_ticketId].metadataURI = _metadataURI;\r\n    }\r\n\r\n    /**\r\n     * @dev Override tokenURI to return ticket metadata\r\n     */\r\n    function tokenURI(uint256 tokenId) public view override returns (string memory) {\r\n        _requireOwned(tokenId);\r\n\r\n        string memory metadataCid = tickets[tokenId].metadataURI;\r\n        if (bytes(metadataCid).length > 0) {\r\n            // If frontend has set a metadata CID, return it as an ipfs:// URI\r\n            return string(abi.encodePacked(\"ipfs://\", metadataCid));\r\n        }\r\n\r\n        // Fallback to on-chain JSON metadata using the event's image CID\r\n        Ticket memory t = tickets[tokenId];\r\n        Event memory e = events[t.eventId];\r\n\r\n        bytes memory json = abi.encodePacked(\r\n            \"{\",\r\n                \"\\\"name\\\":\\\"\",\r\n                e.name,\r\n                \" #\",\r\n                Strings.toString(t.ticketNumber),\r\n                \"\\\",\",\r\n                \"\\\"description\\\":\\\"\",\r\n                e.description,\r\n                \"\\\",\",\r\n                \"\\\"image\\\":\\\"ipfs://\",\r\n                e.imageCID,\r\n                \"\\\"\",\r\n            \"}\"\r\n        );\r\n\r\n        return string(abi.encodePacked(\r\n            \"data:application/json;base64,\",\r\n            Base64.encode(json)\r\n        ));\r\n    }\r\n\r\n    /**\r\n     * @dev Generate metadata URI for a ticket\r\n     * In a real implementation, this would point to IPFS metadata\r\n     */\r\n    function _generateMetadataURI(uint256 _eventId, uint256 _ticketNumber) internal view returns (string memory) {\r\n        // Deprecated by on-chain Base64 JSON fallback; retained for compatibility if needed in future\r\n        Ticket memory t = tickets[_eventId];\r\n        Event memory e = events[t.eventId];\r\n        bytes memory json = abi.encodePacked(\r\n            \"{\",\r\n                \"\\\"name\\\":\\\"\",\r\n                e.name,\r\n                \" #\",\r\n                Strings.toString(_ticketNumber),\r\n                \"\\\",\",\r\n                \"\\\"description\\\":\\\"\",\r\n                e.description,\r\n                \"\\\",\",\r\n                \"\\\"image\\\":\\\"ipfs://\",\r\n                e.imageCID,\r\n                \"\\\"\",\r\n            \"}\"\r\n        );\r\n        return string(abi.encodePacked(\"data:application/json;base64,\", Base64.encode(json)));\r\n    }\r\n\r\n    /**\r\n     * @dev Convert uint256 to string\r\n     */\r\n    function _toString(uint256 value) internal pure returns (string memory) {\r\n        return Strings.toString(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Emergency function to deactivate an event (only owner)\r\n     */\r\n    function deactivateEvent(uint256 _eventId) external onlyOwner {\r\n        events[_eventId].isActive = false;\r\n    }\r\n\r\n    /**\r\n     * @dev Override transfer functions to handle marketplace listings\r\n     */\r\n    function _update(address to, uint256 tokenId, address auth) internal override returns (address) {\r\n        // If ticket is listed on marketplace and being transferred, cancel the listing\r\n        if (marketplaceListings[tokenId].isActive) {\r\n            marketplaceListings[tokenId].isActive = false;\r\n            emit TicketListingCancelled(tokenId, marketplaceListings[tokenId].seller);\r\n        }\r\n        \r\n        return super._update(to, tokenId, auth);\r\n    }\r\n}\r\n"},"contracts/SE2NFT.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity >=0.8.0 <0.9.0;\n\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\";\nimport \"@openzeppelin/contracts/utils/Base64.sol\";\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\n\ncontract SE2NFT is ERC721Enumerable {\n    uint256 public tokenIdCounter;\n    mapping(uint256 tokenId => string) public tokenURIs;\n    string[] public uris = [\n        \"QmVHi3c4qkZcH3cJynzDXRm5n7dzc9R9TUtUcfnWQvhdcw\", // Zebra\n        \"QmfVMAmNM1kDEBYrC2TPzQDoCRFH6F5tE1e9Mr4FkkR5Xr\", // Buffalo\n        \"QmcvcUaKf6JyCXhLD1by6hJXNruPQGs3kkLg2W1xr7nF1j\" // Rhino\n    ];\n\n    constructor() ERC721(\"SE2-ERC721-NFT\", \"SE2NFT\") {}\n\n    function _baseURI() internal pure override returns (string memory) {\n        return \"https://ipfs.io/ipfs/\";\n    }\n\n    function mintItem(address to) public returns (uint256) {\n        tokenIdCounter++;\n        _safeMint(to, tokenIdCounter);\n\n        bytes32 predictableRandom = keccak256(\n            abi.encodePacked(tokenIdCounter, blockhash(block.number - 1), msg.sender, address(this))\n        );\n\n        tokenURIs[tokenIdCounter] = uris[uint256(predictableRandom) % uris.length];\n        return tokenIdCounter;\n    }\n\n    function tokenURI(uint256 tokenId) public view override returns (string memory) {\n        _requireOwned(tokenId);\n        string memory imageCid = tokenURIs[tokenId];\n\n        bytes memory json = abi.encodePacked(\n            \"{\",\n                \"\\\"name\\\":\\\"SE2NFT #\",\n                Strings.toString(tokenId),\n                \"\\\",\",\n                \"\\\"description\\\":\\\"Scaffold-ETH 2 sample NFT\\\",\",\n                \"\\\"image\\\":\\\"ipfs://\",\n                imageCid,\n                \"\\\"\",\n            \"}\"\n        );\n\n        return string(abi.encodePacked(\n            \"data:application/json;base64,\",\n            Base64.encode(json)\n        ));\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[1949],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":1950,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":1949,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,1949],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[284],"IERC20Errors":[189],"IERC721Errors":[237]},"id":285,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"138:139:1","text":" @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."},"fullyImplemented":true,"id":189,"linearizedBaseContracts":[189],"name":"IERC20Errors","nameLocation":"288:12:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":151,"nodeType":"StructuredDocumentation","src":"307:309:1","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":159,"name":"ERC20InsufficientBalance","nameLocation":"627:24:1","nodeType":"ErrorDefinition","parameters":{"id":158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"sender","nameLocation":"660:6:1","nodeType":"VariableDeclaration","scope":159,"src":"652:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"652:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":155,"mutability":"mutable","name":"balance","nameLocation":"676:7:1","nodeType":"VariableDeclaration","scope":159,"src":"668:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":154,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":157,"mutability":"mutable","name":"needed","nameLocation":"693:6:1","nodeType":"VariableDeclaration","scope":159,"src":"685:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":156,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"651:49:1"},"src":"621:80:1"},{"documentation":{"id":160,"nodeType":"StructuredDocumentation","src":"707:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":164,"name":"ERC20InvalidSender","nameLocation":"870:18:1","nodeType":"ErrorDefinition","parameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"mutability":"mutable","name":"sender","nameLocation":"897:6:1","nodeType":"VariableDeclaration","scope":164,"src":"889:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"889:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"888:16:1"},"src":"864:41:1"},{"documentation":{"id":165,"nodeType":"StructuredDocumentation","src":"911:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":169,"name":"ERC20InvalidReceiver","nameLocation":"1081:20:1","nodeType":"ErrorDefinition","parameters":{"id":168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"mutability":"mutable","name":"receiver","nameLocation":"1110:8:1","nodeType":"VariableDeclaration","scope":169,"src":"1102:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":166,"name":"address","nodeType":"ElementaryTypeName","src":"1102:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1101:18:1"},"src":"1075:45:1"},{"documentation":{"id":170,"nodeType":"StructuredDocumentation","src":"1126:345:1","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":178,"name":"ERC20InsufficientAllowance","nameLocation":"1482:26:1","nodeType":"ErrorDefinition","parameters":{"id":177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":172,"mutability":"mutable","name":"spender","nameLocation":"1517:7:1","nodeType":"VariableDeclaration","scope":178,"src":"1509:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":171,"name":"address","nodeType":"ElementaryTypeName","src":"1509:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":174,"mutability":"mutable","name":"allowance","nameLocation":"1534:9:1","nodeType":"VariableDeclaration","scope":178,"src":"1526:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":173,"name":"uint256","nodeType":"ElementaryTypeName","src":"1526:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":176,"mutability":"mutable","name":"needed","nameLocation":"1553:6:1","nodeType":"VariableDeclaration","scope":178,"src":"1545:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":175,"name":"uint256","nodeType":"ElementaryTypeName","src":"1545:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1508:52:1"},"src":"1476:85:1"},{"documentation":{"id":179,"nodeType":"StructuredDocumentation","src":"1567:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":183,"name":"ERC20InvalidApprover","nameLocation":"1752:20:1","nodeType":"ErrorDefinition","parameters":{"id":182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":181,"mutability":"mutable","name":"approver","nameLocation":"1781:8:1","nodeType":"VariableDeclaration","scope":183,"src":"1773:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":180,"name":"address","nodeType":"ElementaryTypeName","src":"1773:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1772:18:1"},"src":"1746:45:1"},{"documentation":{"id":184,"nodeType":"StructuredDocumentation","src":"1797:195:1","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":188,"name":"ERC20InvalidSpender","nameLocation":"2003:19:1","nodeType":"ErrorDefinition","parameters":{"id":187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":186,"mutability":"mutable","name":"spender","nameLocation":"2031:7:1","nodeType":"VariableDeclaration","scope":188,"src":"2023:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":185,"name":"address","nodeType":"ElementaryTypeName","src":"2023:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2022:17:1"},"src":"1997:43:1"}],"scope":285,"src":"278:1764:1","usedErrors":[159,164,169,178,183,188],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"2044:141:1","text":" @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."},"fullyImplemented":true,"id":237,"linearizedBaseContracts":[237],"name":"IERC721Errors","nameLocation":"2196:13:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":191,"nodeType":"StructuredDocumentation","src":"2216:219:1","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":195,"name":"ERC721InvalidOwner","nameLocation":"2446:18:1","nodeType":"ErrorDefinition","parameters":{"id":194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"mutability":"mutable","name":"owner","nameLocation":"2473:5:1","nodeType":"VariableDeclaration","scope":195,"src":"2465:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":192,"name":"address","nodeType":"ElementaryTypeName","src":"2465:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2464:15:1"},"src":"2440:40:1"},{"documentation":{"id":196,"nodeType":"StructuredDocumentation","src":"2486:132:1","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":200,"name":"ERC721NonexistentToken","nameLocation":"2629:22:1","nodeType":"ErrorDefinition","parameters":{"id":199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":198,"mutability":"mutable","name":"tokenId","nameLocation":"2660:7:1","nodeType":"VariableDeclaration","scope":200,"src":"2652:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":197,"name":"uint256","nodeType":"ElementaryTypeName","src":"2652:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2651:17:1"},"src":"2623:46:1"},{"documentation":{"id":201,"nodeType":"StructuredDocumentation","src":"2675:289:1","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":209,"name":"ERC721IncorrectOwner","nameLocation":"2975:20:1","nodeType":"ErrorDefinition","parameters":{"id":208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":203,"mutability":"mutable","name":"sender","nameLocation":"3004:6:1","nodeType":"VariableDeclaration","scope":209,"src":"2996:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":202,"name":"address","nodeType":"ElementaryTypeName","src":"2996:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":205,"mutability":"mutable","name":"tokenId","nameLocation":"3020:7:1","nodeType":"VariableDeclaration","scope":209,"src":"3012:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":204,"name":"uint256","nodeType":"ElementaryTypeName","src":"3012:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":207,"mutability":"mutable","name":"owner","nameLocation":"3037:5:1","nodeType":"VariableDeclaration","scope":209,"src":"3029:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":206,"name":"address","nodeType":"ElementaryTypeName","src":"3029:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2995:48:1"},"src":"2969:75:1"},{"documentation":{"id":210,"nodeType":"StructuredDocumentation","src":"3050:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":214,"name":"ERC721InvalidSender","nameLocation":"3213:19:1","nodeType":"ErrorDefinition","parameters":{"id":213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":212,"mutability":"mutable","name":"sender","nameLocation":"3241:6:1","nodeType":"VariableDeclaration","scope":214,"src":"3233:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":211,"name":"address","nodeType":"ElementaryTypeName","src":"3233:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3232:16:1"},"src":"3207:42:1"},{"documentation":{"id":215,"nodeType":"StructuredDocumentation","src":"3255:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":219,"name":"ERC721InvalidReceiver","nameLocation":"3425:21:1","nodeType":"ErrorDefinition","parameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":217,"mutability":"mutable","name":"receiver","nameLocation":"3455:8:1","nodeType":"VariableDeclaration","scope":219,"src":"3447:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":216,"name":"address","nodeType":"ElementaryTypeName","src":"3447:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3446:18:1"},"src":"3419:46:1"},{"documentation":{"id":220,"nodeType":"StructuredDocumentation","src":"3471:247:1","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":226,"name":"ERC721InsufficientApproval","nameLocation":"3729:26:1","nodeType":"ErrorDefinition","parameters":{"id":225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":222,"mutability":"mutable","name":"operator","nameLocation":"3764:8:1","nodeType":"VariableDeclaration","scope":226,"src":"3756:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":221,"name":"address","nodeType":"ElementaryTypeName","src":"3756:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":224,"mutability":"mutable","name":"tokenId","nameLocation":"3782:7:1","nodeType":"VariableDeclaration","scope":226,"src":"3774:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":223,"name":"uint256","nodeType":"ElementaryTypeName","src":"3774:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3755:35:1"},"src":"3723:68:1"},{"documentation":{"id":227,"nodeType":"StructuredDocumentation","src":"3797:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":231,"name":"ERC721InvalidApprover","nameLocation":"3982:21:1","nodeType":"ErrorDefinition","parameters":{"id":230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":229,"mutability":"mutable","name":"approver","nameLocation":"4012:8:1","nodeType":"VariableDeclaration","scope":231,"src":"4004:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":228,"name":"address","nodeType":"ElementaryTypeName","src":"4004:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4003:18:1"},"src":"3976:46:1"},{"documentation":{"id":232,"nodeType":"StructuredDocumentation","src":"4028:197:1","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":236,"name":"ERC721InvalidOperator","nameLocation":"4236:21:1","nodeType":"ErrorDefinition","parameters":{"id":235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":234,"mutability":"mutable","name":"operator","nameLocation":"4266:8:1","nodeType":"VariableDeclaration","scope":236,"src":"4258:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":233,"name":"address","nodeType":"ElementaryTypeName","src":"4258:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4257:18:1"},"src":"4230:46:1"}],"scope":285,"src":"2186:2092:1","usedErrors":[195,200,209,214,219,226,231,236],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":238,"nodeType":"StructuredDocumentation","src":"4280:143:1","text":" @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."},"fullyImplemented":true,"id":284,"linearizedBaseContracts":[284],"name":"IERC1155Errors","nameLocation":"4434:14:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":239,"nodeType":"StructuredDocumentation","src":"4455:361:1","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":249,"name":"ERC1155InsufficientBalance","nameLocation":"4827:26:1","nodeType":"ErrorDefinition","parameters":{"id":248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":241,"mutability":"mutable","name":"sender","nameLocation":"4862:6:1","nodeType":"VariableDeclaration","scope":249,"src":"4854:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":240,"name":"address","nodeType":"ElementaryTypeName","src":"4854:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":243,"mutability":"mutable","name":"balance","nameLocation":"4878:7:1","nodeType":"VariableDeclaration","scope":249,"src":"4870:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":242,"name":"uint256","nodeType":"ElementaryTypeName","src":"4870:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":245,"mutability":"mutable","name":"needed","nameLocation":"4895:6:1","nodeType":"VariableDeclaration","scope":249,"src":"4887:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":244,"name":"uint256","nodeType":"ElementaryTypeName","src":"4887:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":247,"mutability":"mutable","name":"tokenId","nameLocation":"4911:7:1","nodeType":"VariableDeclaration","scope":249,"src":"4903:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":246,"name":"uint256","nodeType":"ElementaryTypeName","src":"4903:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4853:66:1"},"src":"4821:99:1"},{"documentation":{"id":250,"nodeType":"StructuredDocumentation","src":"4926:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":254,"name":"ERC1155InvalidSender","nameLocation":"5089:20:1","nodeType":"ErrorDefinition","parameters":{"id":253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":252,"mutability":"mutable","name":"sender","nameLocation":"5118:6:1","nodeType":"VariableDeclaration","scope":254,"src":"5110:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":251,"name":"address","nodeType":"ElementaryTypeName","src":"5110:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5109:16:1"},"src":"5083:43:1"},{"documentation":{"id":255,"nodeType":"StructuredDocumentation","src":"5132:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":259,"name":"ERC1155InvalidReceiver","nameLocation":"5302:22:1","nodeType":"ErrorDefinition","parameters":{"id":258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":257,"mutability":"mutable","name":"receiver","nameLocation":"5333:8:1","nodeType":"VariableDeclaration","scope":259,"src":"5325:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":256,"name":"address","nodeType":"ElementaryTypeName","src":"5325:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5324:18:1"},"src":"5296:47:1"},{"documentation":{"id":260,"nodeType":"StructuredDocumentation","src":"5349:256:1","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":266,"name":"ERC1155MissingApprovalForAll","nameLocation":"5616:28:1","nodeType":"ErrorDefinition","parameters":{"id":265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":262,"mutability":"mutable","name":"operator","nameLocation":"5653:8:1","nodeType":"VariableDeclaration","scope":266,"src":"5645:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":261,"name":"address","nodeType":"ElementaryTypeName","src":"5645:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":264,"mutability":"mutable","name":"owner","nameLocation":"5671:5:1","nodeType":"VariableDeclaration","scope":266,"src":"5663:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":263,"name":"address","nodeType":"ElementaryTypeName","src":"5663:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5644:33:1"},"src":"5610:68:1"},{"documentation":{"id":267,"nodeType":"StructuredDocumentation","src":"5684:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":271,"name":"ERC1155InvalidApprover","nameLocation":"5869:22:1","nodeType":"ErrorDefinition","parameters":{"id":270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":269,"mutability":"mutable","name":"approver","nameLocation":"5900:8:1","nodeType":"VariableDeclaration","scope":271,"src":"5892:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":268,"name":"address","nodeType":"ElementaryTypeName","src":"5892:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5891:18:1"},"src":"5863:47:1"},{"documentation":{"id":272,"nodeType":"StructuredDocumentation","src":"5916:197:1","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":276,"name":"ERC1155InvalidOperator","nameLocation":"6124:22:1","nodeType":"ErrorDefinition","parameters":{"id":275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":274,"mutability":"mutable","name":"operator","nameLocation":"6155:8:1","nodeType":"VariableDeclaration","scope":276,"src":"6147:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":273,"name":"address","nodeType":"ElementaryTypeName","src":"6147:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6146:18:1"},"src":"6118:47:1"},{"documentation":{"id":277,"nodeType":"StructuredDocumentation","src":"6171:280:1","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":283,"name":"ERC1155InvalidArrayLength","nameLocation":"6462:25:1","nodeType":"ErrorDefinition","parameters":{"id":282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":279,"mutability":"mutable","name":"idsLength","nameLocation":"6496:9:1","nodeType":"VariableDeclaration","scope":283,"src":"6488:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":278,"name":"uint256","nodeType":"ElementaryTypeName","src":"6488:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":281,"mutability":"mutable","name":"valuesLength","nameLocation":"6515:12:1","nodeType":"VariableDeclaration","scope":283,"src":"6507:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":280,"name":"uint256","nodeType":"ElementaryTypeName","src":"6507:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6487:41:1"},"src":"6456:73:1"}],"scope":285,"src":"4424:2107:1","usedErrors":[249,254,259,266,271,276,283],"usedEvents":[]}],"src":"112:6420:1"},"id":1},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","exportedSymbols":{"Context":[1949],"ERC165":[2297],"ERC721":[1293],"IERC165":[2309],"IERC721":[1410],"IERC721Errors":[237],"IERC721Metadata":[1872],"IERC721Receiver":[1428],"Strings":[2273]},"id":1294,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":286,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:2"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"./IERC721.sol","id":288,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1294,"sourceUnit":1411,"src":"133:38:2","symbolAliases":[{"foreign":{"id":287,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1410,"src":"141:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"./IERC721Receiver.sol","id":290,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1294,"sourceUnit":1429,"src":"172:54:2","symbolAliases":[{"foreign":{"id":289,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"180:15:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"./extensions/IERC721Metadata.sol","id":292,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1294,"sourceUnit":1873,"src":"227:65:2","symbolAliases":[{"foreign":{"id":291,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"235:15:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":294,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1294,"sourceUnit":1950,"src":"293:48:2","symbolAliases":[{"foreign":{"id":293,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"301:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../utils/Strings.sol","id":296,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1294,"sourceUnit":2274,"src":"342:48:2","symbolAliases":[{"foreign":{"id":295,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"350:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":299,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1294,"sourceUnit":2298,"src":"391:69:2","symbolAliases":[{"foreign":{"id":297,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2309,"src":"399:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":298,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2297,"src":"408:6:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":301,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1294,"sourceUnit":285,"src":"461:66:2","symbolAliases":[{"foreign":{"id":300,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"469:13:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":303,"name":"Context","nameLocations":["804:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":1949,"src":"804:7:2"},"id":304,"nodeType":"InheritanceSpecifier","src":"804:7:2"},{"baseName":{"id":305,"name":"ERC165","nameLocations":["813:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":2297,"src":"813:6:2"},"id":306,"nodeType":"InheritanceSpecifier","src":"813:6:2"},{"baseName":{"id":307,"name":"IERC721","nameLocations":["821:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":1410,"src":"821:7:2"},"id":308,"nodeType":"InheritanceSpecifier","src":"821:7:2"},{"baseName":{"id":309,"name":"IERC721Metadata","nameLocations":["830:15:2"],"nodeType":"IdentifierPath","referencedDeclaration":1872,"src":"830:15:2"},"id":310,"nodeType":"InheritanceSpecifier","src":"830:15:2"},{"baseName":{"id":311,"name":"IERC721Errors","nameLocations":["847:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":237,"src":"847:13:2"},"id":312,"nodeType":"InheritanceSpecifier","src":"847:13:2"}],"canonicalName":"ERC721","contractDependencies":[],"contractKind":"contract","documentation":{"id":302,"nodeType":"StructuredDocumentation","src":"529:246:2","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":1293,"linearizedBaseContracts":[1293,237,1872,1410,2297,2309,1949],"name":"ERC721","nameLocation":"794:6:2","nodeType":"ContractDefinition","nodes":[{"global":false,"id":315,"libraryName":{"id":313,"name":"Strings","nameLocations":["873:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":2273,"src":"873:7:2"},"nodeType":"UsingForDirective","src":"867:26:2","typeName":{"id":314,"name":"uint256","nodeType":"ElementaryTypeName","src":"885:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":317,"mutability":"mutable","name":"_name","nameLocation":"932:5:2","nodeType":"VariableDeclaration","scope":1293,"src":"917:20:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":316,"name":"string","nodeType":"ElementaryTypeName","src":"917:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":319,"mutability":"mutable","name":"_symbol","nameLocation":"979:7:2","nodeType":"VariableDeclaration","scope":1293,"src":"964:22:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":318,"name":"string","nodeType":"ElementaryTypeName","src":"964:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":323,"mutability":"mutable","name":"_owners","nameLocation":"1037:7:2","nodeType":"VariableDeclaration","scope":1293,"src":"993:51:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":322,"keyName":"tokenId","keyNameLocation":"1009:7:2","keyType":{"id":320,"name":"uint256","nodeType":"ElementaryTypeName","src":"1001:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"993:35:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":321,"name":"address","nodeType":"ElementaryTypeName","src":"1020:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":327,"mutability":"mutable","name":"_balances","nameLocation":"1093:9:2","nodeType":"VariableDeclaration","scope":1293,"src":"1051:51:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":326,"keyName":"owner","keyNameLocation":"1067:5:2","keyType":{"id":324,"name":"address","nodeType":"ElementaryTypeName","src":"1059:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1051:33:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":325,"name":"uint256","nodeType":"ElementaryTypeName","src":"1076:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":331,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1153:15:2","nodeType":"VariableDeclaration","scope":1293,"src":"1109:59:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":330,"keyName":"tokenId","keyNameLocation":"1125:7:2","keyType":{"id":328,"name":"uint256","nodeType":"ElementaryTypeName","src":"1117:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1109:35:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":329,"name":"address","nodeType":"ElementaryTypeName","src":"1136:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":337,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1243:18:2","nodeType":"VariableDeclaration","scope":1293,"src":"1175:86:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":336,"keyName":"owner","keyNameLocation":"1191:5:2","keyType":{"id":332,"name":"address","nodeType":"ElementaryTypeName","src":"1183:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1175:59:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":335,"keyName":"operator","keyNameLocation":"1216:8:2","keyType":{"id":333,"name":"address","nodeType":"ElementaryTypeName","src":"1208:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1200:33:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":334,"name":"bool","nodeType":"ElementaryTypeName","src":"1228:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":353,"nodeType":"Block","src":"1437:57:2","statements":[{"expression":{"id":347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":345,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"1447:5:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":346,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"1455:5:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1447:13:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":348,"nodeType":"ExpressionStatement","src":"1447:13:2"},{"expression":{"id":351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":349,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":319,"src":"1470:7:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":350,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"1480:7:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1470:17:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":352,"nodeType":"ExpressionStatement","src":"1470:17:2"}]},"documentation":{"id":338,"nodeType":"StructuredDocumentation","src":"1268:108:2","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":354,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":340,"mutability":"mutable","name":"name_","nameLocation":"1407:5:2","nodeType":"VariableDeclaration","scope":354,"src":"1393:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":339,"name":"string","nodeType":"ElementaryTypeName","src":"1393:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":342,"mutability":"mutable","name":"symbol_","nameLocation":"1428:7:2","nodeType":"VariableDeclaration","scope":354,"src":"1414:21:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":341,"name":"string","nodeType":"ElementaryTypeName","src":"1414:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1392:44:2"},"returnParameters":{"id":344,"nodeType":"ParameterList","parameters":[],"src":"1437:0:2"},"scope":1293,"src":"1381:113:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2296,2308],"body":{"id":384,"nodeType":"Block","src":"1669:192:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":365,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":357,"src":"1698:11:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":367,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1410,"src":"1718:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$1410_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$1410_$","typeString":"type(contract IERC721)"}],"id":366,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1713:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1713:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$1410","typeString":"type(contract IERC721)"}},"id":369,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1727:11:2","memberName":"interfaceId","nodeType":"MemberAccess","src":"1713:25:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1698:40:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":371,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":357,"src":"1754:11:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":373,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"1774:15:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1872_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1872_$","typeString":"type(contract IERC721Metadata)"}],"id":372,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1769:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1769:21:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$1872","typeString":"type(contract IERC721Metadata)"}},"id":375,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1791:11:2","memberName":"interfaceId","nodeType":"MemberAccess","src":"1769:33:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1754:48:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1698:104:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":380,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":357,"src":"1842:11:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":378,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1818:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721_$1293_$","typeString":"type(contract super ERC721)"}},"id":379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1824:17:2","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":2296,"src":"1818:23:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1818:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1698:156:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":364,"id":383,"nodeType":"Return","src":"1679:175:2"}]},"documentation":{"id":355,"nodeType":"StructuredDocumentation","src":"1500:56:2","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":385,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1570:17:2","nodeType":"FunctionDefinition","overrides":{"id":361,"nodeType":"OverrideSpecifier","overrides":[{"id":359,"name":"ERC165","nameLocations":["1637:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":2297,"src":"1637:6:2"},{"id":360,"name":"IERC165","nameLocations":["1645:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":2309,"src":"1645:7:2"}],"src":"1628:25:2"},"parameters":{"id":358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":357,"mutability":"mutable","name":"interfaceId","nameLocation":"1595:11:2","nodeType":"VariableDeclaration","scope":385,"src":"1588:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":356,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1588:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1587:20:2"},"returnParameters":{"id":364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":363,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":385,"src":"1663:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":362,"name":"bool","nodeType":"ElementaryTypeName","src":"1663:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1662:6:2"},"scope":1293,"src":"1561:300:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1335],"body":{"id":412,"nodeType":"Block","src":"1992:136:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":393,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"2006:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2023:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2015:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":394,"name":"address","nodeType":"ElementaryTypeName","src":"2015:7:2","typeDescriptions":{}}},"id":397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2015:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2006:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":407,"nodeType":"IfStatement","src":"2002:87:2","trueBody":{"id":406,"nodeType":"Block","src":"2027:62:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2075:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":401,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2067:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":400,"name":"address","nodeType":"ElementaryTypeName","src":"2067:7:2","typeDescriptions":{}}},"id":403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2067:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":399,"name":"ERC721InvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"2048:18:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2048:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":405,"nodeType":"RevertStatement","src":"2041:37:2"}]}},{"expression":{"baseExpression":{"id":408,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"2105:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":410,"indexExpression":{"id":409,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"2115:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2105:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":392,"id":411,"nodeType":"Return","src":"2098:23:2"}]},"documentation":{"id":386,"nodeType":"StructuredDocumentation","src":"1867:48:2","text":" @dev See {IERC721-balanceOf}."},"functionSelector":"70a08231","id":413,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1929:9:2","nodeType":"FunctionDefinition","parameters":{"id":389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":388,"mutability":"mutable","name":"owner","nameLocation":"1947:5:2","nodeType":"VariableDeclaration","scope":413,"src":"1939:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":387,"name":"address","nodeType":"ElementaryTypeName","src":"1939:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1938:15:2"},"returnParameters":{"id":392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":391,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":413,"src":"1983:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":390,"name":"uint256","nodeType":"ElementaryTypeName","src":"1983:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1982:9:2"},"scope":1293,"src":"1920:208:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1343],"body":{"id":425,"nodeType":"Block","src":"2257:46:2","statements":[{"expression":{"arguments":[{"id":422,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"2288:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":421,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"2274:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2274:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":420,"id":424,"nodeType":"Return","src":"2267:29:2"}]},"documentation":{"id":414,"nodeType":"StructuredDocumentation","src":"2134:46:2","text":" @dev See {IERC721-ownerOf}."},"functionSelector":"6352211e","id":426,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"2194:7:2","nodeType":"FunctionDefinition","parameters":{"id":417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":416,"mutability":"mutable","name":"tokenId","nameLocation":"2210:7:2","nodeType":"VariableDeclaration","scope":426,"src":"2202:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":415,"name":"uint256","nodeType":"ElementaryTypeName","src":"2202:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2201:17:2"},"returnParameters":{"id":420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":419,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":426,"src":"2248:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":418,"name":"address","nodeType":"ElementaryTypeName","src":"2248:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2247:9:2"},"scope":1293,"src":"2185:118:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1857],"body":{"id":434,"nodeType":"Block","src":"2425:29:2","statements":[{"expression":{"id":432,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"2442:5:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":431,"id":433,"nodeType":"Return","src":"2435:12:2"}]},"documentation":{"id":427,"nodeType":"StructuredDocumentation","src":"2309:51:2","text":" @dev See {IERC721Metadata-name}."},"functionSelector":"06fdde03","id":435,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2374:4:2","nodeType":"FunctionDefinition","parameters":{"id":428,"nodeType":"ParameterList","parameters":[],"src":"2378:2:2"},"returnParameters":{"id":431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":430,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":435,"src":"2410:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":429,"name":"string","nodeType":"ElementaryTypeName","src":"2410:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2409:15:2"},"scope":1293,"src":"2365:89:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1863],"body":{"id":443,"nodeType":"Block","src":"2580:31:2","statements":[{"expression":{"id":441,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":319,"src":"2597:7:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":440,"id":442,"nodeType":"Return","src":"2590:14:2"}]},"documentation":{"id":436,"nodeType":"StructuredDocumentation","src":"2460:53:2","text":" @dev See {IERC721Metadata-symbol}."},"functionSelector":"95d89b41","id":444,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2527:6:2","nodeType":"FunctionDefinition","parameters":{"id":437,"nodeType":"ParameterList","parameters":[],"src":"2533:2:2"},"returnParameters":{"id":440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":439,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":444,"src":"2565:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":438,"name":"string","nodeType":"ElementaryTypeName","src":"2565:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2564:15:2"},"scope":1293,"src":"2518:93:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1871],"body":{"id":479,"nodeType":"Block","src":"2756:176:2","statements":[{"expression":{"arguments":[{"id":453,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"2780:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":452,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"2766:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2766:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":455,"nodeType":"ExpressionStatement","src":"2766:22:2"},{"assignments":[457],"declarations":[{"constant":false,"id":457,"mutability":"mutable","name":"baseURI","nameLocation":"2813:7:2","nodeType":"VariableDeclaration","scope":479,"src":"2799:21:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":456,"name":"string","nodeType":"ElementaryTypeName","src":"2799:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":460,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":458,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"2823:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2823:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2799:34:2"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":463,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"2856:7:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2850:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":461,"name":"bytes","nodeType":"ElementaryTypeName","src":"2850:5:2","typeDescriptions":{}}},"id":464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2850:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2865:6:2","memberName":"length","nodeType":"MemberAccess","src":"2850:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2874:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2850:25:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2923:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2850:75:2","trueExpression":{"arguments":[{"id":471,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"2892:7:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":472,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"2901:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2909:8:2","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2086,"src":"2901:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2901:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":469,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2878:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":468,"name":"string","nodeType":"ElementaryTypeName","src":"2878:6:2","typeDescriptions":{}}},"id":470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2885:6:2","memberName":"concat","nodeType":"MemberAccess","src":"2878:13:2","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2878:42:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":451,"id":478,"nodeType":"Return","src":"2843:82:2"}]},"documentation":{"id":445,"nodeType":"StructuredDocumentation","src":"2617:55:2","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":480,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"2686:8:2","nodeType":"FunctionDefinition","parameters":{"id":448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":447,"mutability":"mutable","name":"tokenId","nameLocation":"2703:7:2","nodeType":"VariableDeclaration","scope":480,"src":"2695:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":446,"name":"uint256","nodeType":"ElementaryTypeName","src":"2695:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2694:17:2"},"returnParameters":{"id":451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":450,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":480,"src":"2741:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":449,"name":"string","nodeType":"ElementaryTypeName","src":"2741:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2740:15:2"},"scope":1293,"src":"2677:255:2","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":488,"nodeType":"Block","src":"3240:26:2","statements":[{"expression":{"hexValue":"","id":486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3257:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":485,"id":487,"nodeType":"Return","src":"3250:9:2"}]},"documentation":{"id":481,"nodeType":"StructuredDocumentation","src":"2938:231:2","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":489,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"3183:8:2","nodeType":"FunctionDefinition","parameters":{"id":482,"nodeType":"ParameterList","parameters":[],"src":"3191:2:2"},"returnParameters":{"id":485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":484,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":489,"src":"3225:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":483,"name":"string","nodeType":"ElementaryTypeName","src":"3225:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3224:15:2"},"scope":1293,"src":"3174:92:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1383],"body":{"id":504,"nodeType":"Block","src":"3384:52:2","statements":[{"expression":{"arguments":[{"id":498,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":492,"src":"3403:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":499,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"3407:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":500,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"3416:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3416:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":497,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1096,1162],"referencedDeclaration":1096,"src":"3394:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address)"}},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3394:35:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":503,"nodeType":"ExpressionStatement","src":"3394:35:2"}]},"documentation":{"id":490,"nodeType":"StructuredDocumentation","src":"3272:46:2","text":" @dev See {IERC721-approve}."},"functionSelector":"095ea7b3","id":505,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3332:7:2","nodeType":"FunctionDefinition","parameters":{"id":495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":492,"mutability":"mutable","name":"to","nameLocation":"3348:2:2","nodeType":"VariableDeclaration","scope":505,"src":"3340:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":491,"name":"address","nodeType":"ElementaryTypeName","src":"3340:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":494,"mutability":"mutable","name":"tokenId","nameLocation":"3360:7:2","nodeType":"VariableDeclaration","scope":505,"src":"3352:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":493,"name":"uint256","nodeType":"ElementaryTypeName","src":"3352:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3339:29:2"},"returnParameters":{"id":496,"nodeType":"ParameterList","parameters":[],"src":"3384:0:2"},"scope":1293,"src":"3323:113:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1399],"body":{"id":521,"nodeType":"Block","src":"3573:78:2","statements":[{"expression":{"arguments":[{"id":514,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"3597:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":513,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"3583:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3583:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":516,"nodeType":"ExpressionStatement","src":"3583:22:2"},{"expression":{"arguments":[{"id":518,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"3636:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":517,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"3623:12:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3623:21:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":512,"id":520,"nodeType":"Return","src":"3616:28:2"}]},"documentation":{"id":506,"nodeType":"StructuredDocumentation","src":"3442:50:2","text":" @dev See {IERC721-getApproved}."},"functionSelector":"081812fc","id":522,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"3506:11:2","nodeType":"FunctionDefinition","parameters":{"id":509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":508,"mutability":"mutable","name":"tokenId","nameLocation":"3526:7:2","nodeType":"VariableDeclaration","scope":522,"src":"3518:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":507,"name":"uint256","nodeType":"ElementaryTypeName","src":"3518:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3517:17:2"},"returnParameters":{"id":512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":511,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":522,"src":"3564:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":510,"name":"address","nodeType":"ElementaryTypeName","src":"3564:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3563:9:2"},"scope":1293,"src":"3497:154:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1391],"body":{"id":537,"nodeType":"Block","src":"3793:69:2","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":531,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"3822:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3822:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":533,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"3836:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":534,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"3846:8:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":530,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1199,"src":"3803:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3803:52:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":536,"nodeType":"ExpressionStatement","src":"3803:52:2"}]},"documentation":{"id":523,"nodeType":"StructuredDocumentation","src":"3657:56:2","text":" @dev See {IERC721-setApprovalForAll}."},"functionSelector":"a22cb465","id":538,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"3727:17:2","nodeType":"FunctionDefinition","parameters":{"id":528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":525,"mutability":"mutable","name":"operator","nameLocation":"3753:8:2","nodeType":"VariableDeclaration","scope":538,"src":"3745:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":524,"name":"address","nodeType":"ElementaryTypeName","src":"3745:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":527,"mutability":"mutable","name":"approved","nameLocation":"3768:8:2","nodeType":"VariableDeclaration","scope":538,"src":"3763:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":526,"name":"bool","nodeType":"ElementaryTypeName","src":"3763:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3744:33:2"},"returnParameters":{"id":529,"nodeType":"ParameterList","parameters":[],"src":"3793:0:2"},"scope":1293,"src":"3718:144:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1409],"body":{"id":554,"nodeType":"Block","src":"4022:59:2","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":548,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"4039:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":550,"indexExpression":{"id":549,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"4058:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4039:25:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":552,"indexExpression":{"id":551,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":543,"src":"4065:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4039:35:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":547,"id":553,"nodeType":"Return","src":"4032:42:2"}]},"documentation":{"id":539,"nodeType":"StructuredDocumentation","src":"3868:55:2","text":" @dev See {IERC721-isApprovedForAll}."},"functionSelector":"e985e9c5","id":555,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"3937:16:2","nodeType":"FunctionDefinition","parameters":{"id":544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":541,"mutability":"mutable","name":"owner","nameLocation":"3962:5:2","nodeType":"VariableDeclaration","scope":555,"src":"3954:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":540,"name":"address","nodeType":"ElementaryTypeName","src":"3954:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":543,"mutability":"mutable","name":"operator","nameLocation":"3977:8:2","nodeType":"VariableDeclaration","scope":555,"src":"3969:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":542,"name":"address","nodeType":"ElementaryTypeName","src":"3969:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3953:33:2"},"returnParameters":{"id":547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":546,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":555,"src":"4016:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":545,"name":"bool","nodeType":"ElementaryTypeName","src":"4016:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4015:6:2"},"scope":1293,"src":"3928:153:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1375],"body":{"id":600,"nodeType":"Block","src":"4223:498:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":565,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":560,"src":"4237:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4251:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":567,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4243:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":566,"name":"address","nodeType":"ElementaryTypeName","src":"4243:7:2","typeDescriptions":{}}},"id":569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4243:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4237:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":579,"nodeType":"IfStatement","src":"4233:87:2","trueBody":{"id":578,"nodeType":"Block","src":"4255:65:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4306:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":573,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4298:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":572,"name":"address","nodeType":"ElementaryTypeName","src":"4298:7:2","typeDescriptions":{}}},"id":575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4298:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":571,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"4276:21:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4276:33:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":577,"nodeType":"RevertStatement","src":"4269:40:2"}]}},{"assignments":[581],"declarations":[{"constant":false,"id":581,"mutability":"mutable","name":"previousOwner","nameLocation":"4546:13:2","nodeType":"VariableDeclaration","scope":600,"src":"4538:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":580,"name":"address","nodeType":"ElementaryTypeName","src":"4538:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":588,"initialValue":{"arguments":[{"id":583,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":560,"src":"4570:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":584,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"4574:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":585,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"4583:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4583:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":582,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"4562:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4562:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4538:58:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":589,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":581,"src":"4610:13:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":590,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"4627:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4610:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":599,"nodeType":"IfStatement","src":"4606:109:2","trueBody":{"id":598,"nodeType":"Block","src":"4633:82:2","statements":[{"errorCall":{"arguments":[{"id":593,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"4675:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":594,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"4681:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":595,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":581,"src":"4690:13:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":592,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":209,"src":"4654:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address) pure"}},"id":596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4654:50:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":597,"nodeType":"RevertStatement","src":"4647:57:2"}]}}]},"documentation":{"id":556,"nodeType":"StructuredDocumentation","src":"4087:51:2","text":" @dev See {IERC721-transferFrom}."},"functionSelector":"23b872dd","id":601,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4152:12:2","nodeType":"FunctionDefinition","parameters":{"id":563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":558,"mutability":"mutable","name":"from","nameLocation":"4173:4:2","nodeType":"VariableDeclaration","scope":601,"src":"4165:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":557,"name":"address","nodeType":"ElementaryTypeName","src":"4165:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":560,"mutability":"mutable","name":"to","nameLocation":"4187:2:2","nodeType":"VariableDeclaration","scope":601,"src":"4179:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":559,"name":"address","nodeType":"ElementaryTypeName","src":"4179:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":562,"mutability":"mutable","name":"tokenId","nameLocation":"4199:7:2","nodeType":"VariableDeclaration","scope":601,"src":"4191:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":561,"name":"uint256","nodeType":"ElementaryTypeName","src":"4191:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4164:43:2"},"returnParameters":{"id":564,"nodeType":"ParameterList","parameters":[],"src":"4223:0:2"},"scope":1293,"src":"4143:578:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1365],"body":{"id":618,"nodeType":"Block","src":"4863:56:2","statements":[{"expression":{"arguments":[{"id":612,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":604,"src":"4890:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":613,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"4896:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":614,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"4900:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4909:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":611,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[619,645],"referencedDeclaration":645,"src":"4873:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4873:39:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":617,"nodeType":"ExpressionStatement","src":"4873:39:2"}]},"documentation":{"id":602,"nodeType":"StructuredDocumentation","src":"4727:55:2","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"42842e0e","id":619,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4796:16:2","nodeType":"FunctionDefinition","parameters":{"id":609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":604,"mutability":"mutable","name":"from","nameLocation":"4821:4:2","nodeType":"VariableDeclaration","scope":619,"src":"4813:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":603,"name":"address","nodeType":"ElementaryTypeName","src":"4813:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":606,"mutability":"mutable","name":"to","nameLocation":"4835:2:2","nodeType":"VariableDeclaration","scope":619,"src":"4827:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":605,"name":"address","nodeType":"ElementaryTypeName","src":"4827:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":608,"mutability":"mutable","name":"tokenId","nameLocation":"4847:7:2","nodeType":"VariableDeclaration","scope":619,"src":"4839:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":607,"name":"uint256","nodeType":"ElementaryTypeName","src":"4839:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4812:43:2"},"returnParameters":{"id":610,"nodeType":"ParameterList","parameters":[],"src":"4863:0:2"},"scope":1293,"src":"4787:132:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1355],"body":{"id":644,"nodeType":"Block","src":"5088:105:2","statements":[{"expression":{"arguments":[{"id":632,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"5111:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":633,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"5117:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":634,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"5121:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":631,"name":"transferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":601,"src":"5098:12:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5098:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":636,"nodeType":"ExpressionStatement","src":"5098:31:2"},{"expression":{"arguments":[{"id":638,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"5162:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":639,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"5168:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":640,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"5172:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":641,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":628,"src":"5181:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":637,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"5139:22:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5139:47:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":643,"nodeType":"ExpressionStatement","src":"5139:47:2"}]},"documentation":{"id":620,"nodeType":"StructuredDocumentation","src":"4925:55:2","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"b88d4fde","id":645,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4994:16:2","nodeType":"FunctionDefinition","parameters":{"id":629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":622,"mutability":"mutable","name":"from","nameLocation":"5019:4:2","nodeType":"VariableDeclaration","scope":645,"src":"5011:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":621,"name":"address","nodeType":"ElementaryTypeName","src":"5011:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":624,"mutability":"mutable","name":"to","nameLocation":"5033:2:2","nodeType":"VariableDeclaration","scope":645,"src":"5025:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":623,"name":"address","nodeType":"ElementaryTypeName","src":"5025:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":626,"mutability":"mutable","name":"tokenId","nameLocation":"5045:7:2","nodeType":"VariableDeclaration","scope":645,"src":"5037:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":625,"name":"uint256","nodeType":"ElementaryTypeName","src":"5037:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":628,"mutability":"mutable","name":"data","nameLocation":"5067:4:2","nodeType":"VariableDeclaration","scope":645,"src":"5054:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":627,"name":"bytes","nodeType":"ElementaryTypeName","src":"5054:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5010:62:2"},"returnParameters":{"id":630,"nodeType":"ParameterList","parameters":[],"src":"5088:0:2"},"scope":1293,"src":"4985:208:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":657,"nodeType":"Block","src":"5782:40:2","statements":[{"expression":{"baseExpression":{"id":653,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"5799:7:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":655,"indexExpression":{"id":654,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":648,"src":"5807:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5799:16:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":652,"id":656,"nodeType":"Return","src":"5792:23:2"}]},"documentation":{"id":646,"nodeType":"StructuredDocumentation","src":"5199:503:2","text":" @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."},"id":658,"implemented":true,"kind":"function","modifiers":[],"name":"_ownerOf","nameLocation":"5716:8:2","nodeType":"FunctionDefinition","parameters":{"id":649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":648,"mutability":"mutable","name":"tokenId","nameLocation":"5733:7:2","nodeType":"VariableDeclaration","scope":658,"src":"5725:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":647,"name":"uint256","nodeType":"ElementaryTypeName","src":"5725:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5724:17:2"},"returnParameters":{"id":652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":651,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":658,"src":"5773:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":650,"name":"address","nodeType":"ElementaryTypeName","src":"5773:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5772:9:2"},"scope":1293,"src":"5707:115:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":670,"nodeType":"Block","src":"6017:48:2","statements":[{"expression":{"baseExpression":{"id":666,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"6034:15:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":668,"indexExpression":{"id":667,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":661,"src":"6050:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6034:24:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":665,"id":669,"nodeType":"Return","src":"6027:31:2"}]},"documentation":{"id":659,"nodeType":"StructuredDocumentation","src":"5828:105:2","text":" @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."},"id":671,"implemented":true,"kind":"function","modifiers":[],"name":"_getApproved","nameLocation":"5947:12:2","nodeType":"FunctionDefinition","parameters":{"id":662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":661,"mutability":"mutable","name":"tokenId","nameLocation":"5968:7:2","nodeType":"VariableDeclaration","scope":671,"src":"5960:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":660,"name":"uint256","nodeType":"ElementaryTypeName","src":"5960:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5959:17:2"},"returnParameters":{"id":665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":664,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":671,"src":"6008:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":663,"name":"address","nodeType":"ElementaryTypeName","src":"6008:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6007:9:2"},"scope":1293,"src":"5938:127:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":706,"nodeType":"Block","src":"6485:163:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":683,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"6514:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6533:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":685,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6525:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":684,"name":"address","nodeType":"ElementaryTypeName","src":"6525:7:2","typeDescriptions":{}}},"id":687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6525:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6514:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":689,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":674,"src":"6552:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":690,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"6561:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6552:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":693,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":674,"src":"6589:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":694,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"6596:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":692,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":555,"src":"6572:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6572:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6552:52:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":698,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":678,"src":"6621:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":697,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"6608:12:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6608:21:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":700,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"6633:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6608:32:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6552:88:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":703,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6551:90:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6514:127:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":682,"id":705,"nodeType":"Return","src":"6495:146:2"}]},"documentation":{"id":672,"nodeType":"StructuredDocumentation","src":"6071:300:2","text":" @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":707,"implemented":true,"kind":"function","modifiers":[],"name":"_isAuthorized","nameLocation":"6385:13:2","nodeType":"FunctionDefinition","parameters":{"id":679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":674,"mutability":"mutable","name":"owner","nameLocation":"6407:5:2","nodeType":"VariableDeclaration","scope":707,"src":"6399:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":673,"name":"address","nodeType":"ElementaryTypeName","src":"6399:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":676,"mutability":"mutable","name":"spender","nameLocation":"6422:7:2","nodeType":"VariableDeclaration","scope":707,"src":"6414:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":675,"name":"address","nodeType":"ElementaryTypeName","src":"6414:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":678,"mutability":"mutable","name":"tokenId","nameLocation":"6439:7:2","nodeType":"VariableDeclaration","scope":707,"src":"6431:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":677,"name":"uint256","nodeType":"ElementaryTypeName","src":"6431:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6398:49:2"},"returnParameters":{"id":682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":681,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":707,"src":"6479:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":680,"name":"bool","nodeType":"ElementaryTypeName","src":"6479:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6478:6:2"},"scope":1293,"src":"6376:272:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":743,"nodeType":"Block","src":"7179:271:2","statements":[{"condition":{"id":722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7193:39:2","subExpression":{"arguments":[{"id":718,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"7208:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":719,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"7215:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":720,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":714,"src":"7224:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":717,"name":"_isAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"7194:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) view returns (bool)"}},"id":721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7194:38:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":742,"nodeType":"IfStatement","src":"7189:255:2","trueBody":{"id":741,"nodeType":"Block","src":"7234:210:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":723,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"7252:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7269:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":725,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7261:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":724,"name":"address","nodeType":"ElementaryTypeName","src":"7261:7:2","typeDescriptions":{}}},"id":727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7261:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7252:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":739,"nodeType":"Block","src":"7350:84:2","statements":[{"errorCall":{"arguments":[{"id":735,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"7402:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":736,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":714,"src":"7411:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":734,"name":"ERC721InsufficientApproval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"7375:26:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7375:44:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":738,"nodeType":"RevertStatement","src":"7368:51:2"}]},"id":740,"nodeType":"IfStatement","src":"7248:186:2","trueBody":{"id":733,"nodeType":"Block","src":"7273:71:2","statements":[{"errorCall":{"arguments":[{"id":730,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":714,"src":"7321:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":729,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"7298:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7298:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":732,"nodeType":"RevertStatement","src":"7291:38:2"}]}}]}}]},"documentation":{"id":708,"nodeType":"StructuredDocumentation","src":"6654:423:2","text":" @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":744,"implemented":true,"kind":"function","modifiers":[],"name":"_checkAuthorized","nameLocation":"7091:16:2","nodeType":"FunctionDefinition","parameters":{"id":715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":710,"mutability":"mutable","name":"owner","nameLocation":"7116:5:2","nodeType":"VariableDeclaration","scope":744,"src":"7108:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":709,"name":"address","nodeType":"ElementaryTypeName","src":"7108:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":712,"mutability":"mutable","name":"spender","nameLocation":"7131:7:2","nodeType":"VariableDeclaration","scope":744,"src":"7123:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":711,"name":"address","nodeType":"ElementaryTypeName","src":"7123:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":714,"mutability":"mutable","name":"tokenId","nameLocation":"7148:7:2","nodeType":"VariableDeclaration","scope":744,"src":"7140:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":713,"name":"uint256","nodeType":"ElementaryTypeName","src":"7140:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7107:49:2"},"returnParameters":{"id":716,"nodeType":"ParameterList","parameters":[],"src":"7179:0:2"},"scope":1293,"src":"7082:368:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":759,"nodeType":"Block","src":"8167:78:2","statements":[{"id":758,"nodeType":"UncheckedBlock","src":"8177:62:2","statements":[{"expression":{"id":756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":752,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"8201:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":754,"indexExpression":{"id":753,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":747,"src":"8211:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8201:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":755,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":749,"src":"8223:5:2","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"8201:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":757,"nodeType":"ExpressionStatement","src":"8201:27:2"}]}]},"documentation":{"id":745,"nodeType":"StructuredDocumentation","src":"7456:631:2","text":" @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."},"id":760,"implemented":true,"kind":"function","modifiers":[],"name":"_increaseBalance","nameLocation":"8101:16:2","nodeType":"FunctionDefinition","parameters":{"id":750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":747,"mutability":"mutable","name":"account","nameLocation":"8126:7:2","nodeType":"VariableDeclaration","scope":760,"src":"8118:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":746,"name":"address","nodeType":"ElementaryTypeName","src":"8118:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":749,"mutability":"mutable","name":"value","nameLocation":"8143:5:2","nodeType":"VariableDeclaration","scope":760,"src":"8135:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":748,"name":"uint128","nodeType":"ElementaryTypeName","src":"8135:7:2","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"8117:32:2"},"returnParameters":{"id":751,"nodeType":"ParameterList","parameters":[],"src":"8167:0:2"},"scope":1293,"src":"8092:153:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":849,"nodeType":"Block","src":"8933:700:2","statements":[{"assignments":[773],"declarations":[{"constant":false,"id":773,"mutability":"mutable","name":"from","nameLocation":"8951:4:2","nodeType":"VariableDeclaration","scope":849,"src":"8943:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":772,"name":"address","nodeType":"ElementaryTypeName","src":"8943:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":777,"initialValue":{"arguments":[{"id":775,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"8967:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":774,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"8958:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8958:17:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8943:32:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":778,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"9035:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9051:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":780,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9043:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":779,"name":"address","nodeType":"ElementaryTypeName","src":"9043:7:2","typeDescriptions":{}}},"id":782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9043:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9035:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":791,"nodeType":"IfStatement","src":"9031:86:2","trueBody":{"id":790,"nodeType":"Block","src":"9055:62:2","statements":[{"expression":{"arguments":[{"id":785,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":773,"src":"9086:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":786,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"9092:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":787,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"9098:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":784,"name":"_checkAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":744,"src":"9069:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) view"}},"id":788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9069:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":789,"nodeType":"ExpressionStatement","src":"9069:37:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":792,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":773,"src":"9161:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9177:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":794,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9169:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":793,"name":"address","nodeType":"ElementaryTypeName","src":"9169:7:2","typeDescriptions":{}}},"id":796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9169:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9161:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":819,"nodeType":"IfStatement","src":"9157:256:2","trueBody":{"id":818,"nodeType":"Block","src":"9181:232:2","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9294:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":800,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9286:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":799,"name":"address","nodeType":"ElementaryTypeName","src":"9286:7:2","typeDescriptions":{}}},"id":802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9286:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":803,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"9298:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9315:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":805,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9307:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":804,"name":"address","nodeType":"ElementaryTypeName","src":"9307:7:2","typeDescriptions":{}}},"id":807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9307:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9319:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":798,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1096,1162],"referencedDeclaration":1162,"src":"9277:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9277:48:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":810,"nodeType":"ExpressionStatement","src":"9277:48:2"},{"id":817,"nodeType":"UncheckedBlock","src":"9340:63:2","statements":[{"expression":{"id":815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":811,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"9368:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":813,"indexExpression":{"id":812,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":773,"src":"9378:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9368:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9387:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9368:20:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":816,"nodeType":"ExpressionStatement","src":"9368:20:2"}]}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":820,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"9427:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9441:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":822,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9433:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":821,"name":"address","nodeType":"ElementaryTypeName","src":"9433:7:2","typeDescriptions":{}}},"id":824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9433:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9427:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":834,"nodeType":"IfStatement","src":"9423:107:2","trueBody":{"id":833,"nodeType":"Block","src":"9445:85:2","statements":[{"id":832,"nodeType":"UncheckedBlock","src":"9459:61:2","statements":[{"expression":{"id":830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":826,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"9487:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":828,"indexExpression":{"id":827,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"9497:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9487:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9504:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9487:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":831,"nodeType":"ExpressionStatement","src":"9487:18:2"}]}]}},{"expression":{"id":839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":835,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"9540:7:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":837,"indexExpression":{"id":836,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"9548:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9540:16:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":838,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"9559:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9540:21:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":840,"nodeType":"ExpressionStatement","src":"9540:21:2"},{"eventCall":{"arguments":[{"id":842,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":773,"src":"9586:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":843,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"9592:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":844,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"9596:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":841,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"9577:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9577:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":846,"nodeType":"EmitStatement","src":"9572:32:2"},{"expression":{"id":847,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":773,"src":"9622:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":771,"id":848,"nodeType":"Return","src":"9615:11:2"}]},"documentation":{"id":761,"nodeType":"StructuredDocumentation","src":"8251:582:2","text":" @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."},"id":850,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"8847:7:2","nodeType":"FunctionDefinition","parameters":{"id":768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":763,"mutability":"mutable","name":"to","nameLocation":"8863:2:2","nodeType":"VariableDeclaration","scope":850,"src":"8855:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":762,"name":"address","nodeType":"ElementaryTypeName","src":"8855:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":765,"mutability":"mutable","name":"tokenId","nameLocation":"8875:7:2","nodeType":"VariableDeclaration","scope":850,"src":"8867:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":764,"name":"uint256","nodeType":"ElementaryTypeName","src":"8867:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":767,"mutability":"mutable","name":"auth","nameLocation":"8892:4:2","nodeType":"VariableDeclaration","scope":850,"src":"8884:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":766,"name":"address","nodeType":"ElementaryTypeName","src":"8884:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8854:43:2"},"returnParameters":{"id":771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":770,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":850,"src":"8924:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":769,"name":"address","nodeType":"ElementaryTypeName","src":"8924:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8923:9:2"},"scope":1293,"src":"8838:795:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":899,"nodeType":"Block","src":"10008:274:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":858,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"10022:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10036:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":860,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10028:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":859,"name":"address","nodeType":"ElementaryTypeName","src":"10028:7:2","typeDescriptions":{}}},"id":862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10028:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10022:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":872,"nodeType":"IfStatement","src":"10018:87:2","trueBody":{"id":871,"nodeType":"Block","src":"10040:65:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10091:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":866,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10083:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":865,"name":"address","nodeType":"ElementaryTypeName","src":"10083:7:2","typeDescriptions":{}}},"id":868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10083:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":864,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"10061:21:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10061:33:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":870,"nodeType":"RevertStatement","src":"10054:40:2"}]}},{"assignments":[874],"declarations":[{"constant":false,"id":874,"mutability":"mutable","name":"previousOwner","nameLocation":"10122:13:2","nodeType":"VariableDeclaration","scope":899,"src":"10114:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":873,"name":"address","nodeType":"ElementaryTypeName","src":"10114:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":883,"initialValue":{"arguments":[{"id":876,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"10146:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":877,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"10150:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10167:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":879,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10159:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":878,"name":"address","nodeType":"ElementaryTypeName","src":"10159:7:2","typeDescriptions":{}}},"id":881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10159:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":875,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"10138:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10138:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10114:56:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":884,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":874,"src":"10184:13:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10209:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10201:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":885,"name":"address","nodeType":"ElementaryTypeName","src":"10201:7:2","typeDescriptions":{}}},"id":888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10201:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10184:27:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":898,"nodeType":"IfStatement","src":"10180:96:2","trueBody":{"id":897,"nodeType":"Block","src":"10213:63:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10262:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":892,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10254:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":891,"name":"address","nodeType":"ElementaryTypeName","src":"10254:7:2","typeDescriptions":{}}},"id":894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10254:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":890,"name":"ERC721InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"10234:19:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10234:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":896,"nodeType":"RevertStatement","src":"10227:38:2"}]}}]},"documentation":{"id":851,"nodeType":"StructuredDocumentation","src":"9639:311:2","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":900,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"9964:5:2","nodeType":"FunctionDefinition","parameters":{"id":856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":853,"mutability":"mutable","name":"to","nameLocation":"9978:2:2","nodeType":"VariableDeclaration","scope":900,"src":"9970:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":852,"name":"address","nodeType":"ElementaryTypeName","src":"9970:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":855,"mutability":"mutable","name":"tokenId","nameLocation":"9990:7:2","nodeType":"VariableDeclaration","scope":900,"src":"9982:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":854,"name":"uint256","nodeType":"ElementaryTypeName","src":"9982:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9969:29:2"},"returnParameters":{"id":857,"nodeType":"ParameterList","parameters":[],"src":"10008:0:2"},"scope":1293,"src":"9955:327:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":914,"nodeType":"Block","src":"10690:43:2","statements":[{"expression":{"arguments":[{"id":909,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":903,"src":"10710:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":910,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":905,"src":"10714:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10723:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":908,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[915,941],"referencedDeclaration":941,"src":"10700:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10700:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":913,"nodeType":"ExpressionStatement","src":"10700:26:2"}]},"documentation":{"id":901,"nodeType":"StructuredDocumentation","src":"10288:340:2","text":" @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":915,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10642:9:2","nodeType":"FunctionDefinition","parameters":{"id":906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":903,"mutability":"mutable","name":"to","nameLocation":"10660:2:2","nodeType":"VariableDeclaration","scope":915,"src":"10652:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":902,"name":"address","nodeType":"ElementaryTypeName","src":"10652:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":905,"mutability":"mutable","name":"tokenId","nameLocation":"10672:7:2","nodeType":"VariableDeclaration","scope":915,"src":"10664:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":904,"name":"uint256","nodeType":"ElementaryTypeName","src":"10664:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10651:29:2"},"returnParameters":{"id":907,"nodeType":"ParameterList","parameters":[],"src":"10690:0:2"},"scope":1293,"src":"10633:100:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":940,"nodeType":"Block","src":"11038:98:2","statements":[{"expression":{"arguments":[{"id":926,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":918,"src":"11054:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":927,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"11058:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":925,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"11048:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11048:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":929,"nodeType":"ExpressionStatement","src":"11048:18:2"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11107:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":932,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11099:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":931,"name":"address","nodeType":"ElementaryTypeName","src":"11099:7:2","typeDescriptions":{}}},"id":934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11099:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":935,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":918,"src":"11111:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":936,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"11115:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":937,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":922,"src":"11124:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":930,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"11076:22:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11076:53:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":939,"nodeType":"ExpressionStatement","src":"11076:53:2"}]},"documentation":{"id":916,"nodeType":"StructuredDocumentation","src":"10739:210:2","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":941,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10963:9:2","nodeType":"FunctionDefinition","parameters":{"id":923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":918,"mutability":"mutable","name":"to","nameLocation":"10981:2:2","nodeType":"VariableDeclaration","scope":941,"src":"10973:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":917,"name":"address","nodeType":"ElementaryTypeName","src":"10973:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":920,"mutability":"mutable","name":"tokenId","nameLocation":"10993:7:2","nodeType":"VariableDeclaration","scope":941,"src":"10985:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":919,"name":"uint256","nodeType":"ElementaryTypeName","src":"10985:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":922,"mutability":"mutable","name":"data","nameLocation":"11015:4:2","nodeType":"VariableDeclaration","scope":941,"src":"11002:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":921,"name":"bytes","nodeType":"ElementaryTypeName","src":"11002:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10972:48:2"},"returnParameters":{"id":924,"nodeType":"ParameterList","parameters":[],"src":"11038:0:2"},"scope":1293,"src":"10954:182:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":973,"nodeType":"Block","src":"11503:186:2","statements":[{"assignments":[948],"declarations":[{"constant":false,"id":948,"mutability":"mutable","name":"previousOwner","nameLocation":"11521:13:2","nodeType":"VariableDeclaration","scope":973,"src":"11513:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":947,"name":"address","nodeType":"ElementaryTypeName","src":"11513:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":960,"initialValue":{"arguments":[{"arguments":[{"hexValue":"30","id":952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11553:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":951,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11545:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":950,"name":"address","nodeType":"ElementaryTypeName","src":"11545:7:2","typeDescriptions":{}}},"id":953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11545:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":954,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":944,"src":"11557:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11574:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":956,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11566:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":955,"name":"address","nodeType":"ElementaryTypeName","src":"11566:7:2","typeDescriptions":{}}},"id":958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11566:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":949,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"11537:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11537:40:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11513:64:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":961,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":948,"src":"11591:13:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11616:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":963,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11608:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":962,"name":"address","nodeType":"ElementaryTypeName","src":"11608:7:2","typeDescriptions":{}}},"id":965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11608:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11591:27:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":972,"nodeType":"IfStatement","src":"11587:96:2","trueBody":{"id":971,"nodeType":"Block","src":"11620:63:2","statements":[{"errorCall":{"arguments":[{"id":968,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":944,"src":"11664:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":967,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"11641:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11641:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":970,"nodeType":"RevertStatement","src":"11634:38:2"}]}}]},"documentation":{"id":942,"nodeType":"StructuredDocumentation","src":"11142:315:2","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":974,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"11471:5:2","nodeType":"FunctionDefinition","parameters":{"id":945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":944,"mutability":"mutable","name":"tokenId","nameLocation":"11485:7:2","nodeType":"VariableDeclaration","scope":974,"src":"11477:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":943,"name":"uint256","nodeType":"ElementaryTypeName","src":"11477:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11476:17:2"},"returnParameters":{"id":946,"nodeType":"ParameterList","parameters":[],"src":"11503:0:2"},"scope":1293,"src":"11462:227:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1033,"nodeType":"Block","src":"12084:389:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":984,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"12098:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12112:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":986,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12104:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":985,"name":"address","nodeType":"ElementaryTypeName","src":"12104:7:2","typeDescriptions":{}}},"id":988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12104:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12098:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":998,"nodeType":"IfStatement","src":"12094:87:2","trueBody":{"id":997,"nodeType":"Block","src":"12116:65:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12167:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":992,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12159:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":991,"name":"address","nodeType":"ElementaryTypeName","src":"12159:7:2","typeDescriptions":{}}},"id":994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12159:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":990,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"12137:21:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12137:33:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":996,"nodeType":"RevertStatement","src":"12130:40:2"}]}},{"assignments":[1000],"declarations":[{"constant":false,"id":1000,"mutability":"mutable","name":"previousOwner","nameLocation":"12198:13:2","nodeType":"VariableDeclaration","scope":1033,"src":"12190:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":999,"name":"address","nodeType":"ElementaryTypeName","src":"12190:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1009,"initialValue":{"arguments":[{"id":1002,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"12222:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1003,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"12226:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12243:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1005,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12235:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1004,"name":"address","nodeType":"ElementaryTypeName","src":"12235:7:2","typeDescriptions":{}}},"id":1007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12235:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1001,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"12214:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12214:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"12190:56:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1010,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"12260:13:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12285:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1012,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12277:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1011,"name":"address","nodeType":"ElementaryTypeName","src":"12277:7:2","typeDescriptions":{}}},"id":1014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12277:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12260:27:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1021,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"12362:13:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1022,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":977,"src":"12379:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12362:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1031,"nodeType":"IfStatement","src":"12358:109:2","trueBody":{"id":1030,"nodeType":"Block","src":"12385:82:2","statements":[{"errorCall":{"arguments":[{"id":1025,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":977,"src":"12427:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1026,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"12433:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1027,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"12442:13:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1024,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":209,"src":"12406:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address) pure"}},"id":1028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12406:50:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1029,"nodeType":"RevertStatement","src":"12399:57:2"}]}},"id":1032,"nodeType":"IfStatement","src":"12256:211:2","trueBody":{"id":1020,"nodeType":"Block","src":"12289:63:2","statements":[{"errorCall":{"arguments":[{"id":1017,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"12333:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1016,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"12310:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12310:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1019,"nodeType":"RevertStatement","src":"12303:38:2"}]}}]},"documentation":{"id":975,"nodeType":"StructuredDocumentation","src":"11695:313:2","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":1034,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"12022:9:2","nodeType":"FunctionDefinition","parameters":{"id":982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":977,"mutability":"mutable","name":"from","nameLocation":"12040:4:2","nodeType":"VariableDeclaration","scope":1034,"src":"12032:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":976,"name":"address","nodeType":"ElementaryTypeName","src":"12032:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":979,"mutability":"mutable","name":"to","nameLocation":"12054:2:2","nodeType":"VariableDeclaration","scope":1034,"src":"12046:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":978,"name":"address","nodeType":"ElementaryTypeName","src":"12046:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":981,"mutability":"mutable","name":"tokenId","nameLocation":"12066:7:2","nodeType":"VariableDeclaration","scope":1034,"src":"12058:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":980,"name":"uint256","nodeType":"ElementaryTypeName","src":"12058:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12031:43:2"},"returnParameters":{"id":983,"nodeType":"ParameterList","parameters":[],"src":"12084:0:2"},"scope":1293,"src":"12013:460:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1051,"nodeType":"Block","src":"13481:53:2","statements":[{"expression":{"arguments":[{"id":1045,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"13505:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1046,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"13511:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1047,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"13515:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13524:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1044,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[1052,1078],"referencedDeclaration":1078,"src":"13491:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13491:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1050,"nodeType":"ExpressionStatement","src":"13491:36:2"}]},"documentation":{"id":1035,"nodeType":"StructuredDocumentation","src":"12479:922:2","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":1052,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13415:13:2","nodeType":"FunctionDefinition","parameters":{"id":1042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1037,"mutability":"mutable","name":"from","nameLocation":"13437:4:2","nodeType":"VariableDeclaration","scope":1052,"src":"13429:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1036,"name":"address","nodeType":"ElementaryTypeName","src":"13429:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1039,"mutability":"mutable","name":"to","nameLocation":"13451:2:2","nodeType":"VariableDeclaration","scope":1052,"src":"13443:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1038,"name":"address","nodeType":"ElementaryTypeName","src":"13443:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1041,"mutability":"mutable","name":"tokenId","nameLocation":"13463:7:2","nodeType":"VariableDeclaration","scope":1052,"src":"13455:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1040,"name":"uint256","nodeType":"ElementaryTypeName","src":"13455:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13428:43:2"},"returnParameters":{"id":1043,"nodeType":"ParameterList","parameters":[],"src":"13481:0:2"},"scope":1293,"src":"13406:128:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1077,"nodeType":"Block","src":"13873:102:2","statements":[{"expression":{"arguments":[{"id":1065,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1055,"src":"13893:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1066,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"13899:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1067,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"13903:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1064,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"13883:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13883:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1069,"nodeType":"ExpressionStatement","src":"13883:28:2"},{"expression":{"arguments":[{"id":1071,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1055,"src":"13944:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1072,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"13950:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1073,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"13954:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1074,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"13963:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1070,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"13921:22:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:47:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1076,"nodeType":"ExpressionStatement","src":"13921:47:2"}]},"documentation":{"id":1053,"nodeType":"StructuredDocumentation","src":"13540:226:2","text":" @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":1078,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13780:13:2","nodeType":"FunctionDefinition","parameters":{"id":1062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1055,"mutability":"mutable","name":"from","nameLocation":"13802:4:2","nodeType":"VariableDeclaration","scope":1078,"src":"13794:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1054,"name":"address","nodeType":"ElementaryTypeName","src":"13794:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1057,"mutability":"mutable","name":"to","nameLocation":"13816:2:2","nodeType":"VariableDeclaration","scope":1078,"src":"13808:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1056,"name":"address","nodeType":"ElementaryTypeName","src":"13808:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1059,"mutability":"mutable","name":"tokenId","nameLocation":"13828:7:2","nodeType":"VariableDeclaration","scope":1078,"src":"13820:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1058,"name":"uint256","nodeType":"ElementaryTypeName","src":"13820:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1061,"mutability":"mutable","name":"data","nameLocation":"13850:4:2","nodeType":"VariableDeclaration","scope":1078,"src":"13837:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1060,"name":"bytes","nodeType":"ElementaryTypeName","src":"13837:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13793:62:2"},"returnParameters":{"id":1063,"nodeType":"ParameterList","parameters":[],"src":"13873:0:2"},"scope":1293,"src":"13771:204:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1095,"nodeType":"Block","src":"14488:50:2","statements":[{"expression":{"arguments":[{"id":1089,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1081,"src":"14507:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1090,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1083,"src":"14511:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1091,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"14520:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":1092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14526:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1088,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1096,1162],"referencedDeclaration":1162,"src":"14498:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":1093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14498:33:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1094,"nodeType":"ExpressionStatement","src":"14498:33:2"}]},"documentation":{"id":1079,"nodeType":"StructuredDocumentation","src":"13981:432:2","text":" @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":1096,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14427:8:2","nodeType":"FunctionDefinition","parameters":{"id":1086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1081,"mutability":"mutable","name":"to","nameLocation":"14444:2:2","nodeType":"VariableDeclaration","scope":1096,"src":"14436:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1080,"name":"address","nodeType":"ElementaryTypeName","src":"14436:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1083,"mutability":"mutable","name":"tokenId","nameLocation":"14456:7:2","nodeType":"VariableDeclaration","scope":1096,"src":"14448:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1082,"name":"uint256","nodeType":"ElementaryTypeName","src":"14448:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1085,"mutability":"mutable","name":"auth","nameLocation":"14473:4:2","nodeType":"VariableDeclaration","scope":1096,"src":"14465:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1084,"name":"address","nodeType":"ElementaryTypeName","src":"14465:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14435:43:2"},"returnParameters":{"id":1087,"nodeType":"ParameterList","parameters":[],"src":"14488:0:2"},"scope":1293,"src":"14418:120:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1161,"nodeType":"Block","src":"14814:568:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1108,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1105,"src":"14880:9:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1109,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1103,"src":"14893:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14909:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1111,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14901:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1110,"name":"address","nodeType":"ElementaryTypeName","src":"14901:7:2","typeDescriptions":{}}},"id":1113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14901:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14893:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14880:31:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1154,"nodeType":"IfStatement","src":"14876:460:2","trueBody":{"id":1153,"nodeType":"Block","src":"14913:423:2","statements":[{"assignments":[1117],"declarations":[{"constant":false,"id":1117,"mutability":"mutable","name":"owner","nameLocation":"14935:5:2","nodeType":"VariableDeclaration","scope":1153,"src":"14927:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1116,"name":"address","nodeType":"ElementaryTypeName","src":"14927:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1121,"initialValue":{"arguments":[{"id":1119,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1101,"src":"14957:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1118,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"14943:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14943:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"14927:38:2"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1122,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1103,"src":"15093:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15109:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15101:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1123,"name":"address","nodeType":"ElementaryTypeName","src":"15101:7:2","typeDescriptions":{}}},"id":1126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15101:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15093:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1128,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"15115:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1129,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1103,"src":"15124:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15115:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15093:35:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":1136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"15132:30:2","subExpression":{"arguments":[{"id":1133,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"15150:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1134,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1103,"src":"15157:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1132,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":555,"src":"15133:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15133:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15093:69:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1143,"nodeType":"IfStatement","src":"15089:142:2","trueBody":{"id":1142,"nodeType":"Block","src":"15164:67:2","statements":[{"errorCall":{"arguments":[{"id":1139,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1103,"src":"15211:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1138,"name":"ERC721InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"15189:21:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15189:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1141,"nodeType":"RevertStatement","src":"15182:34:2"}]}},{"condition":{"id":1144,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1105,"src":"15249:9:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1152,"nodeType":"IfStatement","src":"15245:81:2","trueBody":{"id":1151,"nodeType":"Block","src":"15260:66:2","statements":[{"eventCall":{"arguments":[{"id":1146,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"15292:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1147,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"15299:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1148,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1101,"src":"15303:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1145,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"15283:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15283:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1150,"nodeType":"EmitStatement","src":"15278:33:2"}]}}]}},{"expression":{"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1155,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"15346:15:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1157,"indexExpression":{"id":1156,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1101,"src":"15362:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15346:24:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1158,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"15373:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15346:29:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1160,"nodeType":"ExpressionStatement","src":"15346:29:2"}]},"documentation":{"id":1097,"nodeType":"StructuredDocumentation","src":"14544:171:2","text":" @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."},"id":1162,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14729:8:2","nodeType":"FunctionDefinition","parameters":{"id":1106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1099,"mutability":"mutable","name":"to","nameLocation":"14746:2:2","nodeType":"VariableDeclaration","scope":1162,"src":"14738:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1098,"name":"address","nodeType":"ElementaryTypeName","src":"14738:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1101,"mutability":"mutable","name":"tokenId","nameLocation":"14758:7:2","nodeType":"VariableDeclaration","scope":1162,"src":"14750:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1100,"name":"uint256","nodeType":"ElementaryTypeName","src":"14750:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1103,"mutability":"mutable","name":"auth","nameLocation":"14775:4:2","nodeType":"VariableDeclaration","scope":1162,"src":"14767:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1102,"name":"address","nodeType":"ElementaryTypeName","src":"14767:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1105,"mutability":"mutable","name":"emitEvent","nameLocation":"14786:9:2","nodeType":"VariableDeclaration","scope":1162,"src":"14781:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1104,"name":"bool","nodeType":"ElementaryTypeName","src":"14781:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14737:59:2"},"returnParameters":{"id":1107,"nodeType":"ParameterList","parameters":[],"src":"14814:0:2"},"scope":1293,"src":"14720:662:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1198,"nodeType":"Block","src":"15684:219:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1172,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"15698:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15718:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1174,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15710:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1173,"name":"address","nodeType":"ElementaryTypeName","src":"15710:7:2","typeDescriptions":{}}},"id":1176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15710:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15698:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1183,"nodeType":"IfStatement","src":"15694:91:2","trueBody":{"id":1182,"nodeType":"Block","src":"15722:63:2","statements":[{"errorCall":{"arguments":[{"id":1179,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"15765:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1178,"name":"ERC721InvalidOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"15743:21:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15743:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1181,"nodeType":"RevertStatement","src":"15736:38:2"}]}},{"expression":{"id":1190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1184,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"15794:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1187,"indexExpression":{"id":1185,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"15813:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15794:25:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1188,"indexExpression":{"id":1186,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"15820:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15794:35:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1189,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"15832:8:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15794:46:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1191,"nodeType":"ExpressionStatement","src":"15794:46:2"},{"eventCall":{"arguments":[{"id":1193,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"15870:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1194,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"15877:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1195,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"15887:8:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1192,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1327,"src":"15855:14:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15855:41:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1197,"nodeType":"EmitStatement","src":"15850:46:2"}]},"documentation":{"id":1163,"nodeType":"StructuredDocumentation","src":"15388:198:2","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."},"id":1199,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"15600:18:2","nodeType":"FunctionDefinition","parameters":{"id":1170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1165,"mutability":"mutable","name":"owner","nameLocation":"15627:5:2","nodeType":"VariableDeclaration","scope":1199,"src":"15619:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1164,"name":"address","nodeType":"ElementaryTypeName","src":"15619:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1167,"mutability":"mutable","name":"operator","nameLocation":"15642:8:2","nodeType":"VariableDeclaration","scope":1199,"src":"15634:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1166,"name":"address","nodeType":"ElementaryTypeName","src":"15634:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1169,"mutability":"mutable","name":"approved","nameLocation":"15657:8:2","nodeType":"VariableDeclaration","scope":1199,"src":"15652:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1168,"name":"bool","nodeType":"ElementaryTypeName","src":"15652:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15618:48:2"},"returnParameters":{"id":1171,"nodeType":"ParameterList","parameters":[],"src":"15684:0:2"},"scope":1293,"src":"15591:312:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1227,"nodeType":"Block","src":"16210:169:2","statements":[{"assignments":[1208],"declarations":[{"constant":false,"id":1208,"mutability":"mutable","name":"owner","nameLocation":"16228:5:2","nodeType":"VariableDeclaration","scope":1227,"src":"16220:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1207,"name":"address","nodeType":"ElementaryTypeName","src":"16220:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1212,"initialValue":{"arguments":[{"id":1210,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1202,"src":"16245:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1209,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"16236:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16236:17:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"16220:33:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1213,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1208,"src":"16267:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16284:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1215,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16276:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1214,"name":"address","nodeType":"ElementaryTypeName","src":"16276:7:2","typeDescriptions":{}}},"id":1217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16276:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16267:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1224,"nodeType":"IfStatement","src":"16263:88:2","trueBody":{"id":1223,"nodeType":"Block","src":"16288:63:2","statements":[{"errorCall":{"arguments":[{"id":1220,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1202,"src":"16332:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1219,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"16309:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16309:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1222,"nodeType":"RevertStatement","src":"16302:38:2"}]}},{"expression":{"id":1225,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1208,"src":"16367:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1206,"id":1226,"nodeType":"Return","src":"16360:12:2"}]},"documentation":{"id":1200,"nodeType":"StructuredDocumentation","src":"15909:224:2","text":" @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."},"id":1228,"implemented":true,"kind":"function","modifiers":[],"name":"_requireOwned","nameLocation":"16147:13:2","nodeType":"FunctionDefinition","parameters":{"id":1203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1202,"mutability":"mutable","name":"tokenId","nameLocation":"16169:7:2","nodeType":"VariableDeclaration","scope":1228,"src":"16161:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1201,"name":"uint256","nodeType":"ElementaryTypeName","src":"16161:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16160:17:2"},"returnParameters":{"id":1206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1205,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1228,"src":"16201:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1204,"name":"address","nodeType":"ElementaryTypeName","src":"16201:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16200:9:2"},"scope":1293,"src":"16138:241:2","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1291,"nodeType":"Block","src":"17020:680:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1240,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"17034:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17037:4:2","memberName":"code","nodeType":"MemberAccess","src":"17034:7:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17042:6:2","memberName":"length","nodeType":"MemberAccess","src":"17034:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17051:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17034:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1290,"nodeType":"IfStatement","src":"17030:664:2","trueBody":{"id":1289,"nodeType":"Block","src":"17054:640:2","statements":[{"clauses":[{"block":{"id":1269,"nodeType":"Block","src":"17168:162:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1258,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"17190:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1259,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"17200:15:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1428_$","typeString":"type(contract IERC721Receiver)"}},"id":1260,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"17216:16:2","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1427,"src":"17200:32:2","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":1261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"17233:8:2","memberName":"selector","nodeType":"MemberAccess","src":"17200:41:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"17190:51:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1268,"nodeType":"IfStatement","src":"17186:130:2","trueBody":{"id":1267,"nodeType":"Block","src":"17243:73:2","statements":[{"errorCall":{"arguments":[{"id":1264,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"17294:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1263,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"17272:21:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17272:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1266,"nodeType":"RevertStatement","src":"17265:32:2"}]}}]},"errorName":"","id":1270,"nodeType":"TryCatchClause","parameters":{"id":1257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1256,"mutability":"mutable","name":"retval","nameLocation":"17160:6:2","nodeType":"VariableDeclaration","scope":1270,"src":"17153:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1255,"name":"bytes4","nodeType":"ElementaryTypeName","src":"17153:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"17152:15:2"},"src":"17144:186:2"},{"block":{"id":1286,"nodeType":"Block","src":"17359:325:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1274,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"17381:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17388:6:2","memberName":"length","nodeType":"MemberAccess","src":"17381:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17398:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17381:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1284,"nodeType":"Block","src":"17480:190:2","statements":[{"AST":{"nodeType":"YulBlock","src":"17566:86:2","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17603:2:2","type":"","value":"32"},{"name":"reason","nodeType":"YulIdentifier","src":"17607:6:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17599:3:2"},"nodeType":"YulFunctionCall","src":"17599:15:2"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"17622:6:2"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17616:5:2"},"nodeType":"YulFunctionCall","src":"17616:13:2"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17592:6:2"},"nodeType":"YulFunctionCall","src":"17592:38:2"},"nodeType":"YulExpressionStatement","src":"17592:38:2"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1272,"isOffset":false,"isSlot":false,"src":"17607:6:2","valueSize":1},{"declaration":1272,"isOffset":false,"isSlot":false,"src":"17622:6:2","valueSize":1}],"id":1283,"nodeType":"InlineAssembly","src":"17557:95:2"}]},"id":1285,"nodeType":"IfStatement","src":"17377:293:2","trueBody":{"id":1282,"nodeType":"Block","src":"17401:73:2","statements":[{"errorCall":{"arguments":[{"id":1279,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"17452:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1278,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"17430:21:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17430:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1281,"nodeType":"RevertStatement","src":"17423:32:2"}]}}]},"errorName":"","id":1287,"nodeType":"TryCatchClause","parameters":{"id":1273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1272,"mutability":"mutable","name":"reason","nameLocation":"17351:6:2","nodeType":"VariableDeclaration","scope":1287,"src":"17338:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1271,"name":"bytes","nodeType":"ElementaryTypeName","src":"17338:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"17337:21:2"},"src":"17331:353:2"}],"externalCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1249,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"17109:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17109:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1251,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"17123:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1252,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"17129:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1253,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"17138:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1246,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"17088:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1245,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"17072:15:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1428_$","typeString":"type(contract IERC721Receiver)"}},"id":1247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17072:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$1428","typeString":"contract IERC721Receiver"}},"id":1248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17092:16:2","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1427,"src":"17072:36:2","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":1254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17072:71:2","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1288,"nodeType":"TryStatement","src":"17068:616:2"}]}}]},"documentation":{"id":1229,"nodeType":"StructuredDocumentation","src":"16385:528:2","text":" @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call"},"id":1292,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOnERC721Received","nameLocation":"16927:22:2","nodeType":"FunctionDefinition","parameters":{"id":1238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1231,"mutability":"mutable","name":"from","nameLocation":"16958:4:2","nodeType":"VariableDeclaration","scope":1292,"src":"16950:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1230,"name":"address","nodeType":"ElementaryTypeName","src":"16950:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1233,"mutability":"mutable","name":"to","nameLocation":"16972:2:2","nodeType":"VariableDeclaration","scope":1292,"src":"16964:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1232,"name":"address","nodeType":"ElementaryTypeName","src":"16964:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1235,"mutability":"mutable","name":"tokenId","nameLocation":"16984:7:2","nodeType":"VariableDeclaration","scope":1292,"src":"16976:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1234,"name":"uint256","nodeType":"ElementaryTypeName","src":"16976:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1237,"mutability":"mutable","name":"data","nameLocation":"17006:4:2","nodeType":"VariableDeclaration","scope":1292,"src":"16993:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1236,"name":"bytes","nodeType":"ElementaryTypeName","src":"16993:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16949:62:2"},"returnParameters":{"id":1239,"nodeType":"ParameterList","parameters":[],"src":"17020:0:2"},"scope":1293,"src":"16918:782:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":1294,"src":"776:16926:2","usedErrors":[195,200,209,214,219,226,231,236],"usedEvents":[1309,1318,1327]}],"src":"107:17596:2"},"id":2},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[2309],"IERC721":[1410]},"id":1411,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1295,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:3"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1297,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1411,"sourceUnit":2310,"src":"134:62:3","symbolAliases":[{"foreign":{"id":1296,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2309,"src":"142:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1299,"name":"IERC165","nameLocations":["287:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":2309,"src":"287:7:3"},"id":1300,"nodeType":"InheritanceSpecifier","src":"287:7:3"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":1298,"nodeType":"StructuredDocumentation","src":"198:67:3","text":" @dev Required interface of an ERC721 compliant contract."},"fullyImplemented":false,"id":1410,"linearizedBaseContracts":[1410,2309],"name":"IERC721","nameLocation":"276:7:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1301,"nodeType":"StructuredDocumentation","src":"301:88:3","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1309,"name":"Transfer","nameLocation":"400:8:3","nodeType":"EventDefinition","parameters":{"id":1308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1303,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"425:4:3","nodeType":"VariableDeclaration","scope":1309,"src":"409:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1302,"name":"address","nodeType":"ElementaryTypeName","src":"409:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1305,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"447:2:3","nodeType":"VariableDeclaration","scope":1309,"src":"431:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1304,"name":"address","nodeType":"ElementaryTypeName","src":"431:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1307,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"467:7:3","nodeType":"VariableDeclaration","scope":1309,"src":"451:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1306,"name":"uint256","nodeType":"ElementaryTypeName","src":"451:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"408:67:3"},"src":"394:82:3"},{"anonymous":false,"documentation":{"id":1310,"nodeType":"StructuredDocumentation","src":"482:94:3","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1318,"name":"Approval","nameLocation":"587:8:3","nodeType":"EventDefinition","parameters":{"id":1317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1312,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"612:5:3","nodeType":"VariableDeclaration","scope":1318,"src":"596:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1311,"name":"address","nodeType":"ElementaryTypeName","src":"596:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1314,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"635:8:3","nodeType":"VariableDeclaration","scope":1318,"src":"619:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1313,"name":"address","nodeType":"ElementaryTypeName","src":"619:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1316,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"661:7:3","nodeType":"VariableDeclaration","scope":1318,"src":"645:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1315,"name":"uint256","nodeType":"ElementaryTypeName","src":"645:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"595:74:3"},"src":"581:89:3"},{"anonymous":false,"documentation":{"id":1319,"nodeType":"StructuredDocumentation","src":"676:117:3","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":1327,"name":"ApprovalForAll","nameLocation":"804:14:3","nodeType":"EventDefinition","parameters":{"id":1326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1321,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"835:5:3","nodeType":"VariableDeclaration","scope":1327,"src":"819:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1320,"name":"address","nodeType":"ElementaryTypeName","src":"819:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1323,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"858:8:3","nodeType":"VariableDeclaration","scope":1327,"src":"842:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1322,"name":"address","nodeType":"ElementaryTypeName","src":"842:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1325,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"873:8:3","nodeType":"VariableDeclaration","scope":1327,"src":"868:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1324,"name":"bool","nodeType":"ElementaryTypeName","src":"868:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"818:64:3"},"src":"798:85:3"},{"documentation":{"id":1328,"nodeType":"StructuredDocumentation","src":"889:76:3","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":1335,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"979:9:3","nodeType":"FunctionDefinition","parameters":{"id":1331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1330,"mutability":"mutable","name":"owner","nameLocation":"997:5:3","nodeType":"VariableDeclaration","scope":1335,"src":"989:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1329,"name":"address","nodeType":"ElementaryTypeName","src":"989:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"988:15:3"},"returnParameters":{"id":1334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1333,"mutability":"mutable","name":"balance","nameLocation":"1035:7:3","nodeType":"VariableDeclaration","scope":1335,"src":"1027:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1332,"name":"uint256","nodeType":"ElementaryTypeName","src":"1027:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1026:17:3"},"scope":1410,"src":"970:74:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1336,"nodeType":"StructuredDocumentation","src":"1050:131:3","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":1343,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1195:7:3","nodeType":"FunctionDefinition","parameters":{"id":1339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1338,"mutability":"mutable","name":"tokenId","nameLocation":"1211:7:3","nodeType":"VariableDeclaration","scope":1343,"src":"1203:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1337,"name":"uint256","nodeType":"ElementaryTypeName","src":"1203:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1202:17:3"},"returnParameters":{"id":1342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1341,"mutability":"mutable","name":"owner","nameLocation":"1251:5:3","nodeType":"VariableDeclaration","scope":1343,"src":"1243:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1340,"name":"address","nodeType":"ElementaryTypeName","src":"1243:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1242:15:3"},"scope":1410,"src":"1186:72:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1344,"nodeType":"StructuredDocumentation","src":"1264:565:3","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":1355,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1843:16:3","nodeType":"FunctionDefinition","parameters":{"id":1353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1346,"mutability":"mutable","name":"from","nameLocation":"1868:4:3","nodeType":"VariableDeclaration","scope":1355,"src":"1860:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1345,"name":"address","nodeType":"ElementaryTypeName","src":"1860:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1348,"mutability":"mutable","name":"to","nameLocation":"1882:2:3","nodeType":"VariableDeclaration","scope":1355,"src":"1874:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1347,"name":"address","nodeType":"ElementaryTypeName","src":"1874:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1350,"mutability":"mutable","name":"tokenId","nameLocation":"1894:7:3","nodeType":"VariableDeclaration","scope":1355,"src":"1886:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1349,"name":"uint256","nodeType":"ElementaryTypeName","src":"1886:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1352,"mutability":"mutable","name":"data","nameLocation":"1918:4:3","nodeType":"VariableDeclaration","scope":1355,"src":"1903:19:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1351,"name":"bytes","nodeType":"ElementaryTypeName","src":"1903:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1859:64:3"},"returnParameters":{"id":1354,"nodeType":"ParameterList","parameters":[],"src":"1932:0:3"},"scope":1410,"src":"1834:99:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1356,"nodeType":"StructuredDocumentation","src":"1939:705:3","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":1365,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2658:16:3","nodeType":"FunctionDefinition","parameters":{"id":1363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1358,"mutability":"mutable","name":"from","nameLocation":"2683:4:3","nodeType":"VariableDeclaration","scope":1365,"src":"2675:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1357,"name":"address","nodeType":"ElementaryTypeName","src":"2675:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1360,"mutability":"mutable","name":"to","nameLocation":"2697:2:3","nodeType":"VariableDeclaration","scope":1365,"src":"2689:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1359,"name":"address","nodeType":"ElementaryTypeName","src":"2689:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1362,"mutability":"mutable","name":"tokenId","nameLocation":"2709:7:3","nodeType":"VariableDeclaration","scope":1365,"src":"2701:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1361,"name":"uint256","nodeType":"ElementaryTypeName","src":"2701:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2674:43:3"},"returnParameters":{"id":1364,"nodeType":"ParameterList","parameters":[],"src":"2726:0:3"},"scope":1410,"src":"2649:78:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1366,"nodeType":"StructuredDocumentation","src":"2733:732:3","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1375,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3479:12:3","nodeType":"FunctionDefinition","parameters":{"id":1373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1368,"mutability":"mutable","name":"from","nameLocation":"3500:4:3","nodeType":"VariableDeclaration","scope":1375,"src":"3492:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1367,"name":"address","nodeType":"ElementaryTypeName","src":"3492:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1370,"mutability":"mutable","name":"to","nameLocation":"3514:2:3","nodeType":"VariableDeclaration","scope":1375,"src":"3506:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1369,"name":"address","nodeType":"ElementaryTypeName","src":"3506:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1372,"mutability":"mutable","name":"tokenId","nameLocation":"3526:7:3","nodeType":"VariableDeclaration","scope":1375,"src":"3518:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1371,"name":"uint256","nodeType":"ElementaryTypeName","src":"3518:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:43:3"},"returnParameters":{"id":1374,"nodeType":"ParameterList","parameters":[],"src":"3543:0:3"},"scope":1410,"src":"3470:74:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1376,"nodeType":"StructuredDocumentation","src":"3550:452:3","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1383,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4016:7:3","nodeType":"FunctionDefinition","parameters":{"id":1381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1378,"mutability":"mutable","name":"to","nameLocation":"4032:2:3","nodeType":"VariableDeclaration","scope":1383,"src":"4024:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1377,"name":"address","nodeType":"ElementaryTypeName","src":"4024:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1380,"mutability":"mutable","name":"tokenId","nameLocation":"4044:7:3","nodeType":"VariableDeclaration","scope":1383,"src":"4036:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1379,"name":"uint256","nodeType":"ElementaryTypeName","src":"4036:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4023:29:3"},"returnParameters":{"id":1382,"nodeType":"ParameterList","parameters":[],"src":"4061:0:3"},"scope":1410,"src":"4007:55:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1384,"nodeType":"StructuredDocumentation","src":"4068:315:3","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":1391,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4397:17:3","nodeType":"FunctionDefinition","parameters":{"id":1389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1386,"mutability":"mutable","name":"operator","nameLocation":"4423:8:3","nodeType":"VariableDeclaration","scope":1391,"src":"4415:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1385,"name":"address","nodeType":"ElementaryTypeName","src":"4415:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1388,"mutability":"mutable","name":"approved","nameLocation":"4438:8:3","nodeType":"VariableDeclaration","scope":1391,"src":"4433:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1387,"name":"bool","nodeType":"ElementaryTypeName","src":"4433:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4414:33:3"},"returnParameters":{"id":1390,"nodeType":"ParameterList","parameters":[],"src":"4456:0:3"},"scope":1410,"src":"4388:69:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1392,"nodeType":"StructuredDocumentation","src":"4463:139:3","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":1399,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4616:11:3","nodeType":"FunctionDefinition","parameters":{"id":1395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1394,"mutability":"mutable","name":"tokenId","nameLocation":"4636:7:3","nodeType":"VariableDeclaration","scope":1399,"src":"4628:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1393,"name":"uint256","nodeType":"ElementaryTypeName","src":"4628:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4627:17:3"},"returnParameters":{"id":1398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1397,"mutability":"mutable","name":"operator","nameLocation":"4676:8:3","nodeType":"VariableDeclaration","scope":1399,"src":"4668:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1396,"name":"address","nodeType":"ElementaryTypeName","src":"4668:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4667:18:3"},"scope":1410,"src":"4607:79:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1400,"nodeType":"StructuredDocumentation","src":"4692:138:3","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":1409,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4844:16:3","nodeType":"FunctionDefinition","parameters":{"id":1405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1402,"mutability":"mutable","name":"owner","nameLocation":"4869:5:3","nodeType":"VariableDeclaration","scope":1409,"src":"4861:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1401,"name":"address","nodeType":"ElementaryTypeName","src":"4861:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1404,"mutability":"mutable","name":"operator","nameLocation":"4884:8:3","nodeType":"VariableDeclaration","scope":1409,"src":"4876:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1403,"name":"address","nodeType":"ElementaryTypeName","src":"4876:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4860:33:3"},"returnParameters":{"id":1408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1407,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1409,"src":"4917:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1406,"name":"bool","nodeType":"ElementaryTypeName","src":"4917:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4916:6:3"},"scope":1410,"src":"4835:88:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1411,"src":"266:4659:3","usedErrors":[],"usedEvents":[1309,1318,1327]}],"src":"108:4818:3"},"id":3},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[1428]},"id":1429,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1412,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"116:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":1413,"nodeType":"StructuredDocumentation","src":"142:152:4","text":" @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."},"fullyImplemented":false,"id":1428,"linearizedBaseContracts":[1428],"name":"IERC721Receiver","nameLocation":"305:15:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1414,"nodeType":"StructuredDocumentation","src":"327:500:4","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":1427,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"841:16:4","nodeType":"FunctionDefinition","parameters":{"id":1423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1416,"mutability":"mutable","name":"operator","nameLocation":"875:8:4","nodeType":"VariableDeclaration","scope":1427,"src":"867:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1415,"name":"address","nodeType":"ElementaryTypeName","src":"867:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1418,"mutability":"mutable","name":"from","nameLocation":"901:4:4","nodeType":"VariableDeclaration","scope":1427,"src":"893:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1417,"name":"address","nodeType":"ElementaryTypeName","src":"893:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1420,"mutability":"mutable","name":"tokenId","nameLocation":"923:7:4","nodeType":"VariableDeclaration","scope":1427,"src":"915:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1419,"name":"uint256","nodeType":"ElementaryTypeName","src":"915:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1422,"mutability":"mutable","name":"data","nameLocation":"955:4:4","nodeType":"VariableDeclaration","scope":1427,"src":"940:19:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1421,"name":"bytes","nodeType":"ElementaryTypeName","src":"940:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"857:108:4"},"returnParameters":{"id":1426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1425,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1427,"src":"984:6:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1424,"name":"bytes4","nodeType":"ElementaryTypeName","src":"984:6:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"983:8:4"},"scope":1428,"src":"832:160:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1429,"src":"295:699:4","usedErrors":[],"usedEvents":[]}],"src":"116:879:4"},"id":4},"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol","exportedSymbols":{"ERC721":[1293],"ERC721Enumerable":[1812],"IERC165":[2309],"IERC721Enumerable":[1844]},"id":1813,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1430,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"128:24:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"../ERC721.sol","id":1432,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1813,"sourceUnit":1294,"src":"154:37:5","symbolAliases":[{"foreign":{"id":1431,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"162:6:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol","file":"./IERC721Enumerable.sol","id":1434,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1813,"sourceUnit":1845,"src":"192:58:5","symbolAliases":[{"foreign":{"id":1433,"name":"IERC721Enumerable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1844,"src":"200:17:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../../utils/introspection/ERC165.sol","id":1436,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1813,"sourceUnit":2298,"src":"251:64:5","symbolAliases":[{"foreign":{"id":1435,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2309,"src":"259:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1438,"name":"ERC721","nameLocations":["746:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":1293,"src":"746:6:5"},"id":1439,"nodeType":"InheritanceSpecifier","src":"746:6:5"},{"baseName":{"id":1440,"name":"IERC721Enumerable","nameLocations":["754:17:5"],"nodeType":"IdentifierPath","referencedDeclaration":1844,"src":"754:17:5"},"id":1441,"nodeType":"InheritanceSpecifier","src":"754:17:5"}],"canonicalName":"ERC721Enumerable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1437,"nodeType":"StructuredDocumentation","src":"317:390:5","text":" @dev This implements an optional extension of {ERC721} defined in the EIP that adds enumerability\n of all the token ids in the contract as well as all token ids owned by each account.\n CAUTION: `ERC721` extensions that implement custom `balanceOf` logic, such as `ERC721Consecutive`,\n interfere with enumerability and should not be used together with `ERC721Enumerable`."},"fullyImplemented":true,"id":1812,"linearizedBaseContracts":[1812,1844,1293,237,1872,1410,2297,2309,1949],"name":"ERC721Enumerable","nameLocation":"726:16:5","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1447,"mutability":"mutable","name":"_ownedTokens","nameLocation":"846:12:5","nodeType":"VariableDeclaration","scope":1812,"src":"778:80:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"},"typeName":{"id":1446,"keyName":"owner","keyNameLocation":"794:5:5","keyType":{"id":1442,"name":"address","nodeType":"ElementaryTypeName","src":"786:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"778:59:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1445,"keyName":"index","keyNameLocation":"819:5:5","keyType":{"id":1443,"name":"uint256","nodeType":"ElementaryTypeName","src":"811:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"803:33:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1444,"name":"uint256","nodeType":"ElementaryTypeName","src":"828:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":1451,"mutability":"mutable","name":"_ownedTokensIndex","nameLocation":"908:17:5","nodeType":"VariableDeclaration","scope":1812,"src":"864:61:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":1450,"keyName":"tokenId","keyNameLocation":"880:7:5","keyType":{"id":1448,"name":"uint256","nodeType":"ElementaryTypeName","src":"872:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"864:35:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1449,"name":"uint256","nodeType":"ElementaryTypeName","src":"891:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":1454,"mutability":"mutable","name":"_allTokens","nameLocation":"950:10:5","nodeType":"VariableDeclaration","scope":1812,"src":"932:28:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[]"},"typeName":{"baseType":{"id":1452,"name":"uint256","nodeType":"ElementaryTypeName","src":"932:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1453,"nodeType":"ArrayTypeName","src":"932:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"private"},{"constant":false,"id":1458,"mutability":"mutable","name":"_allTokensIndex","nameLocation":"1010:15:5","nodeType":"VariableDeclaration","scope":1812,"src":"966:59:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":1457,"keyName":"tokenId","keyNameLocation":"982:7:5","keyType":{"id":1455,"name":"uint256","nodeType":"ElementaryTypeName","src":"974:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"966:35:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1456,"name":"uint256","nodeType":"ElementaryTypeName","src":"993:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"documentation":{"id":1459,"nodeType":"StructuredDocumentation","src":"1032:168:5","text":" @dev An `owner`'s token query was out of bounds for `index`.\n NOTE: The owner being `address(0)` indicates a global out of bounds index."},"errorSelector":"a57d13dc","id":1465,"name":"ERC721OutOfBoundsIndex","nameLocation":"1211:22:5","nodeType":"ErrorDefinition","parameters":{"id":1464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1461,"mutability":"mutable","name":"owner","nameLocation":"1242:5:5","nodeType":"VariableDeclaration","scope":1465,"src":"1234:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1460,"name":"address","nodeType":"ElementaryTypeName","src":"1234:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1463,"mutability":"mutable","name":"index","nameLocation":"1257:5:5","nodeType":"VariableDeclaration","scope":1465,"src":"1249:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1462,"name":"uint256","nodeType":"ElementaryTypeName","src":"1249:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1233:30:5"},"src":"1205:59:5"},{"documentation":{"id":1466,"nodeType":"StructuredDocumentation","src":"1270:50:5","text":" @dev Batch mint is not allowed."},"errorSelector":"59171fc1","id":1468,"name":"ERC721EnumerableForbiddenBatchMint","nameLocation":"1331:34:5","nodeType":"ErrorDefinition","parameters":{"id":1467,"nodeType":"ParameterList","parameters":[],"src":"1365:2:5"},"src":"1325:43:5"},{"baseFunctions":[385,2308],"body":{"id":1491,"nodeType":"Block","src":"1543:114:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1479,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"1560:11:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1481,"name":"IERC721Enumerable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1844,"src":"1580:17:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Enumerable_$1844_$","typeString":"type(contract IERC721Enumerable)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Enumerable_$1844_$","typeString":"type(contract IERC721Enumerable)"}],"id":1480,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1575:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1575:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Enumerable_$1844","typeString":"type(contract IERC721Enumerable)"}},"id":1483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1599:11:5","memberName":"interfaceId","nodeType":"MemberAccess","src":"1575:35:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1560:50:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1487,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"1638:11:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":1485,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1614:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721Enumerable_$1812_$","typeString":"type(contract super ERC721Enumerable)"}},"id":1486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1620:17:5","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":385,"src":"1614:23:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":1488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1614:36:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1560:90:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1478,"id":1490,"nodeType":"Return","src":"1553:97:5"}]},"documentation":{"id":1469,"nodeType":"StructuredDocumentation","src":"1374:56:5","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":1492,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1444:17:5","nodeType":"FunctionDefinition","overrides":{"id":1475,"nodeType":"OverrideSpecifier","overrides":[{"id":1473,"name":"IERC165","nameLocations":["1511:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":2309,"src":"1511:7:5"},{"id":1474,"name":"ERC721","nameLocations":["1520:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":1293,"src":"1520:6:5"}],"src":"1502:25:5"},"parameters":{"id":1472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1471,"mutability":"mutable","name":"interfaceId","nameLocation":"1469:11:5","nodeType":"VariableDeclaration","scope":1492,"src":"1462:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1470,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1462:6:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1461:20:5"},"returnParameters":{"id":1478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1477,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1492,"src":"1537:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1476,"name":"bool","nodeType":"ElementaryTypeName","src":"1537:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1536:6:5"},"scope":1812,"src":"1435:222:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1835],"body":{"id":1520,"nodeType":"Block","src":"1833:158:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1502,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"1847:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"arguments":[{"id":1504,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"1866:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1503,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":413,"src":"1856:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1856:16:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1847:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1513,"nodeType":"IfStatement","src":"1843:99:5","trueBody":{"id":1512,"nodeType":"Block","src":"1874:68:5","statements":[{"errorCall":{"arguments":[{"id":1508,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"1918:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1509,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"1925:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1507,"name":"ERC721OutOfBoundsIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"1895:22:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":1510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1895:36:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1511,"nodeType":"RevertStatement","src":"1888:43:5"}]}},{"expression":{"baseExpression":{"baseExpression":{"id":1514,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"1958:12:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":1516,"indexExpression":{"id":1515,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"1971:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1958:19:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1518,"indexExpression":{"id":1517,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"1978:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1958:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1501,"id":1519,"nodeType":"Return","src":"1951:33:5"}]},"documentation":{"id":1493,"nodeType":"StructuredDocumentation","src":"1663:68:5","text":" @dev See {IERC721Enumerable-tokenOfOwnerByIndex}."},"functionSelector":"2f745c59","id":1521,"implemented":true,"kind":"function","modifiers":[],"name":"tokenOfOwnerByIndex","nameLocation":"1745:19:5","nodeType":"FunctionDefinition","parameters":{"id":1498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1495,"mutability":"mutable","name":"owner","nameLocation":"1773:5:5","nodeType":"VariableDeclaration","scope":1521,"src":"1765:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1494,"name":"address","nodeType":"ElementaryTypeName","src":"1765:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1497,"mutability":"mutable","name":"index","nameLocation":"1788:5:5","nodeType":"VariableDeclaration","scope":1521,"src":"1780:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1496,"name":"uint256","nodeType":"ElementaryTypeName","src":"1780:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1764:30:5"},"returnParameters":{"id":1501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1500,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1521,"src":"1824:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1499,"name":"uint256","nodeType":"ElementaryTypeName","src":"1824:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1823:9:5"},"scope":1812,"src":"1736:255:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1825],"body":{"id":1530,"nodeType":"Block","src":"2123:41:5","statements":[{"expression":{"expression":{"id":1527,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"2140:10:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2151:6:5","memberName":"length","nodeType":"MemberAccess","src":"2140:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1526,"id":1529,"nodeType":"Return","src":"2133:24:5"}]},"documentation":{"id":1522,"nodeType":"StructuredDocumentation","src":"1997:60:5","text":" @dev See {IERC721Enumerable-totalSupply}."},"functionSelector":"18160ddd","id":1531,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"2071:11:5","nodeType":"FunctionDefinition","parameters":{"id":1523,"nodeType":"ParameterList","parameters":[],"src":"2082:2:5"},"returnParameters":{"id":1526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1525,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1531,"src":"2114:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1524,"name":"uint256","nodeType":"ElementaryTypeName","src":"2114:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2113:9:5"},"scope":1812,"src":"2062:102:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1843],"body":{"id":1557,"nodeType":"Block","src":"2311:151:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1539,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1534,"src":"2325:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1540,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"2334:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2334:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2325:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1552,"nodeType":"IfStatement","src":"2321:101:5","trueBody":{"id":1551,"nodeType":"Block","src":"2349:73:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2401:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1545,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2393:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1544,"name":"address","nodeType":"ElementaryTypeName","src":"2393:7:5","typeDescriptions":{}}},"id":1547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2393:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1548,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1534,"src":"2405:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1543,"name":"ERC721OutOfBoundsIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"2370:22:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":1549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2370:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1550,"nodeType":"RevertStatement","src":"2363:48:5"}]}},{"expression":{"baseExpression":{"id":1553,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"2438:10:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1555,"indexExpression":{"id":1554,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1534,"src":"2449:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2438:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1538,"id":1556,"nodeType":"Return","src":"2431:24:5"}]},"documentation":{"id":1532,"nodeType":"StructuredDocumentation","src":"2170:61:5","text":" @dev See {IERC721Enumerable-tokenByIndex}."},"functionSelector":"4f6ccce7","id":1558,"implemented":true,"kind":"function","modifiers":[],"name":"tokenByIndex","nameLocation":"2245:12:5","nodeType":"FunctionDefinition","parameters":{"id":1535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1534,"mutability":"mutable","name":"index","nameLocation":"2266:5:5","nodeType":"VariableDeclaration","scope":1558,"src":"2258:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1533,"name":"uint256","nodeType":"ElementaryTypeName","src":"2258:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2257:15:5"},"returnParameters":{"id":1538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1537,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1558,"src":"2302:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1536,"name":"uint256","nodeType":"ElementaryTypeName","src":"2302:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2301:9:5"},"scope":1812,"src":"2236:226:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[850],"body":{"id":1626,"nodeType":"Block","src":"2622:521:5","statements":[{"assignments":[1572],"declarations":[{"constant":false,"id":1572,"mutability":"mutable","name":"previousOwner","nameLocation":"2640:13:5","nodeType":"VariableDeclaration","scope":1626,"src":"2632:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1571,"name":"address","nodeType":"ElementaryTypeName","src":"2632:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1579,"initialValue":{"arguments":[{"id":1575,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1561,"src":"2670:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1576,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"2674:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1577,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1565,"src":"2683:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1573,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2656:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721Enumerable_$1812_$","typeString":"type(contract super ERC721Enumerable)"}},"id":1574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2662:7:5","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":850,"src":"2656:13:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2656:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2632:56:5"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1580,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1572,"src":"2703:13:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2728:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1582,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2720:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1581,"name":"address","nodeType":"ElementaryTypeName","src":"2720:7:5","typeDescriptions":{}}},"id":1584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2720:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2703:27:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1591,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1572,"src":"2807:13:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1592,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1561,"src":"2824:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2807:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1600,"nodeType":"IfStatement","src":"2803:106:5","trueBody":{"id":1599,"nodeType":"Block","src":"2828:81:5","statements":[{"expression":{"arguments":[{"id":1595,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1572,"src":"2875:13:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1596,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"2890:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1594,"name":"_removeTokenFromOwnerEnumeration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1738,"src":"2842:32:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2842:56:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1598,"nodeType":"ExpressionStatement","src":"2842:56:5"}]}},"id":1601,"nodeType":"IfStatement","src":"2699:210:5","trueBody":{"id":1590,"nodeType":"Block","src":"2732:65:5","statements":[{"expression":{"arguments":[{"id":1587,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"2778:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1586,"name":"_addTokenToAllTokensEnumeration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"2746:31:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2746:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1589,"nodeType":"ExpressionStatement","src":"2746:40:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1602,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1561,"src":"2922:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2936:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1604,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2928:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1603,"name":"address","nodeType":"ElementaryTypeName","src":"2928:7:5","typeDescriptions":{}}},"id":1606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2928:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2922:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1613,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1572,"src":"3020:13:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1614,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1561,"src":"3037:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1622,"nodeType":"IfStatement","src":"3016:90:5","trueBody":{"id":1621,"nodeType":"Block","src":"3041:65:5","statements":[{"expression":{"arguments":[{"id":1617,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1561,"src":"3083:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1618,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"3087:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1616,"name":"_addTokenToOwnerEnumeration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1658,"src":"3055:27:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3055:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1620,"nodeType":"ExpressionStatement","src":"3055:40:5"}]}},"id":1623,"nodeType":"IfStatement","src":"2918:188:5","trueBody":{"id":1612,"nodeType":"Block","src":"2940:70:5","statements":[{"expression":{"arguments":[{"id":1609,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"2991:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1608,"name":"_removeTokenFromAllTokensEnumeration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"2954:36:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2954:45:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1611,"nodeType":"ExpressionStatement","src":"2954:45:5"}]}},{"expression":{"id":1624,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1572,"src":"3123:13:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1570,"id":1625,"nodeType":"Return","src":"3116:20:5"}]},"documentation":{"id":1559,"nodeType":"StructuredDocumentation","src":"2468:45:5","text":" @dev See {ERC721-_update}."},"id":1627,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"2527:7:5","nodeType":"FunctionDefinition","overrides":{"id":1567,"nodeType":"OverrideSpecifier","overrides":[],"src":"2595:8:5"},"parameters":{"id":1566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1561,"mutability":"mutable","name":"to","nameLocation":"2543:2:5","nodeType":"VariableDeclaration","scope":1627,"src":"2535:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1560,"name":"address","nodeType":"ElementaryTypeName","src":"2535:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1563,"mutability":"mutable","name":"tokenId","nameLocation":"2555:7:5","nodeType":"VariableDeclaration","scope":1627,"src":"2547:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1562,"name":"uint256","nodeType":"ElementaryTypeName","src":"2547:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1565,"mutability":"mutable","name":"auth","nameLocation":"2572:4:5","nodeType":"VariableDeclaration","scope":1627,"src":"2564:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1564,"name":"address","nodeType":"ElementaryTypeName","src":"2564:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2534:43:5"},"returnParameters":{"id":1570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1569,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1627,"src":"2613:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1568,"name":"address","nodeType":"ElementaryTypeName","src":"2613:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2612:9:5"},"scope":1812,"src":"2518:625:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1657,"nodeType":"Block","src":"3511:140:5","statements":[{"assignments":[1636],"declarations":[{"constant":false,"id":1636,"mutability":"mutable","name":"length","nameLocation":"3529:6:5","nodeType":"VariableDeclaration","scope":1657,"src":"3521:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1635,"name":"uint256","nodeType":"ElementaryTypeName","src":"3521:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1642,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1638,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"3548:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1637,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":413,"src":"3538:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3538:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3554:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3538:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3521:34:5"},{"expression":{"id":1649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1643,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"3565:12:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":1646,"indexExpression":{"id":1644,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"3578:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3565:16:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1647,"indexExpression":{"id":1645,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1636,"src":"3582:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3565:24:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1648,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"3592:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3565:34:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1650,"nodeType":"ExpressionStatement","src":"3565:34:5"},{"expression":{"id":1655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1651,"name":"_ownedTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1451,"src":"3609:17:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1653,"indexExpression":{"id":1652,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"3627:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3609:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1654,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1636,"src":"3638:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3609:35:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1656,"nodeType":"ExpressionStatement","src":"3609:35:5"}]},"documentation":{"id":1628,"nodeType":"StructuredDocumentation","src":"3149:283:5","text":" @dev Private function to add a token to this extension's ownership-tracking data structures.\n @param to address representing the new owner of the given token ID\n @param tokenId uint256 ID of the token to be added to the tokens list of the given address"},"id":1658,"implemented":true,"kind":"function","modifiers":[],"name":"_addTokenToOwnerEnumeration","nameLocation":"3446:27:5","nodeType":"FunctionDefinition","parameters":{"id":1633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1630,"mutability":"mutable","name":"to","nameLocation":"3482:2:5","nodeType":"VariableDeclaration","scope":1658,"src":"3474:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1629,"name":"address","nodeType":"ElementaryTypeName","src":"3474:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1632,"mutability":"mutable","name":"tokenId","nameLocation":"3494:7:5","nodeType":"VariableDeclaration","scope":1658,"src":"3486:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1631,"name":"uint256","nodeType":"ElementaryTypeName","src":"3486:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3473:29:5"},"returnParameters":{"id":1634,"nodeType":"ParameterList","parameters":[],"src":"3511:0:5"},"scope":1812,"src":"3437:214:5","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1677,"nodeType":"Block","src":"3912:95:5","statements":[{"expression":{"id":1669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1664,"name":"_allTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"3922:15:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1666,"indexExpression":{"id":1665,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1661,"src":"3938:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3922:24:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1667,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"3949:10:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3960:6:5","memberName":"length","nodeType":"MemberAccess","src":"3949:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3922:44:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1670,"nodeType":"ExpressionStatement","src":"3922:44:5"},{"expression":{"arguments":[{"id":1674,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1661,"src":"3992:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1671,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"3976:10:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3987:4:5","memberName":"push","nodeType":"MemberAccess","src":"3976:15:5","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":1675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3976:24:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1676,"nodeType":"ExpressionStatement","src":"3976:24:5"}]},"documentation":{"id":1659,"nodeType":"StructuredDocumentation","src":"3657:184:5","text":" @dev Private function to add a token to this extension's token tracking data structures.\n @param tokenId uint256 ID of the token to be added to the tokens list"},"id":1678,"implemented":true,"kind":"function","modifiers":[],"name":"_addTokenToAllTokensEnumeration","nameLocation":"3855:31:5","nodeType":"FunctionDefinition","parameters":{"id":1662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1661,"mutability":"mutable","name":"tokenId","nameLocation":"3895:7:5","nodeType":"VariableDeclaration","scope":1678,"src":"3887:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1660,"name":"uint256","nodeType":"ElementaryTypeName","src":"3887:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3886:17:5"},"returnParameters":{"id":1663,"nodeType":"ParameterList","parameters":[],"src":"3912:0:5"},"scope":1812,"src":"3846:161:5","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1737,"nodeType":"Block","src":"4705:878:5","statements":[{"assignments":[1687],"declarations":[{"constant":false,"id":1687,"mutability":"mutable","name":"lastTokenIndex","nameLocation":"4894:14:5","nodeType":"VariableDeclaration","scope":1737,"src":"4886:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1686,"name":"uint256","nodeType":"ElementaryTypeName","src":"4886:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1691,"initialValue":{"arguments":[{"id":1689,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1681,"src":"4921:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1688,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":413,"src":"4911:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4911:15:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4886:40:5"},{"assignments":[1693],"declarations":[{"constant":false,"id":1693,"mutability":"mutable","name":"tokenIndex","nameLocation":"4944:10:5","nodeType":"VariableDeclaration","scope":1737,"src":"4936:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1692,"name":"uint256","nodeType":"ElementaryTypeName","src":"4936:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1697,"initialValue":{"baseExpression":{"id":1694,"name":"_ownedTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1451,"src":"4957:17:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1696,"indexExpression":{"id":1695,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1683,"src":"4975:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4957:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4936:47:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1698,"name":"tokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1693,"src":"5087:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1699,"name":"lastTokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1687,"src":"5101:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5087:28:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1724,"nodeType":"IfStatement","src":"5083:323:5","trueBody":{"id":1723,"nodeType":"Block","src":"5117:289:5","statements":[{"assignments":[1702],"declarations":[{"constant":false,"id":1702,"mutability":"mutable","name":"lastTokenId","nameLocation":"5139:11:5","nodeType":"VariableDeclaration","scope":1723,"src":"5131:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1701,"name":"uint256","nodeType":"ElementaryTypeName","src":"5131:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1708,"initialValue":{"baseExpression":{"baseExpression":{"id":1703,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"5153:12:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":1705,"indexExpression":{"id":1704,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1681,"src":"5166:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5153:18:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1707,"indexExpression":{"id":1706,"name":"lastTokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1687,"src":"5172:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5153:34:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5131:56:5"},{"expression":{"id":1715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1709,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"5202:12:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":1712,"indexExpression":{"id":1710,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1681,"src":"5215:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5202:18:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1713,"indexExpression":{"id":1711,"name":"tokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1693,"src":"5221:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5202:30:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1714,"name":"lastTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1702,"src":"5235:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5202:44:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1716,"nodeType":"ExpressionStatement","src":"5202:44:5"},{"expression":{"id":1721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1717,"name":"_ownedTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1451,"src":"5318:17:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1719,"indexExpression":{"id":1718,"name":"lastTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1702,"src":"5336:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5318:30:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1720,"name":"tokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1693,"src":"5351:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5318:43:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1722,"nodeType":"ExpressionStatement","src":"5318:43:5"}]}},{"expression":{"id":1728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"5492:33:5","subExpression":{"baseExpression":{"id":1725,"name":"_ownedTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1451,"src":"5499:17:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1727,"indexExpression":{"id":1726,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1683,"src":"5517:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5499:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1729,"nodeType":"ExpressionStatement","src":"5492:33:5"},{"expression":{"id":1735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"5535:41:5","subExpression":{"baseExpression":{"baseExpression":{"id":1730,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"5542:12:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":1732,"indexExpression":{"id":1731,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1681,"src":"5555:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5542:18:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1734,"indexExpression":{"id":1733,"name":"lastTokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1687,"src":"5561:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5542:34:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1736,"nodeType":"ExpressionStatement","src":"5535:41:5"}]},"documentation":{"id":1679,"nodeType":"StructuredDocumentation","src":"4013:606:5","text":" @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\n while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\n gas optimizations e.g. when performing a transfer operation (avoiding double writes).\n This has O(1) time complexity, but alters the order of the _ownedTokens array.\n @param from address representing the previous owner of the given token ID\n @param tokenId uint256 ID of the token to be removed from the tokens list of the given address"},"id":1738,"implemented":true,"kind":"function","modifiers":[],"name":"_removeTokenFromOwnerEnumeration","nameLocation":"4633:32:5","nodeType":"FunctionDefinition","parameters":{"id":1684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1681,"mutability":"mutable","name":"from","nameLocation":"4674:4:5","nodeType":"VariableDeclaration","scope":1738,"src":"4666:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1680,"name":"address","nodeType":"ElementaryTypeName","src":"4666:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1683,"mutability":"mutable","name":"tokenId","nameLocation":"4688:7:5","nodeType":"VariableDeclaration","scope":1738,"src":"4680:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1682,"name":"uint256","nodeType":"ElementaryTypeName","src":"4680:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4665:31:5"},"returnParameters":{"id":1685,"nodeType":"ParameterList","parameters":[],"src":"4705:0:5"},"scope":1812,"src":"4624:959:5","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1785,"nodeType":"Block","src":"5942:990:5","statements":[{"assignments":[1745],"declarations":[{"constant":false,"id":1745,"mutability":"mutable","name":"lastTokenIndex","nameLocation":"6128:14:5","nodeType":"VariableDeclaration","scope":1785,"src":"6120:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1744,"name":"uint256","nodeType":"ElementaryTypeName","src":"6120:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1750,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1746,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"6145:10:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6156:6:5","memberName":"length","nodeType":"MemberAccess","src":"6145:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6165:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6145:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6120:46:5"},{"assignments":[1752],"declarations":[{"constant":false,"id":1752,"mutability":"mutable","name":"tokenIndex","nameLocation":"6184:10:5","nodeType":"VariableDeclaration","scope":1785,"src":"6176:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1751,"name":"uint256","nodeType":"ElementaryTypeName","src":"6176:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1756,"initialValue":{"baseExpression":{"id":1753,"name":"_allTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"6197:15:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1755,"indexExpression":{"id":1754,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1741,"src":"6213:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6197:24:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6176:45:5"},{"assignments":[1758],"declarations":[{"constant":false,"id":1758,"mutability":"mutable","name":"lastTokenId","nameLocation":"6551:11:5","nodeType":"VariableDeclaration","scope":1785,"src":"6543:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1757,"name":"uint256","nodeType":"ElementaryTypeName","src":"6543:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1762,"initialValue":{"baseExpression":{"id":1759,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"6565:10:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1761,"indexExpression":{"id":1760,"name":"lastTokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1745,"src":"6576:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6565:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6543:48:5"},{"expression":{"id":1767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1763,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"6602:10:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1765,"indexExpression":{"id":1764,"name":"tokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1752,"src":"6613:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6602:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1766,"name":"lastTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1758,"src":"6627:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6602:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1768,"nodeType":"ExpressionStatement","src":"6602:36:5"},{"expression":{"id":1773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1769,"name":"_allTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"6706:15:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1771,"indexExpression":{"id":1770,"name":"lastTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1758,"src":"6722:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6706:28:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1772,"name":"tokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1752,"src":"6737:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6706:41:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1774,"nodeType":"ExpressionStatement","src":"6706:41:5"},{"expression":{"id":1778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"6868:31:5","subExpression":{"baseExpression":{"id":1775,"name":"_allTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"6875:15:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1777,"indexExpression":{"id":1776,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1741,"src":"6891:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6875:24:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1779,"nodeType":"ExpressionStatement","src":"6868:31:5"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1780,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"6909:10:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6920:3:5","memberName":"pop","nodeType":"MemberAccess","src":"6909:14:5","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer)"}},"id":1783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6909:16:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1784,"nodeType":"ExpressionStatement","src":"6909:16:5"}]},"documentation":{"id":1739,"nodeType":"StructuredDocumentation","src":"5589:277:5","text":" @dev Private function to remove a token from this extension's token tracking data structures.\n This has O(1) time complexity, but alters the order of the _allTokens array.\n @param tokenId uint256 ID of the token to be removed from the tokens list"},"id":1786,"implemented":true,"kind":"function","modifiers":[],"name":"_removeTokenFromAllTokensEnumeration","nameLocation":"5880:36:5","nodeType":"FunctionDefinition","parameters":{"id":1742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1741,"mutability":"mutable","name":"tokenId","nameLocation":"5925:7:5","nodeType":"VariableDeclaration","scope":1786,"src":"5917:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1740,"name":"uint256","nodeType":"ElementaryTypeName","src":"5917:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5916:17:5"},"returnParameters":{"id":1743,"nodeType":"ParameterList","parameters":[],"src":"5942:0:5"},"scope":1812,"src":"5871:1061:5","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"baseFunctions":[760],"body":{"id":1810,"nodeType":"Block","src":"7134:149:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint128","typeString":"uint128"},"id":1797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1795,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1791,"src":"7148:6:5","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7157:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7148:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1802,"nodeType":"IfStatement","src":"7144:84:5","trueBody":{"id":1801,"nodeType":"Block","src":"7160:68:5","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1798,"name":"ERC721EnumerableForbiddenBatchMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"7181:34:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7181:36:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1800,"nodeType":"RevertStatement","src":"7174:43:5"}]}},{"expression":{"arguments":[{"id":1806,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"7260:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1807,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1791,"src":"7269:6:5","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint128","typeString":"uint128"}],"expression":{"id":1803,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"7237:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721Enumerable_$1812_$","typeString":"type(contract super ERC721Enumerable)"}},"id":1805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7243:16:5","memberName":"_increaseBalance","nodeType":"MemberAccess","referencedDeclaration":760,"src":"7237:22:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint128_$returns$__$","typeString":"function (address,uint128)"}},"id":1808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7237:39:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1809,"nodeType":"ExpressionStatement","src":"7237:39:5"}]},"documentation":{"id":1787,"nodeType":"StructuredDocumentation","src":"6938:106:5","text":" See {ERC721-_increaseBalance}. We need that to account tokens that were minted in batch"},"id":1811,"implemented":true,"kind":"function","modifiers":[],"name":"_increaseBalance","nameLocation":"7058:16:5","nodeType":"FunctionDefinition","overrides":{"id":1793,"nodeType":"OverrideSpecifier","overrides":[],"src":"7125:8:5"},"parameters":{"id":1792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1789,"mutability":"mutable","name":"account","nameLocation":"7083:7:5","nodeType":"VariableDeclaration","scope":1811,"src":"7075:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1788,"name":"address","nodeType":"ElementaryTypeName","src":"7075:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1791,"mutability":"mutable","name":"amount","nameLocation":"7100:6:5","nodeType":"VariableDeclaration","scope":1811,"src":"7092:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1790,"name":"uint128","nodeType":"ElementaryTypeName","src":"7092:7:5","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"7074:33:5"},"returnParameters":{"id":1794,"nodeType":"ParameterList","parameters":[],"src":"7134:0:5"},"scope":1812,"src":"7049:234:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1813,"src":"708:6577:5","usedErrors":[195,200,209,214,219,226,231,236,1465,1468],"usedEvents":[1309,1318,1327]}],"src":"128:7158:5"},"id":5},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol","exportedSymbols":{"IERC721":[1410],"IERC721Enumerable":[1844]},"id":1845,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1814,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"129:24:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":1816,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1845,"sourceUnit":1411,"src":"155:39:6","symbolAliases":[{"foreign":{"id":1815,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1410,"src":"163:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1818,"name":"IERC721","nameLocations":["364:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":1410,"src":"364:7:6"},"id":1819,"nodeType":"InheritanceSpecifier","src":"364:7:6"}],"canonicalName":"IERC721Enumerable","contractDependencies":[],"contractKind":"interface","documentation":{"id":1817,"nodeType":"StructuredDocumentation","src":"196:136:6","text":" @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":1844,"linearizedBaseContracts":[1844,1410,2309],"name":"IERC721Enumerable","nameLocation":"343:17:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1820,"nodeType":"StructuredDocumentation","src":"378:82:6","text":" @dev Returns the total amount of tokens stored by the contract."},"functionSelector":"18160ddd","id":1825,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"474:11:6","nodeType":"FunctionDefinition","parameters":{"id":1821,"nodeType":"ParameterList","parameters":[],"src":"485:2:6"},"returnParameters":{"id":1824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1823,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1825,"src":"511:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1822,"name":"uint256","nodeType":"ElementaryTypeName","src":"511:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"510:9:6"},"scope":1844,"src":"465:55:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1826,"nodeType":"StructuredDocumentation","src":"526:171:6","text":" @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n Use along with {balanceOf} to enumerate all of ``owner``'s tokens."},"functionSelector":"2f745c59","id":1835,"implemented":false,"kind":"function","modifiers":[],"name":"tokenOfOwnerByIndex","nameLocation":"711:19:6","nodeType":"FunctionDefinition","parameters":{"id":1831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1828,"mutability":"mutable","name":"owner","nameLocation":"739:5:6","nodeType":"VariableDeclaration","scope":1835,"src":"731:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1827,"name":"address","nodeType":"ElementaryTypeName","src":"731:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1830,"mutability":"mutable","name":"index","nameLocation":"754:5:6","nodeType":"VariableDeclaration","scope":1835,"src":"746:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1829,"name":"uint256","nodeType":"ElementaryTypeName","src":"746:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"730:30:6"},"returnParameters":{"id":1834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1833,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1835,"src":"784:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1832,"name":"uint256","nodeType":"ElementaryTypeName","src":"784:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"783:9:6"},"scope":1844,"src":"702:91:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1836,"nodeType":"StructuredDocumentation","src":"799:164:6","text":" @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n Use along with {totalSupply} to enumerate all tokens."},"functionSelector":"4f6ccce7","id":1843,"implemented":false,"kind":"function","modifiers":[],"name":"tokenByIndex","nameLocation":"977:12:6","nodeType":"FunctionDefinition","parameters":{"id":1839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1838,"mutability":"mutable","name":"index","nameLocation":"998:5:6","nodeType":"VariableDeclaration","scope":1843,"src":"990:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1837,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"989:15:6"},"returnParameters":{"id":1842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1841,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1843,"src":"1028:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1840,"name":"uint256","nodeType":"ElementaryTypeName","src":"1028:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1027:9:6"},"scope":1844,"src":"968:69:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1845,"src":"333:706:6","usedErrors":[],"usedEvents":[1309,1318,1327]}],"src":"129:911:6"},"id":6},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC721":[1410],"IERC721Metadata":[1872]},"id":1873,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1846,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"127:24:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":1848,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1873,"sourceUnit":1411,"src":"153:39:7","symbolAliases":[{"foreign":{"id":1847,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1410,"src":"161:7:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1850,"name":"IERC721","nameLocations":["357:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":1410,"src":"357:7:7"},"id":1851,"nodeType":"InheritanceSpecifier","src":"357:7:7"}],"canonicalName":"IERC721Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1849,"nodeType":"StructuredDocumentation","src":"194:133:7","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":1872,"linearizedBaseContracts":[1872,1410,2309],"name":"IERC721Metadata","nameLocation":"338:15:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1852,"nodeType":"StructuredDocumentation","src":"371:58:7","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":1857,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"443:4:7","nodeType":"FunctionDefinition","parameters":{"id":1853,"nodeType":"ParameterList","parameters":[],"src":"447:2:7"},"returnParameters":{"id":1856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1855,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1857,"src":"473:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1854,"name":"string","nodeType":"ElementaryTypeName","src":"473:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"472:15:7"},"scope":1872,"src":"434:54:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1858,"nodeType":"StructuredDocumentation","src":"494:60:7","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":1863,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"568:6:7","nodeType":"FunctionDefinition","parameters":{"id":1859,"nodeType":"ParameterList","parameters":[],"src":"574:2:7"},"returnParameters":{"id":1862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1861,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1863,"src":"600:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1860,"name":"string","nodeType":"ElementaryTypeName","src":"600:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"599:15:7"},"scope":1872,"src":"559:56:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1864,"nodeType":"StructuredDocumentation","src":"621:90:7","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":1871,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"725:8:7","nodeType":"FunctionDefinition","parameters":{"id":1867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1866,"mutability":"mutable","name":"tokenId","nameLocation":"742:7:7","nodeType":"VariableDeclaration","scope":1871,"src":"734:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1865,"name":"uint256","nodeType":"ElementaryTypeName","src":"734:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"733:17:7"},"returnParameters":{"id":1870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1869,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1871,"src":"774:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1868,"name":"string","nodeType":"ElementaryTypeName","src":"774:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"773:15:7"},"scope":1872,"src":"716:73:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1873,"src":"328:463:7","usedErrors":[],"usedEvents":[1309,1318,1327]}],"src":"127:665:7"},"id":7},"@openzeppelin/contracts/utils/Base64.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Base64.sol","exportedSymbols":{"Base64":[1919]},"id":1920,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1874,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"100:24:8"},{"abstract":false,"baseContracts":[],"canonicalName":"Base64","contractDependencies":[],"contractKind":"library","documentation":{"id":1875,"nodeType":"StructuredDocumentation","src":"126:75:8","text":" @dev Provides a set of functions to operate with Base64 strings."},"fullyImplemented":true,"id":1919,"linearizedBaseContracts":[1919],"name":"Base64","nameLocation":"210:6:8","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":1876,"nodeType":"StructuredDocumentation","src":"223:54:8","text":" @dev Base64 Encoding/Decoding Table"},"id":1879,"mutability":"constant","name":"_TABLE","nameLocation":"307:6:8","nodeType":"VariableDeclaration","scope":1919,"src":"282:100:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1877,"name":"string","nodeType":"ElementaryTypeName","src":"282:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f","id":1878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"316:66:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_84d8a590de33e00cbdc16e1f28c3506f5ec15c599fab9a6a4bcd575cc2f110ce","typeString":"literal_string \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\""},"value":"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"},"visibility":"internal"},{"body":{"id":1917,"nodeType":"Block","src":"549:3309:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1887,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"766:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"771:6:8","memberName":"length","nodeType":"MemberAccess","src":"766:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"781:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"766:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"documentation":" Inspired by Brecht Devos (Brechtpd) implementation - MIT licence\n https://github.com/Brechtpd/base64/blob/e78d9fd951e7b0977ddca77d92dc85183770daf4/base64.sol","id":1893,"nodeType":"IfStatement","src":"762:31:8","trueBody":{"expression":{"hexValue":"","id":1891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"791:2:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":1886,"id":1892,"nodeType":"Return","src":"784:9:8"}},{"assignments":[1895],"declarations":[{"constant":false,"id":1895,"mutability":"mutable","name":"table","nameLocation":"857:5:8","nodeType":"VariableDeclaration","scope":1917,"src":"843:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1894,"name":"string","nodeType":"ElementaryTypeName","src":"843:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1897,"initialValue":{"id":1896,"name":"_TABLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1879,"src":"865:6:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"843:28:8"},{"assignments":[1899],"declarations":[{"constant":false,"id":1899,"mutability":"mutable","name":"result","nameLocation":"1288:6:8","nodeType":"VariableDeclaration","scope":1917,"src":"1274:20:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1898,"name":"string","nodeType":"ElementaryTypeName","src":"1274:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1913,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"34","id":1902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1308:1:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1903,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"1314:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1319:6:8","memberName":"length","nodeType":"MemberAccess","src":"1314:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1328:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1314:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1907,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1313:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"33","id":1908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1333:1:8","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"1313:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1910,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1312:23:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1308:27:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1901,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1297:10:8","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1900,"name":"string","nodeType":"ElementaryTypeName","src":"1301:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1297:39:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1274:62:8"},{"AST":{"nodeType":"YulBlock","src":"1399:2429:8","statements":[{"nodeType":"YulVariableDeclaration","src":"1484:29:8","value":{"arguments":[{"name":"table","nodeType":"YulIdentifier","src":"1504:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"1511:1:8","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1500:3:8"},"nodeType":"YulFunctionCall","src":"1500:13:8"},"variables":[{"name":"tablePtr","nodeType":"YulTypedName","src":"1488:8:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1583:34:8","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"1604:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"1612:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1600:3:8"},"nodeType":"YulFunctionCall","src":"1600:17:8"},"variables":[{"name":"resultPtr","nodeType":"YulTypedName","src":"1587:9:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1630:19:8","value":{"name":"data","nodeType":"YulIdentifier","src":"1645:4:8"},"variables":[{"name":"dataPtr","nodeType":"YulTypedName","src":"1634:7:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1662:36:8","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1680:4:8"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1692:4:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1686:5:8"},"nodeType":"YulFunctionCall","src":"1686:11:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1676:3:8"},"nodeType":"YulFunctionCall","src":"1676:22:8"},"variables":[{"name":"endPtr","nodeType":"YulTypedName","src":"1666:6:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1912:33:8","value":{"arguments":[{"name":"endPtr","nodeType":"YulIdentifier","src":"1932:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"1940:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1928:3:8"},"nodeType":"YulFunctionCall","src":"1928:17:8"},"variables":[{"name":"afterPtr","nodeType":"YulTypedName","src":"1916:8:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1958:33:8","value":{"arguments":[{"name":"afterPtr","nodeType":"YulIdentifier","src":"1982:8:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1976:5:8"},"nodeType":"YulFunctionCall","src":"1976:15:8"},"variables":[{"name":"afterCache","nodeType":"YulTypedName","src":"1962:10:8","type":""}]},{"expression":{"arguments":[{"name":"afterPtr","nodeType":"YulIdentifier","src":"2011:8:8"},{"kind":"number","nodeType":"YulLiteral","src":"2021:4:8","type":"","value":"0x00"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2004:6:8"},"nodeType":"YulFunctionCall","src":"2004:22:8"},"nodeType":"YulExpressionStatement","src":"2004:22:8"},{"body":{"nodeType":"YulBlock","src":"2151:1201:8","statements":[{"nodeType":"YulAssignment","src":"2204:26:8","value":{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"2219:7:8"},{"kind":"number","nodeType":"YulLiteral","src":"2228:1:8","type":"","value":"3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2215:3:8"},"nodeType":"YulFunctionCall","src":"2215:15:8"},"variableNames":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"2204:7:8"}]},{"nodeType":"YulVariableDeclaration","src":"2247:27:8","value":{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"2266:7:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2260:5:8"},"nodeType":"YulFunctionCall","src":"2260:14:8"},"variables":[{"name":"input","nodeType":"YulTypedName","src":"2251:5:8","type":""}]},{"expression":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2802:9:8"},{"arguments":[{"arguments":[{"name":"tablePtr","nodeType":"YulIdentifier","src":"2823:8:8"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2841:2:8","type":"","value":"18"},{"name":"input","nodeType":"YulIdentifier","src":"2845:5:8"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2837:3:8"},"nodeType":"YulFunctionCall","src":"2837:14:8"},{"kind":"number","nodeType":"YulLiteral","src":"2853:4:8","type":"","value":"0x3F"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2833:3:8"},"nodeType":"YulFunctionCall","src":"2833:25:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2819:3:8"},"nodeType":"YulFunctionCall","src":"2819:40:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2813:5:8"},"nodeType":"YulFunctionCall","src":"2813:47:8"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"2794:7:8"},"nodeType":"YulFunctionCall","src":"2794:67:8"},"nodeType":"YulExpressionStatement","src":"2794:67:8"},{"nodeType":"YulAssignment","src":"2878:30:8","value":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2895:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"2906:1:8","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2891:3:8"},"nodeType":"YulFunctionCall","src":"2891:17:8"},"variableNames":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2878:9:8"}]},{"expression":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2945:9:8"},{"arguments":[{"arguments":[{"name":"tablePtr","nodeType":"YulIdentifier","src":"2966:8:8"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2984:2:8","type":"","value":"12"},{"name":"input","nodeType":"YulIdentifier","src":"2988:5:8"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2980:3:8"},"nodeType":"YulFunctionCall","src":"2980:14:8"},{"kind":"number","nodeType":"YulLiteral","src":"2996:4:8","type":"","value":"0x3F"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2976:3:8"},"nodeType":"YulFunctionCall","src":"2976:25:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2962:3:8"},"nodeType":"YulFunctionCall","src":"2962:40:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2956:5:8"},"nodeType":"YulFunctionCall","src":"2956:47:8"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"2937:7:8"},"nodeType":"YulFunctionCall","src":"2937:67:8"},"nodeType":"YulExpressionStatement","src":"2937:67:8"},{"nodeType":"YulAssignment","src":"3021:30:8","value":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"3038:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"3049:1:8","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3034:3:8"},"nodeType":"YulFunctionCall","src":"3034:17:8"},"variableNames":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"3021:9:8"}]},{"expression":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"3088:9:8"},{"arguments":[{"arguments":[{"name":"tablePtr","nodeType":"YulIdentifier","src":"3109:8:8"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3127:1:8","type":"","value":"6"},{"name":"input","nodeType":"YulIdentifier","src":"3130:5:8"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3123:3:8"},"nodeType":"YulFunctionCall","src":"3123:13:8"},{"kind":"number","nodeType":"YulLiteral","src":"3138:4:8","type":"","value":"0x3F"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3119:3:8"},"nodeType":"YulFunctionCall","src":"3119:24:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3105:3:8"},"nodeType":"YulFunctionCall","src":"3105:39:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3099:5:8"},"nodeType":"YulFunctionCall","src":"3099:46:8"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"3080:7:8"},"nodeType":"YulFunctionCall","src":"3080:66:8"},"nodeType":"YulExpressionStatement","src":"3080:66:8"},{"nodeType":"YulAssignment","src":"3163:30:8","value":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"3180:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"3191:1:8","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3176:3:8"},"nodeType":"YulFunctionCall","src":"3176:17:8"},"variableNames":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"3163:9:8"}]},{"expression":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"3230:9:8"},{"arguments":[{"arguments":[{"name":"tablePtr","nodeType":"YulIdentifier","src":"3251:8:8"},{"arguments":[{"name":"input","nodeType":"YulIdentifier","src":"3265:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"3272:4:8","type":"","value":"0x3F"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3261:3:8"},"nodeType":"YulFunctionCall","src":"3261:16:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3247:3:8"},"nodeType":"YulFunctionCall","src":"3247:31:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3241:5:8"},"nodeType":"YulFunctionCall","src":"3241:38:8"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"3222:7:8"},"nodeType":"YulFunctionCall","src":"3222:58:8"},"nodeType":"YulExpressionStatement","src":"3222:58:8"},{"nodeType":"YulAssignment","src":"3297:30:8","value":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"3314:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"3325:1:8","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3310:3:8"},"nodeType":"YulFunctionCall","src":"3310:17:8"},"variableNames":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"3297:9:8"}]}]},"condition":{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"2117:7:8"},{"name":"endPtr","nodeType":"YulIdentifier","src":"2126:6:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2114:2:8"},"nodeType":"YulFunctionCall","src":"2114:19:8"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2134:16:8","statements":[]},"pre":{"nodeType":"YulBlock","src":"2097:16:8","statements":[]},"src":"2093:1259:8"},{"expression":{"arguments":[{"name":"afterPtr","nodeType":"YulIdentifier","src":"3420:8:8"},{"name":"afterCache","nodeType":"YulIdentifier","src":"3430:10:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3413:6:8"},"nodeType":"YulFunctionCall","src":"3413:28:8"},"nodeType":"YulExpressionStatement","src":"3413:28:8"},{"cases":[{"body":{"nodeType":"YulBlock","src":"3621:113:8","statements":[{"expression":{"arguments":[{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"3651:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"3662:1:8","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3647:3:8"},"nodeType":"YulFunctionCall","src":"3647:17:8"},{"kind":"number","nodeType":"YulLiteral","src":"3666:4:8","type":"","value":"0x3d"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"3639:7:8"},"nodeType":"YulFunctionCall","src":"3639:32:8"},"nodeType":"YulExpressionStatement","src":"3639:32:8"},{"expression":{"arguments":[{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"3700:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"3711:1:8","type":"","value":"2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3696:3:8"},"nodeType":"YulFunctionCall","src":"3696:17:8"},{"kind":"number","nodeType":"YulLiteral","src":"3715:4:8","type":"","value":"0x3d"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"3688:7:8"},"nodeType":"YulFunctionCall","src":"3688:32:8"},"nodeType":"YulExpressionStatement","src":"3688:32:8"}]},"nodeType":"YulCase","src":"3614:120:8","value":{"kind":"number","nodeType":"YulLiteral","src":"3619:1:8","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"3754:64:8","statements":[{"expression":{"arguments":[{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"3784:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"3795:1:8","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3780:3:8"},"nodeType":"YulFunctionCall","src":"3780:17:8"},{"kind":"number","nodeType":"YulLiteral","src":"3799:4:8","type":"","value":"0x3d"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"3772:7:8"},"nodeType":"YulFunctionCall","src":"3772:32:8"},"nodeType":"YulExpressionStatement","src":"3772:32:8"}]},"nodeType":"YulCase","src":"3747:71:8","value":{"kind":"number","nodeType":"YulLiteral","src":"3752:1:8","type":"","value":"2"}}],"expression":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3592:4:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3586:5:8"},"nodeType":"YulFunctionCall","src":"3586:11:8"},{"kind":"number","nodeType":"YulLiteral","src":"3599:1:8","type":"","value":"3"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"3582:3:8"},"nodeType":"YulFunctionCall","src":"3582:19:8"},"nodeType":"YulSwitch","src":"3575:243:8"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1882,"isOffset":false,"isSlot":false,"src":"1645:4:8","valueSize":1},{"declaration":1882,"isOffset":false,"isSlot":false,"src":"1680:4:8","valueSize":1},{"declaration":1882,"isOffset":false,"isSlot":false,"src":"1692:4:8","valueSize":1},{"declaration":1882,"isOffset":false,"isSlot":false,"src":"3592:4:8","valueSize":1},{"declaration":1899,"isOffset":false,"isSlot":false,"src":"1604:6:8","valueSize":1},{"declaration":1895,"isOffset":false,"isSlot":false,"src":"1504:5:8","valueSize":1}],"id":1914,"nodeType":"InlineAssembly","src":"1390:2438:8"},{"expression":{"id":1915,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1899,"src":"3845:6:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1886,"id":1916,"nodeType":"Return","src":"3838:13:8"}]},"documentation":{"id":1880,"nodeType":"StructuredDocumentation","src":"389:82:8","text":" @dev Converts a `bytes` to its Bytes64 `string` representation."},"id":1918,"implemented":true,"kind":"function","modifiers":[],"name":"encode","nameLocation":"485:6:8","nodeType":"FunctionDefinition","parameters":{"id":1883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1882,"mutability":"mutable","name":"data","nameLocation":"505:4:8","nodeType":"VariableDeclaration","scope":1918,"src":"492:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1881,"name":"bytes","nodeType":"ElementaryTypeName","src":"492:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"491:19:8"},"returnParameters":{"id":1886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1885,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1918,"src":"534:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1884,"name":"string","nodeType":"ElementaryTypeName","src":"534:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"533:15:8"},"scope":1919,"src":"476:3382:8","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1920,"src":"202:3658:8","usedErrors":[],"usedEvents":[]}],"src":"100:3761:8"},"id":8},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1949]},"id":1950,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1921,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:9"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1922,"nodeType":"StructuredDocumentation","src":"127:496:9","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1949,"linearizedBaseContracts":[1949],"name":"Context","nameLocation":"642:7:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":1930,"nodeType":"Block","src":"718:34:9","statements":[{"expression":{"expression":{"id":1927,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:9","memberName":"sender","nodeType":"MemberAccess","src":"735:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1926,"id":1929,"nodeType":"Return","src":"728:17:9"}]},"id":1931,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:9","nodeType":"FunctionDefinition","parameters":{"id":1923,"nodeType":"ParameterList","parameters":[],"src":"675:2:9"},"returnParameters":{"id":1926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1925,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1931,"src":"709:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1924,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:9"},"scope":1949,"src":"656:96:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1939,"nodeType":"Block","src":"825:32:9","statements":[{"expression":{"expression":{"id":1936,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:9","memberName":"data","nodeType":"MemberAccess","src":"842:8:9","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1935,"id":1938,"nodeType":"Return","src":"835:15:9"}]},"id":1940,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:9","nodeType":"FunctionDefinition","parameters":{"id":1932,"nodeType":"ParameterList","parameters":[],"src":"775:2:9"},"returnParameters":{"id":1935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1934,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1940,"src":"809:14:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1933,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:9"},"scope":1949,"src":"758:99:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1947,"nodeType":"Block","src":"935:25:9","statements":[{"expression":{"hexValue":"30","id":1945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1944,"id":1946,"nodeType":"Return","src":"945:8:9"}]},"id":1948,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:9","nodeType":"FunctionDefinition","parameters":{"id":1941,"nodeType":"ParameterList","parameters":[],"src":"892:2:9"},"returnParameters":{"id":1944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1943,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1948,"src":"926:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1942,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:9"},"scope":1949,"src":"863:97:9","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1950,"src":"624:338:9","usedErrors":[],"usedEvents":[]}],"src":"101:862:9"},"id":9},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[2018]},"id":2019,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1951,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:10"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":1952,"nodeType":"StructuredDocumentation","src":"135:750:10","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":2018,"linearizedBaseContracts":[2018],"name":"ReentrancyGuard","nameLocation":"904:15:10","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1955,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1699:11:10","nodeType":"VariableDeclaration","scope":2018,"src":"1674:40:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1953,"name":"uint256","nodeType":"ElementaryTypeName","src":"1674:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":1954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1713:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":1958,"mutability":"constant","name":"ENTERED","nameLocation":"1745:7:10","nodeType":"VariableDeclaration","scope":2018,"src":"1720:36:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1956,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":1957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1755:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":1960,"mutability":"mutable","name":"_status","nameLocation":"1779:7:10","nodeType":"VariableDeclaration","scope":2018,"src":"1763:23:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1959,"name":"uint256","nodeType":"ElementaryTypeName","src":"1763:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"documentation":{"id":1961,"nodeType":"StructuredDocumentation","src":"1793:52:10","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":1963,"name":"ReentrancyGuardReentrantCall","nameLocation":"1856:28:10","nodeType":"ErrorDefinition","parameters":{"id":1962,"nodeType":"ParameterList","parameters":[],"src":"1884:2:10"},"src":"1850:37:10"},{"body":{"id":1970,"nodeType":"Block","src":"1907:38:10","statements":[{"expression":{"id":1968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1966,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"1917:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1967,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1955,"src":"1927:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1917:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1969,"nodeType":"ExpressionStatement","src":"1917:21:10"}]},"id":1971,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1964,"nodeType":"ParameterList","parameters":[],"src":"1904:2:10"},"returnParameters":{"id":1965,"nodeType":"ParameterList","parameters":[],"src":"1907:0:10"},"scope":2018,"src":"1893:52:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1981,"nodeType":"Block","src":"2346:79:10","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1974,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1998,"src":"2356:19:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2356:21:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1976,"nodeType":"ExpressionStatement","src":"2356:21:10"},{"id":1977,"nodeType":"PlaceholderStatement","src":"2387:1:10"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1978,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2006,"src":"2398:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2398:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1980,"nodeType":"ExpressionStatement","src":"2398:20:10"}]},"documentation":{"id":1972,"nodeType":"StructuredDocumentation","src":"1951:366:10","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":1982,"name":"nonReentrant","nameLocation":"2331:12:10","nodeType":"ModifierDefinition","parameters":{"id":1973,"nodeType":"ParameterList","parameters":[],"src":"2343:2:10"},"src":"2322:103:10","virtual":false,"visibility":"internal"},{"body":{"id":1997,"nodeType":"Block","src":"2470:268:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1985,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"2558:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1986,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1958,"src":"2569:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2558:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1992,"nodeType":"IfStatement","src":"2554:86:10","trueBody":{"id":1991,"nodeType":"Block","src":"2578:62:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1988,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1963,"src":"2599:28:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2599:30:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1990,"nodeType":"RevertStatement","src":"2592:37:10"}]}},{"expression":{"id":1995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1993,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"2714:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1994,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1958,"src":"2724:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2714:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1996,"nodeType":"ExpressionStatement","src":"2714:17:10"}]},"id":1998,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2440:19:10","nodeType":"FunctionDefinition","parameters":{"id":1983,"nodeType":"ParameterList","parameters":[],"src":"2459:2:10"},"returnParameters":{"id":1984,"nodeType":"ParameterList","parameters":[],"src":"2470:0:10"},"scope":2018,"src":"2431:307:10","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2005,"nodeType":"Block","src":"2782:170:10","statements":[{"expression":{"id":2003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2001,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"2924:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2002,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1955,"src":"2934:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2924:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2004,"nodeType":"ExpressionStatement","src":"2924:21:10"}]},"id":2006,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2753:18:10","nodeType":"FunctionDefinition","parameters":{"id":1999,"nodeType":"ParameterList","parameters":[],"src":"2771:2:10"},"returnParameters":{"id":2000,"nodeType":"ParameterList","parameters":[],"src":"2782:0:10"},"scope":2018,"src":"2744:208:10","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2016,"nodeType":"Block","src":"3195:42:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2012,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"3212:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2013,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1958,"src":"3223:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3212:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2011,"id":2015,"nodeType":"Return","src":"3205:25:10"}]},"documentation":{"id":2007,"nodeType":"StructuredDocumentation","src":"2958:168:10","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":2017,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3140:23:10","nodeType":"FunctionDefinition","parameters":{"id":2008,"nodeType":"ParameterList","parameters":[],"src":"3163:2:10"},"returnParameters":{"id":2011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2010,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2017,"src":"3189:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2009,"name":"bool","nodeType":"ElementaryTypeName","src":"3189:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3188:6:10"},"scope":2018,"src":"3131:106:10","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2019,"src":"886:2353:10","usedErrors":[1963],"usedEvents":[]}],"src":"109:3131:10"},"id":10},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[3363],"SignedMath":[3468],"Strings":[2273]},"id":2274,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2020,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:11"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2022,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2274,"sourceUnit":3364,"src":"127:37:11","symbolAliases":[{"foreign":{"id":2021,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3363,"src":"135:4:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":2024,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2274,"sourceUnit":3469,"src":"165:49:11","symbolAliases":[{"foreign":{"id":2023,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3468,"src":"173:10:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":2025,"nodeType":"StructuredDocumentation","src":"216:34:11","text":" @dev String operations."},"fullyImplemented":true,"id":2273,"linearizedBaseContracts":[2273],"name":"Strings","nameLocation":"259:7:11","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2028,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"298:10:11","nodeType":"VariableDeclaration","scope":2273,"src":"273:56:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":2026,"name":"bytes16","nodeType":"ElementaryTypeName","src":"273:7:11","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":2027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"311:18:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":2031,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"358:14:11","nodeType":"VariableDeclaration","scope":2273,"src":"335:42:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2029,"name":"uint8","nodeType":"ElementaryTypeName","src":"335:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":2030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"375:2:11","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"documentation":{"id":2032,"nodeType":"StructuredDocumentation","src":"384:81:11","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":2038,"name":"StringsInsufficientHexLength","nameLocation":"476:28:11","nodeType":"ErrorDefinition","parameters":{"id":2037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2034,"mutability":"mutable","name":"value","nameLocation":"513:5:11","nodeType":"VariableDeclaration","scope":2038,"src":"505:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2033,"name":"uint256","nodeType":"ElementaryTypeName","src":"505:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2036,"mutability":"mutable","name":"length","nameLocation":"528:6:11","nodeType":"VariableDeclaration","scope":2038,"src":"520:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2035,"name":"uint256","nodeType":"ElementaryTypeName","src":"520:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"504:31:11"},"src":"470:66:11"},{"body":{"id":2085,"nodeType":"Block","src":"708:627:11","statements":[{"id":2084,"nodeType":"UncheckedBlock","src":"718:611:11","statements":[{"assignments":[2047],"declarations":[{"constant":false,"id":2047,"mutability":"mutable","name":"length","nameLocation":"750:6:11","nodeType":"VariableDeclaration","scope":2084,"src":"742:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2046,"name":"uint256","nodeType":"ElementaryTypeName","src":"742:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2054,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2050,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"770:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2048,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3363,"src":"759:4:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3363_$","typeString":"type(library Math)"}},"id":2049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"764:5:11","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":3183,"src":"759:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"759:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"779:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"759:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"742:38:11"},{"assignments":[2056],"declarations":[{"constant":false,"id":2056,"mutability":"mutable","name":"buffer","nameLocation":"808:6:11","nodeType":"VariableDeclaration","scope":2084,"src":"794:20:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2055,"name":"string","nodeType":"ElementaryTypeName","src":"794:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2061,"initialValue":{"arguments":[{"id":2059,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2047,"src":"828:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2058,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"817:10:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2057,"name":"string","nodeType":"ElementaryTypeName","src":"821:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"817:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"794:41:11"},{"assignments":[2063],"declarations":[{"constant":false,"id":2063,"mutability":"mutable","name":"ptr","nameLocation":"857:3:11","nodeType":"VariableDeclaration","scope":2084,"src":"849:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2062,"name":"uint256","nodeType":"ElementaryTypeName","src":"849:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2064,"nodeType":"VariableDeclarationStatement","src":"849:11:11"},{"AST":{"nodeType":"YulBlock","src":"930:67:11","statements":[{"nodeType":"YulAssignment","src":"948:35:11","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"959:6:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"971:2:11","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"975:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"967:3:11"},"nodeType":"YulFunctionCall","src":"967:15:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"955:3:11"},"nodeType":"YulFunctionCall","src":"955:28:11"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"948:3:11"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2056,"isOffset":false,"isSlot":false,"src":"959:6:11","valueSize":1},{"declaration":2047,"isOffset":false,"isSlot":false,"src":"975:6:11","valueSize":1},{"declaration":2063,"isOffset":false,"isSlot":false,"src":"948:3:11","valueSize":1}],"id":2065,"nodeType":"InlineAssembly","src":"921:76:11"},{"body":{"id":2080,"nodeType":"Block","src":"1023:269:11","statements":[{"expression":{"id":2068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1041:5:11","subExpression":{"id":2067,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"1041:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2069,"nodeType":"ExpressionStatement","src":"1041:5:11"},{"AST":{"nodeType":"YulBlock","src":"1124:86:11","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1154:3:11"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"1175:2:11","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"1164:3:11"},"nodeType":"YulFunctionCall","src":"1164:14:11"},{"name":"HEX_DIGITS","nodeType":"YulIdentifier","src":"1180:10:11"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"1159:4:11"},"nodeType":"YulFunctionCall","src":"1159:32:11"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"1146:7:11"},"nodeType":"YulFunctionCall","src":"1146:46:11"},"nodeType":"YulExpressionStatement","src":"1146:46:11"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2028,"isOffset":false,"isSlot":false,"src":"1180:10:11","valueSize":1},{"declaration":2063,"isOffset":false,"isSlot":false,"src":"1154:3:11","valueSize":1},{"declaration":2041,"isOffset":false,"isSlot":false,"src":"1168:5:11","valueSize":1}],"id":2070,"nodeType":"InlineAssembly","src":"1115:95:11"},{"expression":{"id":2073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2071,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"1227:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1236:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1227:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2074,"nodeType":"ExpressionStatement","src":"1227:11:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2075,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"1260:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1269:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1260:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2079,"nodeType":"IfStatement","src":"1256:21:11","trueBody":{"id":2078,"nodeType":"Break","src":"1272:5:11"}}]},"condition":{"hexValue":"74727565","id":2066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1017:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":2081,"nodeType":"WhileStatement","src":"1010:282:11"},{"expression":{"id":2082,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2056,"src":"1312:6:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2045,"id":2083,"nodeType":"Return","src":"1305:13:11"}]}]},"documentation":{"id":2039,"nodeType":"StructuredDocumentation","src":"542:90:11","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2086,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"646:8:11","nodeType":"FunctionDefinition","parameters":{"id":2042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2041,"mutability":"mutable","name":"value","nameLocation":"663:5:11","nodeType":"VariableDeclaration","scope":2086,"src":"655:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2040,"name":"uint256","nodeType":"ElementaryTypeName","src":"655:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"654:15:11"},"returnParameters":{"id":2045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2044,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2086,"src":"693:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2043,"name":"string","nodeType":"ElementaryTypeName","src":"693:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"692:15:11"},"scope":2273,"src":"637:698:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2111,"nodeType":"Block","src":"1511:92:11","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2097,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2089,"src":"1542:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1550:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1542:9:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":2101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1560:2:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":2102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1542:20:11","trueExpression":{"hexValue":"2d","id":2100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1554:3:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":2106,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2089,"src":"1588:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":2104,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3468,"src":"1573:10:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$3468_$","typeString":"type(library SignedMath)"}},"id":2105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1584:3:11","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":3467,"src":"1573:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":2107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1573:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2103,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2086,"src":"1564:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1564:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2095,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1528:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2094,"name":"string","nodeType":"ElementaryTypeName","src":"1528:6:11","typeDescriptions":{}}},"id":2096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1535:6:11","memberName":"concat","nodeType":"MemberAccess","src":"1528:13:11","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":2109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1528:68:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2093,"id":2110,"nodeType":"Return","src":"1521:75:11"}]},"documentation":{"id":2087,"nodeType":"StructuredDocumentation","src":"1341:89:11","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":2112,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"1444:14:11","nodeType":"FunctionDefinition","parameters":{"id":2090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2089,"mutability":"mutable","name":"value","nameLocation":"1466:5:11","nodeType":"VariableDeclaration","scope":2112,"src":"1459:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2088,"name":"int256","nodeType":"ElementaryTypeName","src":"1459:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1458:14:11"},"returnParameters":{"id":2093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2092,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2112,"src":"1496:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2091,"name":"string","nodeType":"ElementaryTypeName","src":"1496:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1495:15:11"},"scope":2273,"src":"1435:168:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2131,"nodeType":"Block","src":"1782:100:11","statements":[{"id":2130,"nodeType":"UncheckedBlock","src":"1792:84:11","statements":[{"expression":{"arguments":[{"id":2121,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2115,"src":"1835:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2124,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2115,"src":"1854:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2122,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3363,"src":"1842:4:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3363_$","typeString":"type(library Math)"}},"id":2123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1847:6:11","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":3305,"src":"1842:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1842:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1863:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1842:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2120,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2132,2215,2235],"referencedDeclaration":2215,"src":"1823:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1823:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2119,"id":2129,"nodeType":"Return","src":"1816:49:11"}]}]},"documentation":{"id":2113,"nodeType":"StructuredDocumentation","src":"1609:94:11","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":2132,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1717:11:11","nodeType":"FunctionDefinition","parameters":{"id":2116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2115,"mutability":"mutable","name":"value","nameLocation":"1737:5:11","nodeType":"VariableDeclaration","scope":2132,"src":"1729:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2114,"name":"uint256","nodeType":"ElementaryTypeName","src":"1729:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1728:15:11"},"returnParameters":{"id":2119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2118,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2132,"src":"1767:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2117,"name":"string","nodeType":"ElementaryTypeName","src":"1767:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1766:15:11"},"scope":2273,"src":"1708:174:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2214,"nodeType":"Block","src":"2095:435:11","statements":[{"assignments":[2143],"declarations":[{"constant":false,"id":2143,"mutability":"mutable","name":"localValue","nameLocation":"2113:10:11","nodeType":"VariableDeclaration","scope":2214,"src":"2105:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2142,"name":"uint256","nodeType":"ElementaryTypeName","src":"2105:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2145,"initialValue":{"id":2144,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2135,"src":"2126:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2105:26:11"},{"assignments":[2147],"declarations":[{"constant":false,"id":2147,"mutability":"mutable","name":"buffer","nameLocation":"2154:6:11","nodeType":"VariableDeclaration","scope":2214,"src":"2141:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2146,"name":"bytes","nodeType":"ElementaryTypeName","src":"2141:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2156,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2173:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2151,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2137,"src":"2177:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2173:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2186:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2173:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2149,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2163:9:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2148,"name":"bytes","nodeType":"ElementaryTypeName","src":"2167:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2163:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2141:47:11"},{"expression":{"id":2161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2157,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2147,"src":"2198:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2159,"indexExpression":{"hexValue":"30","id":2158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2205:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2198:9:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2210:3:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2198:15:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2162,"nodeType":"ExpressionStatement","src":"2198:15:11"},{"expression":{"id":2167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2163,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2147,"src":"2223:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2165,"indexExpression":{"hexValue":"31","id":2164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2230:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2223:9:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2235:3:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2223:15:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2168,"nodeType":"ExpressionStatement","src":"2223:15:11"},{"body":{"id":2197,"nodeType":"Block","src":"2293:95:11","statements":[{"expression":{"id":2191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2183,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2147,"src":"2307:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2185,"indexExpression":{"id":2184,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2170,"src":"2314:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2307:9:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2186,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2028,"src":"2319:10:11","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2190,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2187,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2143,"src":"2330:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2343:3:11","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2330:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2319:28:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2307:40:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2192,"nodeType":"ExpressionStatement","src":"2307:40:11"},{"expression":{"id":2195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2193,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2143,"src":"2361:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2376:1:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2361:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2196,"nodeType":"ExpressionStatement","src":"2361:16:11"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2177,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2170,"src":"2281:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2285:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2281:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2198,"initializationExpression":{"assignments":[2170],"declarations":[{"constant":false,"id":2170,"mutability":"mutable","name":"i","nameLocation":"2261:1:11","nodeType":"VariableDeclaration","scope":2198,"src":"2253:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2169,"name":"uint256","nodeType":"ElementaryTypeName","src":"2253:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2176,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2265:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2172,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2137,"src":"2269:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2265:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2278:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2265:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2253:26:11"},"loopExpression":{"expression":{"id":2181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2288:3:11","subExpression":{"id":2180,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2170,"src":"2290:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2182,"nodeType":"ExpressionStatement","src":"2288:3:11"},"nodeType":"ForStatement","src":"2248:140:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2199,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2143,"src":"2401:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2415:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2401:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2208,"nodeType":"IfStatement","src":"2397:96:11","trueBody":{"id":2207,"nodeType":"Block","src":"2418:75:11","statements":[{"errorCall":{"arguments":[{"id":2203,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2135,"src":"2468:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2204,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2137,"src":"2475:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2202,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"2439:28:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2439:43:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2206,"nodeType":"RevertStatement","src":"2432:50:11"}]}},{"expression":{"arguments":[{"id":2211,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2147,"src":"2516:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2210,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2209,"name":"string","nodeType":"ElementaryTypeName","src":"2509:6:11","typeDescriptions":{}}},"id":2212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2509:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2141,"id":2213,"nodeType":"Return","src":"2502:21:11"}]},"documentation":{"id":2133,"nodeType":"StructuredDocumentation","src":"1888:112:11","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2215,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2014:11:11","nodeType":"FunctionDefinition","parameters":{"id":2138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2135,"mutability":"mutable","name":"value","nameLocation":"2034:5:11","nodeType":"VariableDeclaration","scope":2215,"src":"2026:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2134,"name":"uint256","nodeType":"ElementaryTypeName","src":"2026:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2137,"mutability":"mutable","name":"length","nameLocation":"2049:6:11","nodeType":"VariableDeclaration","scope":2215,"src":"2041:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2136,"name":"uint256","nodeType":"ElementaryTypeName","src":"2041:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2025:31:11"},"returnParameters":{"id":2141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2140,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2215,"src":"2080:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2139,"name":"string","nodeType":"ElementaryTypeName","src":"2080:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2079:15:11"},"scope":2273,"src":"2005:525:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2234,"nodeType":"Block","src":"2762:75:11","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2228,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2218,"src":"2807:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2227,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2799:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2226,"name":"uint160","nodeType":"ElementaryTypeName","src":"2799:7:11","typeDescriptions":{}}},"id":2229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2799:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2225,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2791:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2224,"name":"uint256","nodeType":"ElementaryTypeName","src":"2791:7:11","typeDescriptions":{}}},"id":2230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2791:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2231,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2031,"src":"2815:14:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2223,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2132,2215,2235],"referencedDeclaration":2215,"src":"2779:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2779:51:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2222,"id":2233,"nodeType":"Return","src":"2772:58:11"}]},"documentation":{"id":2216,"nodeType":"StructuredDocumentation","src":"2536:148:11","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":2235,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2698:11:11","nodeType":"FunctionDefinition","parameters":{"id":2219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2218,"mutability":"mutable","name":"addr","nameLocation":"2718:4:11","nodeType":"VariableDeclaration","scope":2235,"src":"2710:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2217,"name":"address","nodeType":"ElementaryTypeName","src":"2710:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2709:14:11"},"returnParameters":{"id":2222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2221,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2235,"src":"2747:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2220,"name":"string","nodeType":"ElementaryTypeName","src":"2747:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2746:15:11"},"scope":2273,"src":"2689:148:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2271,"nodeType":"Block","src":"2992:104:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2247,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2238,"src":"3015:1:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2246,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3009:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2245,"name":"bytes","nodeType":"ElementaryTypeName","src":"3009:5:11","typeDescriptions":{}}},"id":2248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3009:8:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3018:6:11","memberName":"length","nodeType":"MemberAccess","src":"3009:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2252,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"3034:1:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2251,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3028:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2250,"name":"bytes","nodeType":"ElementaryTypeName","src":"3028:5:11","typeDescriptions":{}}},"id":2253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3028:8:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3037:6:11","memberName":"length","nodeType":"MemberAccess","src":"3028:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3009:34:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2259,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2238,"src":"3063:1:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2258,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3057:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2257,"name":"bytes","nodeType":"ElementaryTypeName","src":"3057:5:11","typeDescriptions":{}}},"id":2260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3057:8:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2256,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3047:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3047:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2265,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"3086:1:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2264,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3080:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2263,"name":"bytes","nodeType":"ElementaryTypeName","src":"3080:5:11","typeDescriptions":{}}},"id":2266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3080:8:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2262,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3070:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3070:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3047:42:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3009:80:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2244,"id":2270,"nodeType":"Return","src":"3002:87:11"}]},"documentation":{"id":2236,"nodeType":"StructuredDocumentation","src":"2843:66:11","text":" @dev Returns true if the two strings are equal."},"id":2272,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2923:5:11","nodeType":"FunctionDefinition","parameters":{"id":2241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2238,"mutability":"mutable","name":"a","nameLocation":"2943:1:11","nodeType":"VariableDeclaration","scope":2272,"src":"2929:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2237,"name":"string","nodeType":"ElementaryTypeName","src":"2929:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2240,"mutability":"mutable","name":"b","nameLocation":"2960:1:11","nodeType":"VariableDeclaration","scope":2272,"src":"2946:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2239,"name":"string","nodeType":"ElementaryTypeName","src":"2946:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2928:34:11"},"returnParameters":{"id":2244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2243,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2272,"src":"2986:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2242,"name":"bool","nodeType":"ElementaryTypeName","src":"2986:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2985:6:11"},"scope":2273,"src":"2914:182:11","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2274,"src":"251:2847:11","usedErrors":[2038],"usedEvents":[]}],"src":"101:2998:11"},"id":11},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[2297],"IERC165":[2309]},"id":2298,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2275,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:12"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":2277,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2298,"sourceUnit":2310,"src":"140:38:12","symbolAliases":[{"foreign":{"id":2276,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2309,"src":"148:7:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2279,"name":"IERC165","nameLocations":["687:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":2309,"src":"687:7:12"},"id":2280,"nodeType":"InheritanceSpecifier","src":"687:7:12"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":2278,"nodeType":"StructuredDocumentation","src":"180:478:12","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":2297,"linearizedBaseContracts":[2297,2309],"name":"ERC165","nameLocation":"677:6:12","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[2308],"body":{"id":2295,"nodeType":"Block","src":"844:64:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2288,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2283,"src":"861:11:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2290,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2309,"src":"881:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$2309_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$2309_$","typeString":"type(contract IERC165)"}],"id":2289,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"876:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"876:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$2309","typeString":"type(contract IERC165)"}},"id":2292,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"890:11:12","memberName":"interfaceId","nodeType":"MemberAccess","src":"876:25:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"861:40:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2287,"id":2294,"nodeType":"Return","src":"854:47:12"}]},"documentation":{"id":2281,"nodeType":"StructuredDocumentation","src":"701:56:12","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":2296,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"771:17:12","nodeType":"FunctionDefinition","parameters":{"id":2284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2283,"mutability":"mutable","name":"interfaceId","nameLocation":"796:11:12","nodeType":"VariableDeclaration","scope":2296,"src":"789:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2282,"name":"bytes4","nodeType":"ElementaryTypeName","src":"789:6:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"788:20:12"},"returnParameters":{"id":2287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2286,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2296,"src":"838:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2285,"name":"bool","nodeType":"ElementaryTypeName","src":"838:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"837:6:12"},"scope":2297,"src":"762:146:12","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":2298,"src":"659:251:12","usedErrors":[],"usedEvents":[]}],"src":"114:797:12"},"id":12},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[2309]},"id":2310,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2299,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:13"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":2300,"nodeType":"StructuredDocumentation","src":"141:279:13","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":2309,"linearizedBaseContracts":[2309],"name":"IERC165","nameLocation":"431:7:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2301,"nodeType":"StructuredDocumentation","src":"445:340:13","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":2308,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"799:17:13","nodeType":"FunctionDefinition","parameters":{"id":2304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2303,"mutability":"mutable","name":"interfaceId","nameLocation":"824:11:13","nodeType":"VariableDeclaration","scope":2308,"src":"817:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2302,"name":"bytes4","nodeType":"ElementaryTypeName","src":"817:6:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"816:20:13"},"returnParameters":{"id":2307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2306,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2308,"src":"860:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2305,"name":"bool","nodeType":"ElementaryTypeName","src":"860:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"859:6:13"},"scope":2309,"src":"790:76:13","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2310,"src":"421:447:13","usedErrors":[],"usedEvents":[]}],"src":"115:754:13"},"id":13},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[3363]},"id":3364,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2311,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:14"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":2312,"nodeType":"StructuredDocumentation","src":"129:73:14","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":3363,"linearizedBaseContracts":[3363],"name":"Math","nameLocation":"211:4:14","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2313,"nodeType":"StructuredDocumentation","src":"222:50:14","text":" @dev Muldiv operation overflow."},"errorSelector":"227bc153","id":2315,"name":"MathOverflowedMulDiv","nameLocation":"283:20:14","nodeType":"ErrorDefinition","parameters":{"id":2314,"nodeType":"ParameterList","parameters":[],"src":"303:2:14"},"src":"277:29:14"},{"canonicalName":"Math.Rounding","id":2320,"members":[{"id":2316,"name":"Floor","nameLocation":"336:5:14","nodeType":"EnumValue","src":"336:5:14"},{"id":2317,"name":"Ceil","nameLocation":"379:4:14","nodeType":"EnumValue","src":"379:4:14"},{"id":2318,"name":"Trunc","nameLocation":"421:5:14","nodeType":"EnumValue","src":"421:5:14"},{"id":2319,"name":"Expand","nameLocation":"451:6:14","nodeType":"EnumValue","src":"451:6:14"}],"name":"Rounding","nameLocation":"317:8:14","nodeType":"EnumDefinition","src":"312:169:14"},{"body":{"id":2351,"nodeType":"Block","src":"661:140:14","statements":[{"id":2350,"nodeType":"UncheckedBlock","src":"671:124:14","statements":[{"assignments":[2333],"declarations":[{"constant":false,"id":2333,"mutability":"mutable","name":"c","nameLocation":"703:1:14","nodeType":"VariableDeclaration","scope":2350,"src":"695:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2332,"name":"uint256","nodeType":"ElementaryTypeName","src":"695:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2337,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2334,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2323,"src":"707:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2335,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2325,"src":"711:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"707:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"695:17:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2338,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2333,"src":"730:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2339,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2323,"src":"734:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"730:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2345,"nodeType":"IfStatement","src":"726:28:14","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"745:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"752:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2343,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"744:10:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2331,"id":2344,"nodeType":"Return","src":"737:17:14"}},{"expression":{"components":[{"hexValue":"74727565","id":2346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"776:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2347,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2333,"src":"782:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2348,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"775:9:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2331,"id":2349,"nodeType":"Return","src":"768:16:14"}]}]},"documentation":{"id":2321,"nodeType":"StructuredDocumentation","src":"487:93:14","text":" @dev Returns the addition of two unsigned integers, with an overflow flag."},"id":2352,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"594:6:14","nodeType":"FunctionDefinition","parameters":{"id":2326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2323,"mutability":"mutable","name":"a","nameLocation":"609:1:14","nodeType":"VariableDeclaration","scope":2352,"src":"601:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2322,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2325,"mutability":"mutable","name":"b","nameLocation":"620:1:14","nodeType":"VariableDeclaration","scope":2352,"src":"612:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2324,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:14"},"returnParameters":{"id":2331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2328,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2352,"src":"646:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2327,"name":"bool","nodeType":"ElementaryTypeName","src":"646:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2330,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2352,"src":"652:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2329,"name":"uint256","nodeType":"ElementaryTypeName","src":"652:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:15:14"},"scope":3363,"src":"585:216:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2379,"nodeType":"Block","src":"984:113:14","statements":[{"id":2378,"nodeType":"UncheckedBlock","src":"994:97:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2364,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2357,"src":"1022:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2365,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2355,"src":"1026:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1022:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2371,"nodeType":"IfStatement","src":"1018:28:14","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1037:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2369,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1036:10:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2363,"id":2370,"nodeType":"Return","src":"1029:17:14"}},{"expression":{"components":[{"hexValue":"74727565","id":2372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1068:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2373,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2355,"src":"1074:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2374,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2357,"src":"1078:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1074:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2376,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1067:13:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2363,"id":2377,"nodeType":"Return","src":"1060:20:14"}]}]},"documentation":{"id":2353,"nodeType":"StructuredDocumentation","src":"807:96:14","text":" @dev Returns the subtraction of two unsigned integers, with an overflow flag."},"id":2380,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"917:6:14","nodeType":"FunctionDefinition","parameters":{"id":2358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2355,"mutability":"mutable","name":"a","nameLocation":"932:1:14","nodeType":"VariableDeclaration","scope":2380,"src":"924:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2354,"name":"uint256","nodeType":"ElementaryTypeName","src":"924:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2357,"mutability":"mutable","name":"b","nameLocation":"943:1:14","nodeType":"VariableDeclaration","scope":2380,"src":"935:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2356,"name":"uint256","nodeType":"ElementaryTypeName","src":"935:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"923:22:14"},"returnParameters":{"id":2363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2360,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2380,"src":"969:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2359,"name":"bool","nodeType":"ElementaryTypeName","src":"969:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2362,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2380,"src":"975:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2361,"name":"uint256","nodeType":"ElementaryTypeName","src":"975:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"968:15:14"},"scope":3363,"src":"908:189:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2421,"nodeType":"Block","src":"1283:417:14","statements":[{"id":2420,"nodeType":"UncheckedBlock","src":"1293:401:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2392,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2383,"src":"1551:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1556:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1551:6:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2399,"nodeType":"IfStatement","src":"1547:28:14","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":2395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1567:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":2396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1573:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2397,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1566:9:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2391,"id":2398,"nodeType":"Return","src":"1559:16:14"}},{"assignments":[2401],"declarations":[{"constant":false,"id":2401,"mutability":"mutable","name":"c","nameLocation":"1597:1:14","nodeType":"VariableDeclaration","scope":2420,"src":"1589:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2400,"name":"uint256","nodeType":"ElementaryTypeName","src":"1589:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2405,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2402,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2383,"src":"1601:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2403,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2385,"src":"1605:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1601:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1589:17:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2406,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2401,"src":"1624:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2407,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2383,"src":"1628:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1624:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2409,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2385,"src":"1633:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1624:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2415,"nodeType":"IfStatement","src":"1620:33:14","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1644:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1651:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2413,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1643:10:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2391,"id":2414,"nodeType":"Return","src":"1636:17:14"}},{"expression":{"components":[{"hexValue":"74727565","id":2416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1675:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2417,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2401,"src":"1681:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2418,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1674:9:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2391,"id":2419,"nodeType":"Return","src":"1667:16:14"}]}]},"documentation":{"id":2381,"nodeType":"StructuredDocumentation","src":"1103:99:14","text":" @dev Returns the multiplication of two unsigned integers, with an overflow flag."},"id":2422,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1216:6:14","nodeType":"FunctionDefinition","parameters":{"id":2386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2383,"mutability":"mutable","name":"a","nameLocation":"1231:1:14","nodeType":"VariableDeclaration","scope":2422,"src":"1223:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2382,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2385,"mutability":"mutable","name":"b","nameLocation":"1242:1:14","nodeType":"VariableDeclaration","scope":2422,"src":"1234:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2384,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1222:22:14"},"returnParameters":{"id":2391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2388,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2422,"src":"1268:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2387,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2390,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2422,"src":"1274:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2389,"name":"uint256","nodeType":"ElementaryTypeName","src":"1274:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1267:15:14"},"scope":3363,"src":"1207:493:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2449,"nodeType":"Block","src":"1887:114:14","statements":[{"id":2448,"nodeType":"UncheckedBlock","src":"1897:98:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2434,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2427,"src":"1925:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1930:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1925:6:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2441,"nodeType":"IfStatement","src":"1921:29:14","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1941:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1948:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2439,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1940:10:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2433,"id":2440,"nodeType":"Return","src":"1933:17:14"}},{"expression":{"components":[{"hexValue":"74727565","id":2442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1972:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2443,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2425,"src":"1978:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2444,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2427,"src":"1982:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1978:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2446,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1971:13:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2433,"id":2447,"nodeType":"Return","src":"1964:20:14"}]}]},"documentation":{"id":2423,"nodeType":"StructuredDocumentation","src":"1706:100:14","text":" @dev Returns the division of two unsigned integers, with a division by zero flag."},"id":2450,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1820:6:14","nodeType":"FunctionDefinition","parameters":{"id":2428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2425,"mutability":"mutable","name":"a","nameLocation":"1835:1:14","nodeType":"VariableDeclaration","scope":2450,"src":"1827:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2424,"name":"uint256","nodeType":"ElementaryTypeName","src":"1827:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2427,"mutability":"mutable","name":"b","nameLocation":"1846:1:14","nodeType":"VariableDeclaration","scope":2450,"src":"1838:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2426,"name":"uint256","nodeType":"ElementaryTypeName","src":"1838:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1826:22:14"},"returnParameters":{"id":2433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2430,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2450,"src":"1872:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2429,"name":"bool","nodeType":"ElementaryTypeName","src":"1872:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2432,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2450,"src":"1878:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2431,"name":"uint256","nodeType":"ElementaryTypeName","src":"1878:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1871:15:14"},"scope":3363,"src":"1811:190:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2477,"nodeType":"Block","src":"2198:114:14","statements":[{"id":2476,"nodeType":"UncheckedBlock","src":"2208:98:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2462,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2455,"src":"2236:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2241:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2236:6:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2469,"nodeType":"IfStatement","src":"2232:29:14","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2252:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2259:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2467,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2251:10:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2461,"id":2468,"nodeType":"Return","src":"2244:17:14"}},{"expression":{"components":[{"hexValue":"74727565","id":2470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2283:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2471,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2453,"src":"2289:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":2472,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2455,"src":"2293:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2289:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2474,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2282:13:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2461,"id":2475,"nodeType":"Return","src":"2275:20:14"}]}]},"documentation":{"id":2451,"nodeType":"StructuredDocumentation","src":"2007:110:14","text":" @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."},"id":2478,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2131:6:14","nodeType":"FunctionDefinition","parameters":{"id":2456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2453,"mutability":"mutable","name":"a","nameLocation":"2146:1:14","nodeType":"VariableDeclaration","scope":2478,"src":"2138:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2452,"name":"uint256","nodeType":"ElementaryTypeName","src":"2138:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2455,"mutability":"mutable","name":"b","nameLocation":"2157:1:14","nodeType":"VariableDeclaration","scope":2478,"src":"2149:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2454,"name":"uint256","nodeType":"ElementaryTypeName","src":"2149:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2137:22:14"},"returnParameters":{"id":2461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2458,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2478,"src":"2183:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2457,"name":"bool","nodeType":"ElementaryTypeName","src":"2183:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2460,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2478,"src":"2189:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2459,"name":"uint256","nodeType":"ElementaryTypeName","src":"2189:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2182:15:14"},"scope":3363,"src":"2122:190:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2495,"nodeType":"Block","src":"2449:37:14","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2488,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"2466:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2489,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"2470:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2466:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2492,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"2478:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2466:13:14","trueExpression":{"id":2491,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"2474:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2487,"id":2494,"nodeType":"Return","src":"2459:20:14"}]},"documentation":{"id":2479,"nodeType":"StructuredDocumentation","src":"2318:59:14","text":" @dev Returns the largest of two numbers."},"id":2496,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"2391:3:14","nodeType":"FunctionDefinition","parameters":{"id":2484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2481,"mutability":"mutable","name":"a","nameLocation":"2403:1:14","nodeType":"VariableDeclaration","scope":2496,"src":"2395:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2480,"name":"uint256","nodeType":"ElementaryTypeName","src":"2395:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2483,"mutability":"mutable","name":"b","nameLocation":"2414:1:14","nodeType":"VariableDeclaration","scope":2496,"src":"2406:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2482,"name":"uint256","nodeType":"ElementaryTypeName","src":"2406:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2394:22:14"},"returnParameters":{"id":2487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2486,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2496,"src":"2440:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2485,"name":"uint256","nodeType":"ElementaryTypeName","src":"2440:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2439:9:14"},"scope":3363,"src":"2382:104:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2513,"nodeType":"Block","src":"2624:37:14","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2506,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2499,"src":"2641:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2507,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2501,"src":"2645:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2641:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2510,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2501,"src":"2653:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2641:13:14","trueExpression":{"id":2509,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2499,"src":"2649:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2505,"id":2512,"nodeType":"Return","src":"2634:20:14"}]},"documentation":{"id":2497,"nodeType":"StructuredDocumentation","src":"2492:60:14","text":" @dev Returns the smallest of two numbers."},"id":2514,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"2566:3:14","nodeType":"FunctionDefinition","parameters":{"id":2502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2499,"mutability":"mutable","name":"a","nameLocation":"2578:1:14","nodeType":"VariableDeclaration","scope":2514,"src":"2570:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2498,"name":"uint256","nodeType":"ElementaryTypeName","src":"2570:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2501,"mutability":"mutable","name":"b","nameLocation":"2589:1:14","nodeType":"VariableDeclaration","scope":2514,"src":"2581:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2500,"name":"uint256","nodeType":"ElementaryTypeName","src":"2581:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2569:22:14"},"returnParameters":{"id":2505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2504,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2514,"src":"2615:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2503,"name":"uint256","nodeType":"ElementaryTypeName","src":"2615:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2614:9:14"},"scope":3363,"src":"2557:104:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2536,"nodeType":"Block","src":"2845:82:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2524,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"2900:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":2525,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2519,"src":"2904:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2900:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2527,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2899:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2528,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"2910:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2529,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2519,"src":"2914:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2910:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2531,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2909:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":2532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2919:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2909:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2899:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2523,"id":2535,"nodeType":"Return","src":"2892:28:14"}]},"documentation":{"id":2515,"nodeType":"StructuredDocumentation","src":"2667:102:14","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":2537,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"2783:7:14","nodeType":"FunctionDefinition","parameters":{"id":2520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2517,"mutability":"mutable","name":"a","nameLocation":"2799:1:14","nodeType":"VariableDeclaration","scope":2537,"src":"2791:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2516,"name":"uint256","nodeType":"ElementaryTypeName","src":"2791:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2519,"mutability":"mutable","name":"b","nameLocation":"2810:1:14","nodeType":"VariableDeclaration","scope":2537,"src":"2802:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2518,"name":"uint256","nodeType":"ElementaryTypeName","src":"2802:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2790:22:14"},"returnParameters":{"id":2523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2522,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2537,"src":"2836:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2521,"name":"uint256","nodeType":"ElementaryTypeName","src":"2836:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2835:9:14"},"scope":3363,"src":"2774:153:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2570,"nodeType":"Block","src":"3219:260:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2547,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2542,"src":"3233:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3238:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3233:6:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2555,"nodeType":"IfStatement","src":"3229:127:14","trueBody":{"id":2554,"nodeType":"Block","src":"3241:115:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2550,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2540,"src":"3340:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2551,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2542,"src":"3344:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3340:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2546,"id":2553,"nodeType":"Return","src":"3333:12:14"}]}},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2556,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2540,"src":"3444:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3449:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3444:6:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2560,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2540,"src":"3458:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3462:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3458:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2563,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3457:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2564,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2542,"src":"3467:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3457:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3471:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3457:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3444:28:14","trueExpression":{"hexValue":"30","id":2559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3453:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2546,"id":2569,"nodeType":"Return","src":"3437:35:14"}]},"documentation":{"id":2538,"nodeType":"StructuredDocumentation","src":"2933:210:14","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":2571,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3157:7:14","nodeType":"FunctionDefinition","parameters":{"id":2543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2540,"mutability":"mutable","name":"a","nameLocation":"3173:1:14","nodeType":"VariableDeclaration","scope":2571,"src":"3165:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2539,"name":"uint256","nodeType":"ElementaryTypeName","src":"3165:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2542,"mutability":"mutable","name":"b","nameLocation":"3184:1:14","nodeType":"VariableDeclaration","scope":2571,"src":"3176:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2541,"name":"uint256","nodeType":"ElementaryTypeName","src":"3176:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3164:22:14"},"returnParameters":{"id":2546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2545,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2571,"src":"3210:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2544,"name":"uint256","nodeType":"ElementaryTypeName","src":"3210:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3209:9:14"},"scope":3363,"src":"3148:331:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2696,"nodeType":"Block","src":"3901:4018:14","statements":[{"id":2695,"nodeType":"UncheckedBlock","src":"3911:4002:14","statements":[{"assignments":[2584],"declarations":[{"constant":false,"id":2584,"mutability":"mutable","name":"prod0","nameLocation":"4240:5:14","nodeType":"VariableDeclaration","scope":2695,"src":"4232:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2583,"name":"uint256","nodeType":"ElementaryTypeName","src":"4232:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2588,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2585,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2574,"src":"4248:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2586,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2576,"src":"4252:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4248:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4232:21:14"},{"assignments":[2590],"declarations":[{"constant":false,"id":2590,"mutability":"mutable","name":"prod1","nameLocation":"4320:5:14","nodeType":"VariableDeclaration","scope":2695,"src":"4312:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2589,"name":"uint256","nodeType":"ElementaryTypeName","src":"4312:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2591,"nodeType":"VariableDeclarationStatement","src":"4312:13:14"},{"AST":{"nodeType":"YulBlock","src":"4392:122:14","statements":[{"nodeType":"YulVariableDeclaration","src":"4410:30:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4427:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"4430:1:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4437:1:14","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4433:3:14"},"nodeType":"YulFunctionCall","src":"4433:6:14"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"4420:6:14"},"nodeType":"YulFunctionCall","src":"4420:20:14"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"4414:2:14","type":""}]},{"nodeType":"YulAssignment","src":"4457:43:14","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"4474:2:14"},{"name":"prod0","nodeType":"YulIdentifier","src":"4478:5:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4470:3:14"},"nodeType":"YulFunctionCall","src":"4470:14:14"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"4489:2:14"},{"name":"prod0","nodeType":"YulIdentifier","src":"4493:5:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4486:2:14"},"nodeType":"YulFunctionCall","src":"4486:13:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4466:3:14"},"nodeType":"YulFunctionCall","src":"4466:34:14"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"4457:5:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2584,"isOffset":false,"isSlot":false,"src":"4478:5:14","valueSize":1},{"declaration":2584,"isOffset":false,"isSlot":false,"src":"4493:5:14","valueSize":1},{"declaration":2590,"isOffset":false,"isSlot":false,"src":"4457:5:14","valueSize":1},{"declaration":2574,"isOffset":false,"isSlot":false,"src":"4427:1:14","valueSize":1},{"declaration":2576,"isOffset":false,"isSlot":false,"src":"4430:1:14","valueSize":1}],"id":2592,"nodeType":"InlineAssembly","src":"4383:131:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2593,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2590,"src":"4595:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4604:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4595:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2601,"nodeType":"IfStatement","src":"4591:368:14","trueBody":{"id":2600,"nodeType":"Block","src":"4607:352:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2596,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2584,"src":"4925:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2597,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"4933:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4925:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2582,"id":2599,"nodeType":"Return","src":"4918:26:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2602,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"5065:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2603,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2590,"src":"5080:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5065:20:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2609,"nodeType":"IfStatement","src":"5061:88:14","trueBody":{"id":2608,"nodeType":"Block","src":"5087:62:14","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2605,"name":"MathOverflowedMulDiv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"5112:20:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5112:22:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2607,"nodeType":"RevertStatement","src":"5105:29:14"}]}},{"assignments":[2611],"declarations":[{"constant":false,"id":2611,"mutability":"mutable","name":"remainder","nameLocation":"5412:9:14","nodeType":"VariableDeclaration","scope":2695,"src":"5404:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2610,"name":"uint256","nodeType":"ElementaryTypeName","src":"5404:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2612,"nodeType":"VariableDeclarationStatement","src":"5404:17:14"},{"AST":{"nodeType":"YulBlock","src":"5444:291:14","statements":[{"nodeType":"YulAssignment","src":"5513:38:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5533:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"5536:1:14"},{"name":"denominator","nodeType":"YulIdentifier","src":"5539:11:14"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"5526:6:14"},"nodeType":"YulFunctionCall","src":"5526:25:14"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"5513:9:14"}]},{"nodeType":"YulAssignment","src":"5633:41:14","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"5646:5:14"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"5656:9:14"},{"name":"prod0","nodeType":"YulIdentifier","src":"5667:5:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5653:2:14"},"nodeType":"YulFunctionCall","src":"5653:20:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5642:3:14"},"nodeType":"YulFunctionCall","src":"5642:32:14"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"5633:5:14"}]},{"nodeType":"YulAssignment","src":"5691:30:14","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"5704:5:14"},{"name":"remainder","nodeType":"YulIdentifier","src":"5711:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5700:3:14"},"nodeType":"YulFunctionCall","src":"5700:21:14"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"5691:5:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2578,"isOffset":false,"isSlot":false,"src":"5539:11:14","valueSize":1},{"declaration":2584,"isOffset":false,"isSlot":false,"src":"5667:5:14","valueSize":1},{"declaration":2584,"isOffset":false,"isSlot":false,"src":"5691:5:14","valueSize":1},{"declaration":2584,"isOffset":false,"isSlot":false,"src":"5704:5:14","valueSize":1},{"declaration":2590,"isOffset":false,"isSlot":false,"src":"5633:5:14","valueSize":1},{"declaration":2590,"isOffset":false,"isSlot":false,"src":"5646:5:14","valueSize":1},{"declaration":2611,"isOffset":false,"isSlot":false,"src":"5513:9:14","valueSize":1},{"declaration":2611,"isOffset":false,"isSlot":false,"src":"5656:9:14","valueSize":1},{"declaration":2611,"isOffset":false,"isSlot":false,"src":"5711:9:14","valueSize":1},{"declaration":2574,"isOffset":false,"isSlot":false,"src":"5533:1:14","valueSize":1},{"declaration":2576,"isOffset":false,"isSlot":false,"src":"5536:1:14","valueSize":1}],"id":2613,"nodeType":"InlineAssembly","src":"5435:300:14"},{"assignments":[2615],"declarations":[{"constant":false,"id":2615,"mutability":"mutable","name":"twos","nameLocation":"5947:4:14","nodeType":"VariableDeclaration","scope":2695,"src":"5939:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2614,"name":"uint256","nodeType":"ElementaryTypeName","src":"5939:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2622,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2616,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"5954:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":2617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5969:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2618,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"5973:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5969:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2620,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5968:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5954:31:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5939:46:14"},{"AST":{"nodeType":"YulBlock","src":"6008:362:14","statements":[{"nodeType":"YulAssignment","src":"6073:37:14","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"6092:11:14"},{"name":"twos","nodeType":"YulIdentifier","src":"6105:4:14"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6088:3:14"},"nodeType":"YulFunctionCall","src":"6088:22:14"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"6073:11:14"}]},{"nodeType":"YulAssignment","src":"6177:25:14","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"6190:5:14"},{"name":"twos","nodeType":"YulIdentifier","src":"6197:4:14"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6186:3:14"},"nodeType":"YulFunctionCall","src":"6186:16:14"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"6177:5:14"}]},{"nodeType":"YulAssignment","src":"6317:39:14","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6337:1:14","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"6340:4:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6333:3:14"},"nodeType":"YulFunctionCall","src":"6333:12:14"},{"name":"twos","nodeType":"YulIdentifier","src":"6347:4:14"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6329:3:14"},"nodeType":"YulFunctionCall","src":"6329:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"6354:1:14","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6325:3:14"},"nodeType":"YulFunctionCall","src":"6325:31:14"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"6317:4:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2578,"isOffset":false,"isSlot":false,"src":"6073:11:14","valueSize":1},{"declaration":2578,"isOffset":false,"isSlot":false,"src":"6092:11:14","valueSize":1},{"declaration":2584,"isOffset":false,"isSlot":false,"src":"6177:5:14","valueSize":1},{"declaration":2584,"isOffset":false,"isSlot":false,"src":"6190:5:14","valueSize":1},{"declaration":2615,"isOffset":false,"isSlot":false,"src":"6105:4:14","valueSize":1},{"declaration":2615,"isOffset":false,"isSlot":false,"src":"6197:4:14","valueSize":1},{"declaration":2615,"isOffset":false,"isSlot":false,"src":"6317:4:14","valueSize":1},{"declaration":2615,"isOffset":false,"isSlot":false,"src":"6340:4:14","valueSize":1},{"declaration":2615,"isOffset":false,"isSlot":false,"src":"6347:4:14","valueSize":1}],"id":2623,"nodeType":"InlineAssembly","src":"5999:371:14"},{"expression":{"id":2628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2624,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2584,"src":"6436:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2625,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2590,"src":"6445:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2626,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2615,"src":"6453:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6445:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6436:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2629,"nodeType":"ExpressionStatement","src":"6436:21:14"},{"assignments":[2631],"declarations":[{"constant":false,"id":2631,"mutability":"mutable","name":"inverse","nameLocation":"6783:7:14","nodeType":"VariableDeclaration","scope":2695,"src":"6775:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2630,"name":"uint256","nodeType":"ElementaryTypeName","src":"6775:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2638,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":2632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6794:1:14","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2633,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"6798:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6794:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2635,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6793:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":2636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6813:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"6793:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6775:39:14"},{"expression":{"id":2645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2639,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2631,"src":"7031:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7042:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2641,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"7046:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2642,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2631,"src":"7060:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7046:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7042:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7031:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2646,"nodeType":"ExpressionStatement","src":"7031:36:14"},{"expression":{"id":2653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2647,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2631,"src":"7100:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7111:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2649,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"7115:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2650,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2631,"src":"7129:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7115:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7111:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7100:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2654,"nodeType":"ExpressionStatement","src":"7100:36:14"},{"expression":{"id":2661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2655,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2631,"src":"7170:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7181:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2657,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"7185:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2658,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2631,"src":"7199:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7185:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7181:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7170:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2662,"nodeType":"ExpressionStatement","src":"7170:36:14"},{"expression":{"id":2669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2663,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2631,"src":"7240:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7251:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2665,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"7255:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2666,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2631,"src":"7269:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7255:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7251:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7240:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2670,"nodeType":"ExpressionStatement","src":"7240:36:14"},{"expression":{"id":2677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2671,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2631,"src":"7310:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7321:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2673,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"7325:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2674,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2631,"src":"7339:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7325:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7321:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7310:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2678,"nodeType":"ExpressionStatement","src":"7310:36:14"},{"expression":{"id":2685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2679,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2631,"src":"7381:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7392:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2681,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"7396:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2682,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2631,"src":"7410:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7396:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7392:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7381:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2686,"nodeType":"ExpressionStatement","src":"7381:36:14"},{"expression":{"id":2691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2687,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2581,"src":"7851:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2688,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2584,"src":"7860:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2689,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2631,"src":"7868:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7860:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7851:24:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2692,"nodeType":"ExpressionStatement","src":"7851:24:14"},{"expression":{"id":2693,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2581,"src":"7896:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2582,"id":2694,"nodeType":"Return","src":"7889:13:14"}]}]},"documentation":{"id":2572,"nodeType":"StructuredDocumentation","src":"3485:313:14","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":2697,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"3812:6:14","nodeType":"FunctionDefinition","parameters":{"id":2579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2574,"mutability":"mutable","name":"x","nameLocation":"3827:1:14","nodeType":"VariableDeclaration","scope":2697,"src":"3819:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2573,"name":"uint256","nodeType":"ElementaryTypeName","src":"3819:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2576,"mutability":"mutable","name":"y","nameLocation":"3838:1:14","nodeType":"VariableDeclaration","scope":2697,"src":"3830:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2575,"name":"uint256","nodeType":"ElementaryTypeName","src":"3830:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2578,"mutability":"mutable","name":"denominator","nameLocation":"3849:11:14","nodeType":"VariableDeclaration","scope":2697,"src":"3841:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2577,"name":"uint256","nodeType":"ElementaryTypeName","src":"3841:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3818:43:14"},"returnParameters":{"id":2582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2581,"mutability":"mutable","name":"result","nameLocation":"3893:6:14","nodeType":"VariableDeclaration","scope":2697,"src":"3885:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2580,"name":"uint256","nodeType":"ElementaryTypeName","src":"3885:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3884:16:14"},"scope":3363,"src":"3803:4116:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2739,"nodeType":"Block","src":"8161:192:14","statements":[{"assignments":[2713],"declarations":[{"constant":false,"id":2713,"mutability":"mutable","name":"result","nameLocation":"8179:6:14","nodeType":"VariableDeclaration","scope":2739,"src":"8171:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2712,"name":"uint256","nodeType":"ElementaryTypeName","src":"8171:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2719,"initialValue":{"arguments":[{"id":2715,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"8195:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2716,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2702,"src":"8198:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2717,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2704,"src":"8201:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2714,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[2697,2740],"referencedDeclaration":2697,"src":"8188:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8188:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8171:42:14"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2721,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2707,"src":"8244:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2320","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2320","typeString":"enum Math.Rounding"}],"id":2720,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3362,"src":"8227:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2320_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8227:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2724,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"8264:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2725,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2702,"src":"8267:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2726,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2704,"src":"8270:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2723,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"8257:6:14","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8257:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8285:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8257:29:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8227:59:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2736,"nodeType":"IfStatement","src":"8223:101:14","trueBody":{"id":2735,"nodeType":"Block","src":"8288:36:14","statements":[{"expression":{"id":2733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2731,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2713,"src":"8302:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8312:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8302:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2734,"nodeType":"ExpressionStatement","src":"8302:11:14"}]}},{"expression":{"id":2737,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2713,"src":"8340:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2711,"id":2738,"nodeType":"Return","src":"8333:13:14"}]},"documentation":{"id":2698,"nodeType":"StructuredDocumentation","src":"7925:121:14","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":2740,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"8060:6:14","nodeType":"FunctionDefinition","parameters":{"id":2708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2700,"mutability":"mutable","name":"x","nameLocation":"8075:1:14","nodeType":"VariableDeclaration","scope":2740,"src":"8067:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2699,"name":"uint256","nodeType":"ElementaryTypeName","src":"8067:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2702,"mutability":"mutable","name":"y","nameLocation":"8086:1:14","nodeType":"VariableDeclaration","scope":2740,"src":"8078:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2701,"name":"uint256","nodeType":"ElementaryTypeName","src":"8078:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2704,"mutability":"mutable","name":"denominator","nameLocation":"8097:11:14","nodeType":"VariableDeclaration","scope":2740,"src":"8089:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2703,"name":"uint256","nodeType":"ElementaryTypeName","src":"8089:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2707,"mutability":"mutable","name":"rounding","nameLocation":"8119:8:14","nodeType":"VariableDeclaration","scope":2740,"src":"8110:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2320","typeString":"enum Math.Rounding"},"typeName":{"id":2706,"nodeType":"UserDefinedTypeName","pathNode":{"id":2705,"name":"Rounding","nameLocations":["8110:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":2320,"src":"8110:8:14"},"referencedDeclaration":2320,"src":"8110:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2320","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8066:62:14"},"returnParameters":{"id":2711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2710,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2740,"src":"8152:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2709,"name":"uint256","nodeType":"ElementaryTypeName","src":"8152:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8151:9:14"},"scope":3363,"src":"8051:302:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2851,"nodeType":"Block","src":"8644:1585:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2748,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2743,"src":"8658:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8663:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8658:6:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2754,"nodeType":"IfStatement","src":"8654:45:14","trueBody":{"id":2753,"nodeType":"Block","src":"8666:33:14","statements":[{"expression":{"hexValue":"30","id":2751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8687:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2747,"id":2752,"nodeType":"Return","src":"8680:8:14"}]}},{"assignments":[2756],"declarations":[{"constant":false,"id":2756,"mutability":"mutable","name":"result","nameLocation":"9386:6:14","nodeType":"VariableDeclaration","scope":2851,"src":"9378:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2755,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2765,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9395:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2759,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2743,"src":"9406:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2758,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[3019,3054],"referencedDeclaration":3019,"src":"9401:4:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9401:7:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9412:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9401:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2763,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9400:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9395:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9378:36:14"},{"id":2850,"nodeType":"UncheckedBlock","src":"9815:408:14","statements":[{"expression":{"id":2775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2766,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2756,"src":"9839:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2767,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2756,"src":"9849:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2768,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2743,"src":"9858:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2769,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2756,"src":"9862:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9858:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9849:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2772,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9848:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9873:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9848:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9839:35:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2776,"nodeType":"ExpressionStatement","src":"9839:35:14"},{"expression":{"id":2786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2777,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2756,"src":"9888:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2778,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2756,"src":"9898:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2779,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2743,"src":"9907:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2780,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2756,"src":"9911:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9907:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9898:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2783,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9897:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9922:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9897:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9888:35:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2787,"nodeType":"ExpressionStatement","src":"9888:35:14"},{"expression":{"id":2797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2788,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2756,"src":"9937:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2789,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2756,"src":"9947:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2790,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2743,"src":"9956:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2791,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2756,"src":"9960:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9956:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9947:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2794,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9946:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9971:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9946:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9937:35:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2798,"nodeType":"ExpressionStatement","src":"9937:35:14"},{"expression":{"id":2808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2799,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2756,"src":"9986:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2800,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2756,"src":"9996:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2801,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2743,"src":"10005:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2802,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2756,"src":"10009:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10005:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9996:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2805,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9995:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10020:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9995:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9986:35:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2809,"nodeType":"ExpressionStatement","src":"9986:35:14"},{"expression":{"id":2819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2810,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2756,"src":"10035:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2811,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2756,"src":"10045:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2812,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2743,"src":"10054:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2813,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2756,"src":"10058:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10054:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10045:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2816,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10044:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10069:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10044:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10035:35:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2820,"nodeType":"ExpressionStatement","src":"10035:35:14"},{"expression":{"id":2830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2821,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2756,"src":"10084:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2822,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2756,"src":"10094:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2823,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2743,"src":"10103:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2824,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2756,"src":"10107:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10094:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2827,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10093:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10118:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10093:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10084:35:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2831,"nodeType":"ExpressionStatement","src":"10084:35:14"},{"expression":{"id":2841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2832,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2756,"src":"10133:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2833,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2756,"src":"10143:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2834,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2743,"src":"10152:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2835,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2756,"src":"10156:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10152:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10143:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2838,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10142:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10167:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10142:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10133:35:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2842,"nodeType":"ExpressionStatement","src":"10133:35:14"},{"expression":{"arguments":[{"id":2844,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2756,"src":"10193:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2845,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2743,"src":"10201:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2846,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2756,"src":"10205:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10201:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2843,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2514,"src":"10189:3:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10189:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2747,"id":2849,"nodeType":"Return","src":"10182:30:14"}]}]},"documentation":{"id":2741,"nodeType":"StructuredDocumentation","src":"8359:223:14","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":2852,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8596:4:14","nodeType":"FunctionDefinition","parameters":{"id":2744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2743,"mutability":"mutable","name":"a","nameLocation":"8609:1:14","nodeType":"VariableDeclaration","scope":2852,"src":"8601:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2742,"name":"uint256","nodeType":"ElementaryTypeName","src":"8601:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8600:11:14"},"returnParameters":{"id":2747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2746,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2852,"src":"8635:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2745,"name":"uint256","nodeType":"ElementaryTypeName","src":"8635:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8634:9:14"},"scope":3363,"src":"8587:1642:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2886,"nodeType":"Block","src":"10405:164:14","statements":[{"id":2885,"nodeType":"UncheckedBlock","src":"10415:148:14","statements":[{"assignments":[2864],"declarations":[{"constant":false,"id":2864,"mutability":"mutable","name":"result","nameLocation":"10447:6:14","nodeType":"VariableDeclaration","scope":2885,"src":"10439:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2863,"name":"uint256","nodeType":"ElementaryTypeName","src":"10439:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2868,"initialValue":{"arguments":[{"id":2866,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2855,"src":"10461:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2865,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[2852,2887],"referencedDeclaration":2852,"src":"10456:4:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10456:7:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10439:24:14"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2869,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2864,"src":"10484:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2871,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"10511:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2320","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2320","typeString":"enum Math.Rounding"}],"id":2870,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3362,"src":"10494:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2320_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10494:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2873,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2864,"src":"10524:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2874,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2864,"src":"10533:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10524:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2876,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2855,"src":"10542:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10524:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10494:49:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10550:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10494:57:14","trueExpression":{"hexValue":"31","id":2879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10546:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2882,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10493:59:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"10484:68:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2862,"id":2884,"nodeType":"Return","src":"10477:75:14"}]}]},"documentation":{"id":2853,"nodeType":"StructuredDocumentation","src":"10235:89:14","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":2887,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"10338:4:14","nodeType":"FunctionDefinition","parameters":{"id":2859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2855,"mutability":"mutable","name":"a","nameLocation":"10351:1:14","nodeType":"VariableDeclaration","scope":2887,"src":"10343:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2854,"name":"uint256","nodeType":"ElementaryTypeName","src":"10343:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2858,"mutability":"mutable","name":"rounding","nameLocation":"10363:8:14","nodeType":"VariableDeclaration","scope":2887,"src":"10354:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2320","typeString":"enum Math.Rounding"},"typeName":{"id":2857,"nodeType":"UserDefinedTypeName","pathNode":{"id":2856,"name":"Rounding","nameLocations":["10354:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":2320,"src":"10354:8:14"},"referencedDeclaration":2320,"src":"10354:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2320","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"10342:30:14"},"returnParameters":{"id":2862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2861,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2887,"src":"10396:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2860,"name":"uint256","nodeType":"ElementaryTypeName","src":"10396:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10395:9:14"},"scope":3363,"src":"10329:240:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3018,"nodeType":"Block","src":"10760:922:14","statements":[{"assignments":[2896],"declarations":[{"constant":false,"id":2896,"mutability":"mutable","name":"result","nameLocation":"10778:6:14","nodeType":"VariableDeclaration","scope":3018,"src":"10770:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2895,"name":"uint256","nodeType":"ElementaryTypeName","src":"10770:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2898,"initialValue":{"hexValue":"30","id":2897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10787:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10770:18:14"},{"id":3015,"nodeType":"UncheckedBlock","src":"10798:855:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2899,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2890,"src":"10826:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10835:3:14","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10826:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10841:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10826:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2913,"nodeType":"IfStatement","src":"10822:99:14","trueBody":{"id":2912,"nodeType":"Block","src":"10844:77:14","statements":[{"expression":{"id":2906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2904,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2890,"src":"10862:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":2905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10872:3:14","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10862:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2907,"nodeType":"ExpressionStatement","src":"10862:13:14"},{"expression":{"id":2910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2908,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2896,"src":"10893:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":2909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10903:3:14","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10893:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2911,"nodeType":"ExpressionStatement","src":"10893:13:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2914,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2890,"src":"10938:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10947:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10938:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10952:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10938:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2928,"nodeType":"IfStatement","src":"10934:96:14","trueBody":{"id":2927,"nodeType":"Block","src":"10955:75:14","statements":[{"expression":{"id":2921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2919,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2890,"src":"10973:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":2920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10983:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10973:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2922,"nodeType":"ExpressionStatement","src":"10973:12:14"},{"expression":{"id":2925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2923,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2896,"src":"11003:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":2924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11013:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11003:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2926,"nodeType":"ExpressionStatement","src":"11003:12:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2929,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2890,"src":"11047:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":2930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11056:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11047:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11061:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11047:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2943,"nodeType":"IfStatement","src":"11043:96:14","trueBody":{"id":2942,"nodeType":"Block","src":"11064:75:14","statements":[{"expression":{"id":2936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2934,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2890,"src":"11082:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":2935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11092:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11082:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2937,"nodeType":"ExpressionStatement","src":"11082:12:14"},{"expression":{"id":2940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2938,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2896,"src":"11112:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":2939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11122:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11112:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2941,"nodeType":"ExpressionStatement","src":"11112:12:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2944,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2890,"src":"11156:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":2945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11165:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11156:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11170:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11156:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2958,"nodeType":"IfStatement","src":"11152:96:14","trueBody":{"id":2957,"nodeType":"Block","src":"11173:75:14","statements":[{"expression":{"id":2951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2949,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2890,"src":"11191:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":2950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11201:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11191:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2952,"nodeType":"ExpressionStatement","src":"11191:12:14"},{"expression":{"id":2955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2953,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2896,"src":"11221:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11231:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11221:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2956,"nodeType":"ExpressionStatement","src":"11221:12:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2959,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2890,"src":"11265:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":2960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11274:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11265:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11278:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11265:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2973,"nodeType":"IfStatement","src":"11261:93:14","trueBody":{"id":2972,"nodeType":"Block","src":"11281:73:14","statements":[{"expression":{"id":2966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2964,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2890,"src":"11299:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":2965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11309:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11299:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2967,"nodeType":"ExpressionStatement","src":"11299:11:14"},{"expression":{"id":2970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2968,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2896,"src":"11328:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11338:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11328:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2971,"nodeType":"ExpressionStatement","src":"11328:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2974,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2890,"src":"11371:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":2975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11380:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11371:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11384:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11371:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2988,"nodeType":"IfStatement","src":"11367:93:14","trueBody":{"id":2987,"nodeType":"Block","src":"11387:73:14","statements":[{"expression":{"id":2981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2979,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2890,"src":"11405:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11415:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11405:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2982,"nodeType":"ExpressionStatement","src":"11405:11:14"},{"expression":{"id":2985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2983,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2896,"src":"11434:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11444:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11434:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2986,"nodeType":"ExpressionStatement","src":"11434:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2989,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2890,"src":"11477:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":2990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11486:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11477:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11490:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11477:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3003,"nodeType":"IfStatement","src":"11473:93:14","trueBody":{"id":3002,"nodeType":"Block","src":"11493:73:14","statements":[{"expression":{"id":2996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2994,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2890,"src":"11511:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":2995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11521:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11511:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2997,"nodeType":"ExpressionStatement","src":"11511:11:14"},{"expression":{"id":3000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2998,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2896,"src":"11540:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11550:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11540:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3001,"nodeType":"ExpressionStatement","src":"11540:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3004,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2890,"src":"11583:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11592:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11583:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11596:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11583:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3014,"nodeType":"IfStatement","src":"11579:64:14","trueBody":{"id":3013,"nodeType":"Block","src":"11599:44:14","statements":[{"expression":{"id":3011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3009,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2896,"src":"11617:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11627:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11617:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3012,"nodeType":"ExpressionStatement","src":"11617:11:14"}]}}]},{"expression":{"id":3016,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2896,"src":"11669:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2894,"id":3017,"nodeType":"Return","src":"11662:13:14"}]},"documentation":{"id":2888,"nodeType":"StructuredDocumentation","src":"10575:119:14","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":3019,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"10708:4:14","nodeType":"FunctionDefinition","parameters":{"id":2891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2890,"mutability":"mutable","name":"value","nameLocation":"10721:5:14","nodeType":"VariableDeclaration","scope":3019,"src":"10713:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2889,"name":"uint256","nodeType":"ElementaryTypeName","src":"10713:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10712:15:14"},"returnParameters":{"id":2894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2893,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3019,"src":"10751:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2892,"name":"uint256","nodeType":"ElementaryTypeName","src":"10751:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10750:9:14"},"scope":3363,"src":"10699:983:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3053,"nodeType":"Block","src":"11915:168:14","statements":[{"id":3052,"nodeType":"UncheckedBlock","src":"11925:152:14","statements":[{"assignments":[3031],"declarations":[{"constant":false,"id":3031,"mutability":"mutable","name":"result","nameLocation":"11957:6:14","nodeType":"VariableDeclaration","scope":3052,"src":"11949:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3030,"name":"uint256","nodeType":"ElementaryTypeName","src":"11949:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3035,"initialValue":{"arguments":[{"id":3033,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3022,"src":"11971:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3032,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[3019,3054],"referencedDeclaration":3019,"src":"11966:4:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11966:11:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11949:28:14"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3036,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"11998:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3038,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3025,"src":"12025:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2320","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2320","typeString":"enum Math.Rounding"}],"id":3037,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3362,"src":"12008:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2320_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12008:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12038:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3041,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"12043:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12038:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3043,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3022,"src":"12052:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12038:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12008:49:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12064:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12008:57:14","trueExpression":{"hexValue":"31","id":3046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12060:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3049,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12007:59:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11998:68:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3029,"id":3051,"nodeType":"Return","src":"11991:75:14"}]}]},"documentation":{"id":3020,"nodeType":"StructuredDocumentation","src":"11688:142:14","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3054,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"11844:4:14","nodeType":"FunctionDefinition","parameters":{"id":3026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3022,"mutability":"mutable","name":"value","nameLocation":"11857:5:14","nodeType":"VariableDeclaration","scope":3054,"src":"11849:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3021,"name":"uint256","nodeType":"ElementaryTypeName","src":"11849:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3025,"mutability":"mutable","name":"rounding","nameLocation":"11873:8:14","nodeType":"VariableDeclaration","scope":3054,"src":"11864:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2320","typeString":"enum Math.Rounding"},"typeName":{"id":3024,"nodeType":"UserDefinedTypeName","pathNode":{"id":3023,"name":"Rounding","nameLocations":["11864:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":2320,"src":"11864:8:14"},"referencedDeclaration":2320,"src":"11864:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2320","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11848:34:14"},"returnParameters":{"id":3029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3028,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3054,"src":"11906:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3027,"name":"uint256","nodeType":"ElementaryTypeName","src":"11906:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11905:9:14"},"scope":3363,"src":"11835:248:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3182,"nodeType":"Block","src":"12276:854:14","statements":[{"assignments":[3063],"declarations":[{"constant":false,"id":3063,"mutability":"mutable","name":"result","nameLocation":"12294:6:14","nodeType":"VariableDeclaration","scope":3182,"src":"12286:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3062,"name":"uint256","nodeType":"ElementaryTypeName","src":"12286:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3065,"initialValue":{"hexValue":"30","id":3064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12303:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12286:18:14"},{"id":3179,"nodeType":"UncheckedBlock","src":"12314:787:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3066,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3057,"src":"12342:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3069,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12351:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12357:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12351:8:14","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"12342:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3082,"nodeType":"IfStatement","src":"12338:103:14","trueBody":{"id":3081,"nodeType":"Block","src":"12361:80:14","statements":[{"expression":{"id":3075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3071,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3057,"src":"12379:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3074,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12388:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12394:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12388:8:14","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"12379:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3076,"nodeType":"ExpressionStatement","src":"12379:17:14"},{"expression":{"id":3079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3077,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3063,"src":"12414:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":3078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12424:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12414:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3080,"nodeType":"ExpressionStatement","src":"12414:12:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3083,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3057,"src":"12458:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3086,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12467:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12473:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12467:8:14","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"12458:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3099,"nodeType":"IfStatement","src":"12454:103:14","trueBody":{"id":3098,"nodeType":"Block","src":"12477:80:14","statements":[{"expression":{"id":3092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3088,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3057,"src":"12495:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3091,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12504:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12510:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12504:8:14","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"12495:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3093,"nodeType":"ExpressionStatement","src":"12495:17:14"},{"expression":{"id":3096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3094,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3063,"src":"12530:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":3095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12540:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12530:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3097,"nodeType":"ExpressionStatement","src":"12530:12:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3100,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3057,"src":"12574:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3103,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12583:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12589:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12583:8:14","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"12574:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3116,"nodeType":"IfStatement","src":"12570:103:14","trueBody":{"id":3115,"nodeType":"Block","src":"12593:80:14","statements":[{"expression":{"id":3109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3105,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3057,"src":"12611:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12620:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12626:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12620:8:14","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"12611:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3110,"nodeType":"ExpressionStatement","src":"12611:17:14"},{"expression":{"id":3113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3111,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3063,"src":"12646:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12656:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12646:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3114,"nodeType":"ExpressionStatement","src":"12646:12:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3117,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3057,"src":"12690:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3120,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12699:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12705:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12699:7:14","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"12690:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3133,"nodeType":"IfStatement","src":"12686:100:14","trueBody":{"id":3132,"nodeType":"Block","src":"12708:78:14","statements":[{"expression":{"id":3126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3122,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3057,"src":"12726:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3125,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12735:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12741:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12735:7:14","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"12726:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3127,"nodeType":"ExpressionStatement","src":"12726:16:14"},{"expression":{"id":3130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3128,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3063,"src":"12760:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12770:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12760:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3131,"nodeType":"ExpressionStatement","src":"12760:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3134,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3057,"src":"12803:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3137,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12812:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12818:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12812:7:14","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"12803:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3150,"nodeType":"IfStatement","src":"12799:100:14","trueBody":{"id":3149,"nodeType":"Block","src":"12821:78:14","statements":[{"expression":{"id":3143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3139,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3057,"src":"12839:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3142,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12848:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12854:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12848:7:14","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"12839:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3144,"nodeType":"ExpressionStatement","src":"12839:16:14"},{"expression":{"id":3147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3145,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3063,"src":"12873:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12883:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12873:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3148,"nodeType":"ExpressionStatement","src":"12873:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3151,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3057,"src":"12916:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12925:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12931:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12925:7:14","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"12916:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3167,"nodeType":"IfStatement","src":"12912:100:14","trueBody":{"id":3166,"nodeType":"Block","src":"12934:78:14","statements":[{"expression":{"id":3160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3156,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3057,"src":"12952:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3159,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12961:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12967:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12961:7:14","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"12952:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3161,"nodeType":"ExpressionStatement","src":"12952:16:14"},{"expression":{"id":3164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3162,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3063,"src":"12986:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12996:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12986:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3165,"nodeType":"ExpressionStatement","src":"12986:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3168,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3057,"src":"13029:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":3171,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13038:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":3170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13044:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13038:7:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"13029:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3178,"nodeType":"IfStatement","src":"13025:66:14","trueBody":{"id":3177,"nodeType":"Block","src":"13047:44:14","statements":[{"expression":{"id":3175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3173,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3063,"src":"13065:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13075:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13065:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3176,"nodeType":"ExpressionStatement","src":"13065:11:14"}]}}]},{"expression":{"id":3180,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3063,"src":"13117:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3061,"id":3181,"nodeType":"Return","src":"13110:13:14"}]},"documentation":{"id":3055,"nodeType":"StructuredDocumentation","src":"12089:120:14","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":3183,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"12223:5:14","nodeType":"FunctionDefinition","parameters":{"id":3058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3057,"mutability":"mutable","name":"value","nameLocation":"12237:5:14","nodeType":"VariableDeclaration","scope":3183,"src":"12229:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3056,"name":"uint256","nodeType":"ElementaryTypeName","src":"12229:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12228:15:14"},"returnParameters":{"id":3061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3060,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3183,"src":"12267:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3059,"name":"uint256","nodeType":"ElementaryTypeName","src":"12267:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12266:9:14"},"scope":3363,"src":"12214:916:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3217,"nodeType":"Block","src":"13365:170:14","statements":[{"id":3216,"nodeType":"UncheckedBlock","src":"13375:154:14","statements":[{"assignments":[3195],"declarations":[{"constant":false,"id":3195,"mutability":"mutable","name":"result","nameLocation":"13407:6:14","nodeType":"VariableDeclaration","scope":3216,"src":"13399:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3194,"name":"uint256","nodeType":"ElementaryTypeName","src":"13399:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3199,"initialValue":{"arguments":[{"id":3197,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"13422:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3196,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[3183,3218],"referencedDeclaration":3183,"src":"13416:5:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13416:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13399:29:14"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3200,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"13449:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3202,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3189,"src":"13476:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2320","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2320","typeString":"enum Math.Rounding"}],"id":3201,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3362,"src":"13459:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2320_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13459:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13489:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":3205,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"13495:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13489:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3207,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"13504:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13489:20:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13459:50:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13516:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"13459:58:14","trueExpression":{"hexValue":"31","id":3210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13512:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3213,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13458:60:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13449:69:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3193,"id":3215,"nodeType":"Return","src":"13442:76:14"}]}]},"documentation":{"id":3184,"nodeType":"StructuredDocumentation","src":"13136:143:14","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3218,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"13293:5:14","nodeType":"FunctionDefinition","parameters":{"id":3190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3186,"mutability":"mutable","name":"value","nameLocation":"13307:5:14","nodeType":"VariableDeclaration","scope":3218,"src":"13299:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3185,"name":"uint256","nodeType":"ElementaryTypeName","src":"13299:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3189,"mutability":"mutable","name":"rounding","nameLocation":"13323:8:14","nodeType":"VariableDeclaration","scope":3218,"src":"13314:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2320","typeString":"enum Math.Rounding"},"typeName":{"id":3188,"nodeType":"UserDefinedTypeName","pathNode":{"id":3187,"name":"Rounding","nameLocations":["13314:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":2320,"src":"13314:8:14"},"referencedDeclaration":2320,"src":"13314:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2320","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"13298:34:14"},"returnParameters":{"id":3193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3192,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3218,"src":"13356:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3191,"name":"uint256","nodeType":"ElementaryTypeName","src":"13356:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13355:9:14"},"scope":3363,"src":"13284:251:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3304,"nodeType":"Block","src":"13855:600:14","statements":[{"assignments":[3227],"declarations":[{"constant":false,"id":3227,"mutability":"mutable","name":"result","nameLocation":"13873:6:14","nodeType":"VariableDeclaration","scope":3304,"src":"13865:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3226,"name":"uint256","nodeType":"ElementaryTypeName","src":"13865:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3229,"initialValue":{"hexValue":"30","id":3228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13882:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13865:18:14"},{"id":3301,"nodeType":"UncheckedBlock","src":"13893:533:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3230,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3221,"src":"13921:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":3231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13930:3:14","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13921:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13936:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13921:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3244,"nodeType":"IfStatement","src":"13917:98:14","trueBody":{"id":3243,"nodeType":"Block","src":"13939:76:14","statements":[{"expression":{"id":3237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3235,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3221,"src":"13957:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13967:3:14","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13957:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3238,"nodeType":"ExpressionStatement","src":"13957:13:14"},{"expression":{"id":3241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3239,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3227,"src":"13988:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13998:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13988:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3242,"nodeType":"ExpressionStatement","src":"13988:12:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3245,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3221,"src":"14032:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":3246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14041:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"14032:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14046:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14032:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3259,"nodeType":"IfStatement","src":"14028:95:14","trueBody":{"id":3258,"nodeType":"Block","src":"14049:74:14","statements":[{"expression":{"id":3252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3250,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3221,"src":"14067:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14077:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"14067:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3253,"nodeType":"ExpressionStatement","src":"14067:12:14"},{"expression":{"id":3256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3254,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3227,"src":"14097:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14107:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14097:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3257,"nodeType":"ExpressionStatement","src":"14097:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3260,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3221,"src":"14140:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":3261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14149:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14140:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14154:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14140:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3274,"nodeType":"IfStatement","src":"14136:95:14","trueBody":{"id":3273,"nodeType":"Block","src":"14157:74:14","statements":[{"expression":{"id":3267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3265,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3221,"src":"14175:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14185:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14175:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3268,"nodeType":"ExpressionStatement","src":"14175:12:14"},{"expression":{"id":3271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3269,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3227,"src":"14205:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14215:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"14205:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3272,"nodeType":"ExpressionStatement","src":"14205:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3275,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3221,"src":"14248:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":3276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14257:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14248:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14262:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14248:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3289,"nodeType":"IfStatement","src":"14244:95:14","trueBody":{"id":3288,"nodeType":"Block","src":"14265:74:14","statements":[{"expression":{"id":3282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3280,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3221,"src":"14283:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14293:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14283:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3283,"nodeType":"ExpressionStatement","src":"14283:12:14"},{"expression":{"id":3286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3284,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3227,"src":"14313:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14323:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"14313:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3287,"nodeType":"ExpressionStatement","src":"14313:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3290,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3221,"src":"14356:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":3291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14365:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14356:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14369:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14356:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3300,"nodeType":"IfStatement","src":"14352:64:14","trueBody":{"id":3299,"nodeType":"Block","src":"14372:44:14","statements":[{"expression":{"id":3297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3295,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3227,"src":"14390:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14400:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14390:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3298,"nodeType":"ExpressionStatement","src":"14390:11:14"}]}}]},{"expression":{"id":3302,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3227,"src":"14442:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3225,"id":3303,"nodeType":"Return","src":"14435:13:14"}]},"documentation":{"id":3219,"nodeType":"StructuredDocumentation","src":"13541:246:14","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":3305,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"13801:6:14","nodeType":"FunctionDefinition","parameters":{"id":3222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3221,"mutability":"mutable","name":"value","nameLocation":"13816:5:14","nodeType":"VariableDeclaration","scope":3305,"src":"13808:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3220,"name":"uint256","nodeType":"ElementaryTypeName","src":"13808:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13807:15:14"},"returnParameters":{"id":3225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3224,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3305,"src":"13846:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3223,"name":"uint256","nodeType":"ElementaryTypeName","src":"13846:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13845:9:14"},"scope":3363,"src":"13792:663:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3342,"nodeType":"Block","src":"14692:177:14","statements":[{"id":3341,"nodeType":"UncheckedBlock","src":"14702:161:14","statements":[{"assignments":[3317],"declarations":[{"constant":false,"id":3317,"mutability":"mutable","name":"result","nameLocation":"14734:6:14","nodeType":"VariableDeclaration","scope":3341,"src":"14726:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3316,"name":"uint256","nodeType":"ElementaryTypeName","src":"14726:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3321,"initialValue":{"arguments":[{"id":3319,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3308,"src":"14750:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3318,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[3305,3343],"referencedDeclaration":3305,"src":"14743:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14743:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14726:30:14"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3322,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3317,"src":"14777:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3324,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3311,"src":"14804:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2320","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2320","typeString":"enum Math.Rounding"}],"id":3323,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3362,"src":"14787:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2320_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14787:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14817:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3327,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3317,"src":"14823:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":3328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14833:1:14","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"14823:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3330,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14822:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14817:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3332,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3308,"src":"14838:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14817:26:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14787:56:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14850:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"14787:64:14","trueExpression":{"hexValue":"31","id":3335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14846:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3338,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14786:66:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"14777:75:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3315,"id":3340,"nodeType":"Return","src":"14770:82:14"}]}]},"documentation":{"id":3306,"nodeType":"StructuredDocumentation","src":"14461:144:14","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3343,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"14619:6:14","nodeType":"FunctionDefinition","parameters":{"id":3312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3308,"mutability":"mutable","name":"value","nameLocation":"14634:5:14","nodeType":"VariableDeclaration","scope":3343,"src":"14626:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3307,"name":"uint256","nodeType":"ElementaryTypeName","src":"14626:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3311,"mutability":"mutable","name":"rounding","nameLocation":"14650:8:14","nodeType":"VariableDeclaration","scope":3343,"src":"14641:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2320","typeString":"enum Math.Rounding"},"typeName":{"id":3310,"nodeType":"UserDefinedTypeName","pathNode":{"id":3309,"name":"Rounding","nameLocations":["14641:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":2320,"src":"14641:8:14"},"referencedDeclaration":2320,"src":"14641:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2320","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"14625:34:14"},"returnParameters":{"id":3315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3314,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3343,"src":"14683:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3313,"name":"uint256","nodeType":"ElementaryTypeName","src":"14683:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14682:9:14"},"scope":3363,"src":"14610:259:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3361,"nodeType":"Block","src":"15067:48:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3354,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3347,"src":"15090:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2320","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2320","typeString":"enum Math.Rounding"}],"id":3353,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15084:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3352,"name":"uint8","nodeType":"ElementaryTypeName","src":"15084:5:14","typeDescriptions":{}}},"id":3355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15084:15:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":3356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15102:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15084:19:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":3358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15107:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15084:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3351,"id":3360,"nodeType":"Return","src":"15077:31:14"}]},"documentation":{"id":3344,"nodeType":"StructuredDocumentation","src":"14875:113:14","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":3362,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"15002:16:14","nodeType":"FunctionDefinition","parameters":{"id":3348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3347,"mutability":"mutable","name":"rounding","nameLocation":"15028:8:14","nodeType":"VariableDeclaration","scope":3362,"src":"15019:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2320","typeString":"enum Math.Rounding"},"typeName":{"id":3346,"nodeType":"UserDefinedTypeName","pathNode":{"id":3345,"name":"Rounding","nameLocations":["15019:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":2320,"src":"15019:8:14"},"referencedDeclaration":2320,"src":"15019:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2320","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"15018:19:14"},"returnParameters":{"id":3351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3350,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3362,"src":"15061:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3349,"name":"bool","nodeType":"ElementaryTypeName","src":"15061:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15060:6:14"},"scope":3363,"src":"14993:122:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3364,"src":"203:14914:14","usedErrors":[2315],"usedEvents":[]}],"src":"103:15015:14"},"id":14},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[3468]},"id":3469,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3365,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:15"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":3366,"nodeType":"StructuredDocumentation","src":"135:80:15","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":3468,"linearizedBaseContracts":[3468],"name":"SignedMath","nameLocation":"224:10:15","nodeType":"ContractDefinition","nodes":[{"body":{"id":3383,"nodeType":"Block","src":"376:37:15","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3376,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3369,"src":"393:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3377,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3371,"src":"397:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"393:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3380,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3371,"src":"405:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"393:13:15","trueExpression":{"id":3379,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3369,"src":"401:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3375,"id":3382,"nodeType":"Return","src":"386:20:15"}]},"documentation":{"id":3367,"nodeType":"StructuredDocumentation","src":"241:66:15","text":" @dev Returns the largest of two signed numbers."},"id":3384,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"321:3:15","nodeType":"FunctionDefinition","parameters":{"id":3372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3369,"mutability":"mutable","name":"a","nameLocation":"332:1:15","nodeType":"VariableDeclaration","scope":3384,"src":"325:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3368,"name":"int256","nodeType":"ElementaryTypeName","src":"325:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3371,"mutability":"mutable","name":"b","nameLocation":"342:1:15","nodeType":"VariableDeclaration","scope":3384,"src":"335:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3370,"name":"int256","nodeType":"ElementaryTypeName","src":"335:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"324:20:15"},"returnParameters":{"id":3375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3374,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3384,"src":"368:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3373,"name":"int256","nodeType":"ElementaryTypeName","src":"368:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"367:8:15"},"scope":3468,"src":"312:101:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3401,"nodeType":"Block","src":"555:37:15","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3394,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3387,"src":"572:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3395,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3389,"src":"576:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"572:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3398,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3389,"src":"584:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"572:13:15","trueExpression":{"id":3397,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3387,"src":"580:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3393,"id":3400,"nodeType":"Return","src":"565:20:15"}]},"documentation":{"id":3385,"nodeType":"StructuredDocumentation","src":"419:67:15","text":" @dev Returns the smallest of two signed numbers."},"id":3402,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"500:3:15","nodeType":"FunctionDefinition","parameters":{"id":3390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3387,"mutability":"mutable","name":"a","nameLocation":"511:1:15","nodeType":"VariableDeclaration","scope":3402,"src":"504:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3386,"name":"int256","nodeType":"ElementaryTypeName","src":"504:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3389,"mutability":"mutable","name":"b","nameLocation":"521:1:15","nodeType":"VariableDeclaration","scope":3402,"src":"514:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3388,"name":"int256","nodeType":"ElementaryTypeName","src":"514:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"503:20:15"},"returnParameters":{"id":3393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3392,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3402,"src":"547:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3391,"name":"int256","nodeType":"ElementaryTypeName","src":"547:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"546:8:15"},"scope":3468,"src":"491:101:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3445,"nodeType":"Block","src":"797:162:15","statements":[{"assignments":[3413],"declarations":[{"constant":false,"id":3413,"mutability":"mutable","name":"x","nameLocation":"866:1:15","nodeType":"VariableDeclaration","scope":3445,"src":"859:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3412,"name":"int256","nodeType":"ElementaryTypeName","src":"859:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3426,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3414,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3405,"src":"871:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3415,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3407,"src":"875:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"871:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3417,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"870:7:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3418,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3405,"src":"882:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3419,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3407,"src":"886:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"882:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3421,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"881:7:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"892:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"881:12:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3424,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:14:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:24:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"859:35:15"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3427,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3413,"src":"911:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3432,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3413,"src":"931:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3431,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"923:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3430,"name":"uint256","nodeType":"ElementaryTypeName","src":"923:7:15","typeDescriptions":{}}},"id":3433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"923:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":3434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"937:3:15","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"923:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3429,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"916:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3428,"name":"int256","nodeType":"ElementaryTypeName","src":"916:6:15","typeDescriptions":{}}},"id":3436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3437,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3405,"src":"945:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3438,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3407,"src":"949:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"945:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3440,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"944:7:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"916:35:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3442,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"915:37:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"911:41:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3411,"id":3444,"nodeType":"Return","src":"904:48:15"}]},"documentation":{"id":3403,"nodeType":"StructuredDocumentation","src":"598:126:15","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":3446,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"738:7:15","nodeType":"FunctionDefinition","parameters":{"id":3408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3405,"mutability":"mutable","name":"a","nameLocation":"753:1:15","nodeType":"VariableDeclaration","scope":3446,"src":"746:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3404,"name":"int256","nodeType":"ElementaryTypeName","src":"746:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3407,"mutability":"mutable","name":"b","nameLocation":"763:1:15","nodeType":"VariableDeclaration","scope":3446,"src":"756:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3406,"name":"int256","nodeType":"ElementaryTypeName","src":"756:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"745:20:15"},"returnParameters":{"id":3411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3410,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3446,"src":"789:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3409,"name":"int256","nodeType":"ElementaryTypeName","src":"789:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"788:8:15"},"scope":3468,"src":"729:230:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3466,"nodeType":"Block","src":"1103:158:15","statements":[{"id":3465,"nodeType":"UncheckedBlock","src":"1113:142:15","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3456,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3449,"src":"1228:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":3457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1233:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1228:6:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1241:2:15","subExpression":{"id":3460,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3449,"src":"1242:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1228:15:15","trueExpression":{"id":3459,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3449,"src":"1237:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3455,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1220:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3454,"name":"uint256","nodeType":"ElementaryTypeName","src":"1220:7:15","typeDescriptions":{}}},"id":3463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1220:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3453,"id":3464,"nodeType":"Return","src":"1213:31:15"}]}]},"documentation":{"id":3447,"nodeType":"StructuredDocumentation","src":"965:78:15","text":" @dev Returns the absolute unsigned value of a signed value."},"id":3467,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1057:3:15","nodeType":"FunctionDefinition","parameters":{"id":3450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3449,"mutability":"mutable","name":"n","nameLocation":"1068:1:15","nodeType":"VariableDeclaration","scope":3467,"src":"1061:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3448,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1060:10:15"},"returnParameters":{"id":3453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3452,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3467,"src":"1094:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3451,"name":"uint256","nodeType":"ElementaryTypeName","src":"1094:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1093:9:15"},"scope":3468,"src":"1048:213:15","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3469,"src":"216:1047:15","usedErrors":[],"usedEvents":[]}],"src":"109:1155:15"},"id":15},"contracts/EventTicketNFT.sol":{"ast":{"absolutePath":"contracts/EventTicketNFT.sol","exportedSymbols":{"Base64":[1919],"Context":[1949],"ERC165":[2297],"ERC721":[1293],"ERC721Enumerable":[1812],"EventTicketNFT":[4562],"IERC165":[2309],"IERC721":[1410],"IERC721Enumerable":[1844],"IERC721Errors":[237],"IERC721Metadata":[1872],"IERC721Receiver":[1428],"Math":[3363],"Ownable":[147],"ReentrancyGuard":[2018],"SignedMath":[3468],"Strings":[2273]},"id":4563,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3470,"literals":["solidity",">=","0.8",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"33:31:16"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"@openzeppelin/contracts/token/ERC721/ERC721.sol","id":3471,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4563,"sourceUnit":1294,"src":"68:57:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol","file":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol","id":3472,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4563,"sourceUnit":1813,"src":"127:78:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":3473,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4563,"sourceUnit":148,"src":"207:52:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":3474,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4563,"sourceUnit":2019,"src":"261:59:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Base64.sol","file":"@openzeppelin/contracts/utils/Base64.sol","id":3475,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4563,"sourceUnit":1920,"src":"322:50:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"@openzeppelin/contracts/utils/Strings.sol","id":3476,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4563,"sourceUnit":2274,"src":"374:51:16","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3478,"name":"ERC721Enumerable","nameLocations":["565:16:16"],"nodeType":"IdentifierPath","referencedDeclaration":1812,"src":"565:16:16"},"id":3479,"nodeType":"InheritanceSpecifier","src":"565:16:16"},{"baseName":{"id":3480,"name":"Ownable","nameLocations":["583:7:16"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"583:7:16"},"id":3481,"nodeType":"InheritanceSpecifier","src":"583:7:16"},{"baseName":{"id":3482,"name":"ReentrancyGuard","nameLocations":["592:15:16"],"nodeType":"IdentifierPath","referencedDeclaration":2018,"src":"592:15:16"},"id":3483,"nodeType":"InheritanceSpecifier","src":"592:15:16"}],"canonicalName":"EventTicketNFT","contractDependencies":[],"contractKind":"contract","documentation":{"id":3477,"nodeType":"StructuredDocumentation","src":"429:107:16","text":" @title EventTicketNFT\n @dev NFT-based event ticketing system with marketplace functionality"},"fullyImplemented":true,"id":4562,"linearizedBaseContracts":[4562,2018,147,1812,1844,1293,237,1872,1410,2297,2309,1949],"name":"EventTicketNFT","nameLocation":"547:14:16","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"e01a0ebe","id":3485,"mutability":"mutable","name":"eventIdCounter","nameLocation":"630:14:16","nodeType":"VariableDeclaration","scope":4562,"src":"615:29:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3484,"name":"uint256","nodeType":"ElementaryTypeName","src":"615:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"8802255f","id":3487,"mutability":"mutable","name":"ticketIdCounter","nameLocation":"666:15:16","nodeType":"VariableDeclaration","scope":4562,"src":"651:30:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3486,"name":"uint256","nodeType":"ElementaryTypeName","src":"651:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"canonicalName":"EventTicketNFT.Event","id":3508,"members":[{"constant":false,"id":3489,"mutability":"mutable","name":"id","nameLocation":"722:2:16","nodeType":"VariableDeclaration","scope":3508,"src":"714:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3488,"name":"uint256","nodeType":"ElementaryTypeName","src":"714:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3491,"mutability":"mutable","name":"name","nameLocation":"742:4:16","nodeType":"VariableDeclaration","scope":3508,"src":"735:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3490,"name":"string","nodeType":"ElementaryTypeName","src":"735:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3493,"mutability":"mutable","name":"description","nameLocation":"764:11:16","nodeType":"VariableDeclaration","scope":3508,"src":"757:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3492,"name":"string","nodeType":"ElementaryTypeName","src":"757:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3495,"mutability":"mutable","name":"eventDate","nameLocation":"794:9:16","nodeType":"VariableDeclaration","scope":3508,"src":"786:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3494,"name":"uint256","nodeType":"ElementaryTypeName","src":"786:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3497,"mutability":"mutable","name":"ticketPrice","nameLocation":"822:11:16","nodeType":"VariableDeclaration","scope":3508,"src":"814:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3496,"name":"uint256","nodeType":"ElementaryTypeName","src":"814:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3499,"mutability":"mutable","name":"maxSupply","nameLocation":"852:9:16","nodeType":"VariableDeclaration","scope":3508,"src":"844:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3498,"name":"uint256","nodeType":"ElementaryTypeName","src":"844:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3501,"mutability":"mutable","name":"soldTickets","nameLocation":"880:11:16","nodeType":"VariableDeclaration","scope":3508,"src":"872:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3500,"name":"uint256","nodeType":"ElementaryTypeName","src":"872:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3503,"mutability":"mutable","name":"organizer","nameLocation":"910:9:16","nodeType":"VariableDeclaration","scope":3508,"src":"902:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3502,"name":"address","nodeType":"ElementaryTypeName","src":"902:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3505,"mutability":"mutable","name":"isActive","nameLocation":"935:8:16","nodeType":"VariableDeclaration","scope":3508,"src":"930:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3504,"name":"bool","nodeType":"ElementaryTypeName","src":"930:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3507,"mutability":"mutable","name":"imageCID","nameLocation":"961:8:16","nodeType":"VariableDeclaration","scope":3508,"src":"954:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3506,"name":"string","nodeType":"ElementaryTypeName","src":"954:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"Event","nameLocation":"697:5:16","nodeType":"StructDefinition","scope":4562,"src":"690:315:16","visibility":"public"},{"canonicalName":"EventTicketNFT.Ticket","id":3517,"members":[{"constant":false,"id":3510,"mutability":"mutable","name":"id","nameLocation":"1046:2:16","nodeType":"VariableDeclaration","scope":3517,"src":"1038:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3509,"name":"uint256","nodeType":"ElementaryTypeName","src":"1038:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3512,"mutability":"mutable","name":"eventId","nameLocation":"1067:7:16","nodeType":"VariableDeclaration","scope":3517,"src":"1059:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3511,"name":"uint256","nodeType":"ElementaryTypeName","src":"1059:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3514,"mutability":"mutable","name":"ticketNumber","nameLocation":"1093:12:16","nodeType":"VariableDeclaration","scope":3517,"src":"1085:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3513,"name":"uint256","nodeType":"ElementaryTypeName","src":"1085:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3516,"mutability":"mutable","name":"metadataURI","nameLocation":"1123:11:16","nodeType":"VariableDeclaration","scope":3517,"src":"1116:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3515,"name":"string","nodeType":"ElementaryTypeName","src":"1116:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"Ticket","nameLocation":"1020:6:16","nodeType":"StructDefinition","scope":4562,"src":"1013:129:16","visibility":"public"},{"canonicalName":"EventTicketNFT.MarketplaceListing","id":3526,"members":[{"constant":false,"id":3519,"mutability":"mutable","name":"ticketId","nameLocation":"1195:8:16","nodeType":"VariableDeclaration","scope":3526,"src":"1187:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3518,"name":"uint256","nodeType":"ElementaryTypeName","src":"1187:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3521,"mutability":"mutable","name":"seller","nameLocation":"1222:6:16","nodeType":"VariableDeclaration","scope":3526,"src":"1214:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3520,"name":"address","nodeType":"ElementaryTypeName","src":"1214:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3523,"mutability":"mutable","name":"price","nameLocation":"1247:5:16","nodeType":"VariableDeclaration","scope":3526,"src":"1239:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3522,"name":"uint256","nodeType":"ElementaryTypeName","src":"1239:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3525,"mutability":"mutable","name":"isActive","nameLocation":"1268:8:16","nodeType":"VariableDeclaration","scope":3526,"src":"1263:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3524,"name":"bool","nodeType":"ElementaryTypeName","src":"1263:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"MarketplaceListing","nameLocation":"1157:18:16","nodeType":"StructDefinition","scope":4562,"src":"1150:134:16","visibility":"public"},{"constant":false,"functionSelector":"0b791430","id":3531,"mutability":"mutable","name":"events","nameLocation":"1342:6:16","nodeType":"VariableDeclaration","scope":4562,"src":"1309:39:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Event_$3508_storage_$","typeString":"mapping(uint256 => struct EventTicketNFT.Event)"},"typeName":{"id":3530,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3527,"name":"uint256","nodeType":"ElementaryTypeName","src":"1317:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1309:25:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Event_$3508_storage_$","typeString":"mapping(uint256 => struct EventTicketNFT.Event)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3529,"nodeType":"UserDefinedTypeName","pathNode":{"id":3528,"name":"Event","nameLocations":["1328:5:16"],"nodeType":"IdentifierPath","referencedDeclaration":3508,"src":"1328:5:16"},"referencedDeclaration":3508,"src":"1328:5:16","typeDescriptions":{"typeIdentifier":"t_struct$_Event_$3508_storage_ptr","typeString":"struct EventTicketNFT.Event"}}},"visibility":"public"},{"constant":false,"functionSelector":"50b44712","id":3536,"mutability":"mutable","name":"tickets","nameLocation":"1389:7:16","nodeType":"VariableDeclaration","scope":4562,"src":"1355:41:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Ticket_$3517_storage_$","typeString":"mapping(uint256 => struct EventTicketNFT.Ticket)"},"typeName":{"id":3535,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3532,"name":"uint256","nodeType":"ElementaryTypeName","src":"1363:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1355:26:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Ticket_$3517_storage_$","typeString":"mapping(uint256 => struct EventTicketNFT.Ticket)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3534,"nodeType":"UserDefinedTypeName","pathNode":{"id":3533,"name":"Ticket","nameLocations":["1374:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":3517,"src":"1374:6:16"},"referencedDeclaration":3517,"src":"1374:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_Ticket_$3517_storage_ptr","typeString":"struct EventTicketNFT.Ticket"}}},"visibility":"public"},{"constant":false,"functionSelector":"48c32093","id":3541,"mutability":"mutable","name":"marketplaceListings","nameLocation":"1449:19:16","nodeType":"VariableDeclaration","scope":4562,"src":"1403:65:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MarketplaceListing_$3526_storage_$","typeString":"mapping(uint256 => struct EventTicketNFT.MarketplaceListing)"},"typeName":{"id":3540,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3537,"name":"uint256","nodeType":"ElementaryTypeName","src":"1411:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1403:38:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MarketplaceListing_$3526_storage_$","typeString":"mapping(uint256 => struct EventTicketNFT.MarketplaceListing)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3539,"nodeType":"UserDefinedTypeName","pathNode":{"id":3538,"name":"MarketplaceListing","nameLocations":["1422:18:16"],"nodeType":"IdentifierPath","referencedDeclaration":3526,"src":"1422:18:16"},"referencedDeclaration":3526,"src":"1422:18:16","typeDescriptions":{"typeIdentifier":"t_struct$_MarketplaceListing_$3526_storage_ptr","typeString":"struct EventTicketNFT.MarketplaceListing"}}},"visibility":"public"},{"constant":false,"functionSelector":"f6ac04da","id":3545,"mutability":"mutable","name":"ticketToEvent","nameLocation":"1510:13:16","nodeType":"VariableDeclaration","scope":4562,"src":"1475:48:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":3544,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3542,"name":"uint256","nodeType":"ElementaryTypeName","src":"1483:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1475:27:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3543,"name":"uint256","nodeType":"ElementaryTypeName","src":"1494:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"81f945738beff591c3eab232e9f3265ce3f12263a2ec7acf84db8dc0fce26a27","id":3557,"name":"EventCreated","nameLocation":"1580:12:16","nodeType":"EventDefinition","parameters":{"id":3556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3547,"indexed":true,"mutability":"mutable","name":"eventId","nameLocation":"1609:7:16","nodeType":"VariableDeclaration","scope":3557,"src":"1593:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3546,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3549,"indexed":false,"mutability":"mutable","name":"name","nameLocation":"1625:4:16","nodeType":"VariableDeclaration","scope":3557,"src":"1618:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3548,"name":"string","nodeType":"ElementaryTypeName","src":"1618:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3551,"indexed":true,"mutability":"mutable","name":"organizer","nameLocation":"1647:9:16","nodeType":"VariableDeclaration","scope":3557,"src":"1631:25:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3550,"name":"address","nodeType":"ElementaryTypeName","src":"1631:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3553,"indexed":false,"mutability":"mutable","name":"ticketPrice","nameLocation":"1666:11:16","nodeType":"VariableDeclaration","scope":3557,"src":"1658:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3552,"name":"uint256","nodeType":"ElementaryTypeName","src":"1658:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3555,"indexed":false,"mutability":"mutable","name":"maxSupply","nameLocation":"1687:9:16","nodeType":"VariableDeclaration","scope":3557,"src":"1679:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3554,"name":"uint256","nodeType":"ElementaryTypeName","src":"1679:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1592:105:16"},"src":"1574:124:16"},{"anonymous":false,"eventSelector":"4fe0f5bb11eb6ab81c428fb83261719e5b22f84b3e1942cd491c3777504bb851","id":3567,"name":"TicketMinted","nameLocation":"1710:12:16","nodeType":"EventDefinition","parameters":{"id":3566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3559,"indexed":true,"mutability":"mutable","name":"ticketId","nameLocation":"1739:8:16","nodeType":"VariableDeclaration","scope":3567,"src":"1723:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3558,"name":"uint256","nodeType":"ElementaryTypeName","src":"1723:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3561,"indexed":true,"mutability":"mutable","name":"eventId","nameLocation":"1765:7:16","nodeType":"VariableDeclaration","scope":3567,"src":"1749:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3560,"name":"uint256","nodeType":"ElementaryTypeName","src":"1749:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3563,"indexed":true,"mutability":"mutable","name":"buyer","nameLocation":"1790:5:16","nodeType":"VariableDeclaration","scope":3567,"src":"1774:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3562,"name":"address","nodeType":"ElementaryTypeName","src":"1774:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3565,"indexed":false,"mutability":"mutable","name":"ticketNumber","nameLocation":"1805:12:16","nodeType":"VariableDeclaration","scope":3567,"src":"1797:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3564,"name":"uint256","nodeType":"ElementaryTypeName","src":"1797:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1722:96:16"},"src":"1704:115:16"},{"anonymous":false,"eventSelector":"22968ec3be3687b180f3544163a034b88d57b48159d9a7e9a1b610fdb2d05f80","id":3575,"name":"TicketListed","nameLocation":"1831:12:16","nodeType":"EventDefinition","parameters":{"id":3574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3569,"indexed":true,"mutability":"mutable","name":"ticketId","nameLocation":"1860:8:16","nodeType":"VariableDeclaration","scope":3575,"src":"1844:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3568,"name":"uint256","nodeType":"ElementaryTypeName","src":"1844:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3571,"indexed":true,"mutability":"mutable","name":"seller","nameLocation":"1886:6:16","nodeType":"VariableDeclaration","scope":3575,"src":"1870:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3570,"name":"address","nodeType":"ElementaryTypeName","src":"1870:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3573,"indexed":false,"mutability":"mutable","name":"price","nameLocation":"1902:5:16","nodeType":"VariableDeclaration","scope":3575,"src":"1894:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3572,"name":"uint256","nodeType":"ElementaryTypeName","src":"1894:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1843:65:16"},"src":"1825:84:16"},{"anonymous":false,"eventSelector":"2bbc64d6afd28a753f6c5e4aaa894f1d684c44a0e080167eae104ac8505cfebd","id":3585,"name":"TicketSold","nameLocation":"1921:10:16","nodeType":"EventDefinition","parameters":{"id":3584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3577,"indexed":true,"mutability":"mutable","name":"ticketId","nameLocation":"1948:8:16","nodeType":"VariableDeclaration","scope":3585,"src":"1932:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3576,"name":"uint256","nodeType":"ElementaryTypeName","src":"1932:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3579,"indexed":true,"mutability":"mutable","name":"seller","nameLocation":"1974:6:16","nodeType":"VariableDeclaration","scope":3585,"src":"1958:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3578,"name":"address","nodeType":"ElementaryTypeName","src":"1958:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3581,"indexed":true,"mutability":"mutable","name":"buyer","nameLocation":"1998:5:16","nodeType":"VariableDeclaration","scope":3585,"src":"1982:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3580,"name":"address","nodeType":"ElementaryTypeName","src":"1982:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3583,"indexed":false,"mutability":"mutable","name":"price","nameLocation":"2013:5:16","nodeType":"VariableDeclaration","scope":3585,"src":"2005:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3582,"name":"uint256","nodeType":"ElementaryTypeName","src":"2005:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1931:88:16"},"src":"1915:105:16"},{"anonymous":false,"eventSelector":"76c5d8a17d0bee8bd0e004133353cd78ede70ac9ace2aa18bf839e748caff290","id":3591,"name":"TicketListingCancelled","nameLocation":"2032:22:16","nodeType":"EventDefinition","parameters":{"id":3590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3587,"indexed":true,"mutability":"mutable","name":"ticketId","nameLocation":"2071:8:16","nodeType":"VariableDeclaration","scope":3591,"src":"2055:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3586,"name":"uint256","nodeType":"ElementaryTypeName","src":"2055:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3589,"indexed":true,"mutability":"mutable","name":"seller","nameLocation":"2097:6:16","nodeType":"VariableDeclaration","scope":3591,"src":"2081:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3588,"name":"address","nodeType":"ElementaryTypeName","src":"2081:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2054:50:16"},"src":"2026:79:16"},{"body":{"id":3602,"nodeType":"Block","src":"2181:2:16","statements":[]},"id":3603,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"4576656e745469636b65744e4654","id":3594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2134:16:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a47288c99056c1d27e8c33087e35c7fa4ac65499d69febc5df20a311d3a8ff1","typeString":"literal_string \"EventTicketNFT\""},"value":"EventTicketNFT"},{"hexValue":"45544e4654","id":3595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2152:7:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_31af608e9818706f5a5d65bb12287b2b9f7372a849d4277da9cef501f47e4a5b","typeString":"literal_string \"ETNFT\""},"value":"ETNFT"}],"id":3596,"kind":"baseConstructorSpecifier","modifierName":{"id":3593,"name":"ERC721","nameLocations":["2127:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":1293,"src":"2127:6:16"},"nodeType":"ModifierInvocation","src":"2127:33:16"},{"arguments":[{"expression":{"id":3598,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2169:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2173:6:16","memberName":"sender","nodeType":"MemberAccess","src":"2169:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3600,"kind":"baseConstructorSpecifier","modifierName":{"id":3597,"name":"Ownable","nameLocations":["2161:7:16"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"2161:7:16"},"nodeType":"ModifierInvocation","src":"2161:19:16"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3592,"nodeType":"ParameterList","parameters":[],"src":"2124:2:16"},"returnParameters":{"id":3601,"nodeType":"ParameterList","parameters":[],"src":"2181:0:16"},"scope":4562,"src":"2113:70:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3690,"nodeType":"Block","src":"2486:873:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3622,"name":"_eventDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3610,"src":"2505:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":3623,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2518:5:16","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2524:9:16","memberName":"timestamp","nodeType":"MemberAccess","src":"2518:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2505:28:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4576656e742064617465206d75737420626520696e2074686520667574757265","id":3626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2535:34:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_58a81b18967fed51eae4113433412e57ba96309b406034f0f5f9e638a23873d0","typeString":"literal_string \"Event date must be in the future\""},"value":"Event date must be in the future"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_58a81b18967fed51eae4113433412e57ba96309b406034f0f5f9e638a23873d0","typeString":"literal_string \"Event date must be in the future\""}],"id":3621,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2497:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2497:73:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3628,"nodeType":"ExpressionStatement","src":"2497:73:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3630,"name":"_ticketPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3612,"src":"2589:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2604:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2589:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5469636b6574207072696365206d7573742062652067726561746572207468616e2030","id":3633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2607:37:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_dbeddb916c17f69da492a95ffd85b3797c1fe215391bc0a7ff8074f0eff7ba7a","typeString":"literal_string \"Ticket price must be greater than 0\""},"value":"Ticket price must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dbeddb916c17f69da492a95ffd85b3797c1fe215391bc0a7ff8074f0eff7ba7a","typeString":"literal_string \"Ticket price must be greater than 0\""}],"id":3629,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2581:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2581:64:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3635,"nodeType":"ExpressionStatement","src":"2581:64:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3637,"name":"_maxSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3614,"src":"2664:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2677:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2664:14:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d617820737570706c79206d7573742062652067726561746572207468616e2030","id":3640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2680:35:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_70a6648aa72a1e7168c40902f40c67b1d1a9aad6f898271bd268101fd953f64f","typeString":"literal_string \"Max supply must be greater than 0\""},"value":"Max supply must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_70a6648aa72a1e7168c40902f40c67b1d1a9aad6f898271bd268101fd953f64f","typeString":"literal_string \"Max supply must be greater than 0\""}],"id":3636,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2656:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2656:60:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3642,"nodeType":"ExpressionStatement","src":"2656:60:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3646,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3606,"src":"2741:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3645,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2735:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3644,"name":"bytes","nodeType":"ElementaryTypeName","src":"2735:5:16","typeDescriptions":{}}},"id":3647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2748:6:16","memberName":"length","nodeType":"MemberAccess","src":"2735:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2757:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2735:23:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4576656e74206e616d652063616e6e6f7420626520656d707479","id":3651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2760:28:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_f1b4f6f21c9e48a1f15e98eb1404e2b4fac5ff853156638ada62cfc3592c075b","typeString":"literal_string \"Event name cannot be empty\""},"value":"Event name cannot be empty"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f1b4f6f21c9e48a1f15e98eb1404e2b4fac5ff853156638ada62cfc3592c075b","typeString":"literal_string \"Event name cannot be empty\""}],"id":3643,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2727:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2727:62:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3653,"nodeType":"ExpressionStatement","src":"2727:62:16"},{"expression":{"id":3655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2802:16:16","subExpression":{"id":3654,"name":"eventIdCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3485,"src":"2802:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3656,"nodeType":"ExpressionStatement","src":"2802:16:16"},{"assignments":[3658],"declarations":[{"constant":false,"id":3658,"mutability":"mutable","name":"eventId","nameLocation":"2837:7:16","nodeType":"VariableDeclaration","scope":3690,"src":"2829:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3657,"name":"uint256","nodeType":"ElementaryTypeName","src":"2829:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3660,"initialValue":{"id":3659,"name":"eventIdCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3485,"src":"2847:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2829:32:16"},{"expression":{"id":3677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3661,"name":"events","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3531,"src":"2874:6:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Event_$3508_storage_$","typeString":"mapping(uint256 => struct EventTicketNFT.Event storage ref)"}},"id":3663,"indexExpression":{"id":3662,"name":"eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3658,"src":"2881:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2874:15:16","typeDescriptions":{"typeIdentifier":"t_struct$_Event_$3508_storage","typeString":"struct EventTicketNFT.Event storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3665,"name":"eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3658,"src":"2917:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3666,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3606,"src":"2945:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3667,"name":"_description","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3608,"src":"2978:12:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3668,"name":"_eventDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3610,"src":"3016:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3669,"name":"_ticketPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3612,"src":"3054:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3670,"name":"_maxSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3614,"src":"3092:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":3671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3130:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"id":3672,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3157:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3161:6:16","memberName":"sender","nodeType":"MemberAccess","src":"3157:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":3674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3192:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3675,"name":"_imageCID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3616,"src":"3221:9:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3664,"name":"Event","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3508,"src":"2892:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Event_$3508_storage_ptr_$","typeString":"type(struct EventTicketNFT.Event storage pointer)"}},"id":3676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["2913:2:16","2939:4:16","2965:11:16","3005:9:16","3041:11:16","3081:9:16","3117:11:16","3146:9:16","3182:8:16","3211:8:16"],"names":["id","name","description","eventDate","ticketPrice","maxSupply","soldTickets","organizer","isActive","imageCID"],"nodeType":"FunctionCall","src":"2892:350:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Event_$3508_memory_ptr","typeString":"struct EventTicketNFT.Event memory"}},"src":"2874:368:16","typeDescriptions":{"typeIdentifier":"t_struct$_Event_$3508_storage","typeString":"struct EventTicketNFT.Event storage ref"}},"id":3678,"nodeType":"ExpressionStatement","src":"2874:368:16"},{"eventCall":{"arguments":[{"id":3680,"name":"eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3658,"src":"3273:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3681,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3606,"src":"3282:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":3682,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3289:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3293:6:16","memberName":"sender","nodeType":"MemberAccess","src":"3289:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3684,"name":"_ticketPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3612,"src":"3301:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3685,"name":"_maxSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3614,"src":"3315:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3679,"name":"EventCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3557,"src":"3260:12:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,string memory,address,uint256,uint256)"}},"id":3686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3260:66:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3687,"nodeType":"EmitStatement","src":"3255:71:16"},{"expression":{"id":3688,"name":"eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3658,"src":"3344:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3620,"id":3689,"nodeType":"Return","src":"3337:14:16"}]},"documentation":{"id":3604,"nodeType":"StructuredDocumentation","src":"2191:44:16","text":" @dev Create a new event"},"functionSelector":"94816f83","id":3691,"implemented":true,"kind":"function","modifiers":[],"name":"createEvent","nameLocation":"2250:11:16","nodeType":"FunctionDefinition","parameters":{"id":3617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3606,"mutability":"mutable","name":"_name","nameLocation":"2286:5:16","nodeType":"VariableDeclaration","scope":3691,"src":"2272:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3605,"name":"string","nodeType":"ElementaryTypeName","src":"2272:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3608,"mutability":"mutable","name":"_description","nameLocation":"2316:12:16","nodeType":"VariableDeclaration","scope":3691,"src":"2302:26:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3607,"name":"string","nodeType":"ElementaryTypeName","src":"2302:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3610,"mutability":"mutable","name":"_eventDate","nameLocation":"2347:10:16","nodeType":"VariableDeclaration","scope":3691,"src":"2339:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3609,"name":"uint256","nodeType":"ElementaryTypeName","src":"2339:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3612,"mutability":"mutable","name":"_ticketPrice","nameLocation":"2376:12:16","nodeType":"VariableDeclaration","scope":3691,"src":"2368:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3611,"name":"uint256","nodeType":"ElementaryTypeName","src":"2368:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3614,"mutability":"mutable","name":"_maxSupply","nameLocation":"2407:10:16","nodeType":"VariableDeclaration","scope":3691,"src":"2399:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3613,"name":"uint256","nodeType":"ElementaryTypeName","src":"2399:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3616,"mutability":"mutable","name":"_imageCID","nameLocation":"2442:9:16","nodeType":"VariableDeclaration","scope":3691,"src":"2428:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3615,"name":"string","nodeType":"ElementaryTypeName","src":"2428:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2261:197:16"},"returnParameters":{"id":3620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3619,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3691,"src":"2477:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3618,"name":"uint256","nodeType":"ElementaryTypeName","src":"2477:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2476:9:16"},"scope":4562,"src":"2241:1118:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3812,"nodeType":"Block","src":"3514:1255:16","statements":[{"assignments":[3703],"declarations":[{"constant":false,"id":3703,"mutability":"mutable","name":"eventInfo","nameLocation":"3539:9:16","nodeType":"VariableDeclaration","scope":3812,"src":"3525:23:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Event_$3508_storage_ptr","typeString":"struct EventTicketNFT.Event"},"typeName":{"id":3702,"nodeType":"UserDefinedTypeName","pathNode":{"id":3701,"name":"Event","nameLocations":["3525:5:16"],"nodeType":"IdentifierPath","referencedDeclaration":3508,"src":"3525:5:16"},"referencedDeclaration":3508,"src":"3525:5:16","typeDescriptions":{"typeIdentifier":"t_struct$_Event_$3508_storage_ptr","typeString":"struct EventTicketNFT.Event"}},"visibility":"internal"}],"id":3707,"initialValue":{"baseExpression":{"id":3704,"name":"events","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3531,"src":"3551:6:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Event_$3508_storage_$","typeString":"mapping(uint256 => struct EventTicketNFT.Event storage ref)"}},"id":3706,"indexExpression":{"id":3705,"name":"_eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3694,"src":"3558:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3551:16:16","typeDescriptions":{"typeIdentifier":"t_struct$_Event_$3508_storage","typeString":"struct EventTicketNFT.Event storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3525:42:16"},{"expression":{"arguments":[{"expression":{"id":3709,"name":"eventInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3703,"src":"3586:9:16","typeDescriptions":{"typeIdentifier":"t_struct$_Event_$3508_storage_ptr","typeString":"struct EventTicketNFT.Event storage pointer"}},"id":3710,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3596:8:16","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":3505,"src":"3586:18:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4576656e74206973206e6f7420616374697665","id":3711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3606:21:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_b8444a3075f560e820cb6544081238af96f12c1ede1ac53a5afa99682837bcbc","typeString":"literal_string \"Event is not active\""},"value":"Event is not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b8444a3075f560e820cb6544081238af96f12c1ede1ac53a5afa99682837bcbc","typeString":"literal_string \"Event is not active\""}],"id":3708,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3578:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3578:50:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3713,"nodeType":"ExpressionStatement","src":"3578:50:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3715,"name":"eventInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3703,"src":"3647:9:16","typeDescriptions":{"typeIdentifier":"t_struct$_Event_$3508_storage_ptr","typeString":"struct EventTicketNFT.Event storage pointer"}},"id":3716,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3657:11:16","memberName":"soldTickets","nodeType":"MemberAccess","referencedDeclaration":3501,"src":"3647:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3717,"name":"eventInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3703,"src":"3671:9:16","typeDescriptions":{"typeIdentifier":"t_struct$_Event_$3508_storage_ptr","typeString":"struct EventTicketNFT.Event storage pointer"}},"id":3718,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3681:9:16","memberName":"maxSupply","nodeType":"MemberAccess","referencedDeclaration":3499,"src":"3671:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3647:43:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4576656e7420697320736f6c64206f7574","id":3720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3692:19:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_f2db45e8d011e37568f18ada882d7ed451c6dc93308049f733d650ae58859621","typeString":"literal_string \"Event is sold out\""},"value":"Event is sold out"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f2db45e8d011e37568f18ada882d7ed451c6dc93308049f733d650ae58859621","typeString":"literal_string \"Event is sold out\""}],"id":3714,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3639:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3639:73:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3722,"nodeType":"ExpressionStatement","src":"3639:73:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3724,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3731:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3735:5:16","memberName":"value","nodeType":"MemberAccess","src":"3731:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":3726,"name":"eventInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3703,"src":"3744:9:16","typeDescriptions":{"typeIdentifier":"t_struct$_Event_$3508_storage_ptr","typeString":"struct EventTicketNFT.Event storage pointer"}},"id":3727,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3754:11:16","memberName":"ticketPrice","nodeType":"MemberAccess","referencedDeclaration":3497,"src":"3744:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3731:34:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e74207061796d656e74","id":3729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3767:22:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_8d1b93b434e468e73514a2449ae955e822f73dcdf924bb4553be247ebca8755e","typeString":"literal_string \"Insufficient payment\""},"value":"Insufficient payment"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8d1b93b434e468e73514a2449ae955e822f73dcdf924bb4553be247ebca8755e","typeString":"literal_string \"Insufficient payment\""}],"id":3723,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3723:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3723:67:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3731,"nodeType":"ExpressionStatement","src":"3723:67:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3733,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3809:5:16","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3815:9:16","memberName":"timestamp","nodeType":"MemberAccess","src":"3809:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3735,"name":"eventInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3703,"src":"3827:9:16","typeDescriptions":{"typeIdentifier":"t_struct$_Event_$3508_storage_ptr","typeString":"struct EventTicketNFT.Event storage pointer"}},"id":3736,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3837:9:16","memberName":"eventDate","nodeType":"MemberAccess","referencedDeclaration":3495,"src":"3827:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3809:37:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4576656e742068617320616c726561647920706173736564","id":3738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3848:26:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_8f4f697d6c164424211cc99cb1342d12a336bfb3f142f43476735983dee472b0","typeString":"literal_string \"Event has already passed\""},"value":"Event has already passed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8f4f697d6c164424211cc99cb1342d12a336bfb3f142f43476735983dee472b0","typeString":"literal_string \"Event has already passed\""}],"id":3732,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3801:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3801:74:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3740,"nodeType":"ExpressionStatement","src":"3801:74:16"},{"expression":{"id":3742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3888:17:16","subExpression":{"id":3741,"name":"ticketIdCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3487,"src":"3888:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3743,"nodeType":"ExpressionStatement","src":"3888:17:16"},{"assignments":[3745],"declarations":[{"constant":false,"id":3745,"mutability":"mutable","name":"ticketId","nameLocation":"3924:8:16","nodeType":"VariableDeclaration","scope":3812,"src":"3916:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3744,"name":"uint256","nodeType":"ElementaryTypeName","src":"3916:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3747,"initialValue":{"id":3746,"name":"ticketIdCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3487,"src":"3935:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3916:34:16"},{"assignments":[3749],"declarations":[{"constant":false,"id":3749,"mutability":"mutable","name":"ticketNumber","nameLocation":"3969:12:16","nodeType":"VariableDeclaration","scope":3812,"src":"3961:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3748,"name":"uint256","nodeType":"ElementaryTypeName","src":"3961:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3754,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3750,"name":"eventInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3703,"src":"3984:9:16","typeDescriptions":{"typeIdentifier":"t_struct$_Event_$3508_storage_ptr","typeString":"struct EventTicketNFT.Event storage pointer"}},"id":3751,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3994:11:16","memberName":"soldTickets","nodeType":"MemberAccess","referencedDeclaration":3501,"src":"3984:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4008:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3984:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3961:48:16"},{"expression":{"id":3758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4060:23:16","subExpression":{"expression":{"id":3755,"name":"eventInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3703,"src":"4060:9:16","typeDescriptions":{"typeIdentifier":"t_struct$_Event_$3508_storage_ptr","typeString":"struct EventTicketNFT.Event storage pointer"}},"id":3757,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4070:11:16","memberName":"soldTickets","nodeType":"MemberAccess","referencedDeclaration":3501,"src":"4060:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3759,"nodeType":"ExpressionStatement","src":"4060:23:16"},{"expression":{"id":3769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3760,"name":"tickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3536,"src":"4180:7:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Ticket_$3517_storage_$","typeString":"mapping(uint256 => struct EventTicketNFT.Ticket storage ref)"}},"id":3762,"indexExpression":{"id":3761,"name":"ticketId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3745,"src":"4188:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4180:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_Ticket_$3517_storage","typeString":"struct EventTicketNFT.Ticket storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3764,"name":"ticketId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3745,"src":"4226:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3765,"name":"_eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3694,"src":"4258:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3766,"name":"ticketNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3749,"src":"4295:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":3767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4335:2:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":3763,"name":"Ticket","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3517,"src":"4200:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Ticket_$3517_storage_ptr_$","typeString":"type(struct EventTicketNFT.Ticket storage pointer)"}},"id":3768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["4222:2:16","4249:7:16","4281:12:16","4322:11:16"],"names":["id","eventId","ticketNumber","metadataURI"],"nodeType":"FunctionCall","src":"4200:149:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Ticket_$3517_memory_ptr","typeString":"struct EventTicketNFT.Ticket memory"}},"src":"4180:169:16","typeDescriptions":{"typeIdentifier":"t_struct$_Ticket_$3517_storage","typeString":"struct EventTicketNFT.Ticket storage ref"}},"id":3770,"nodeType":"ExpressionStatement","src":"4180:169:16"},{"expression":{"id":3775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3771,"name":"ticketToEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3545,"src":"4362:13:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":3773,"indexExpression":{"id":3772,"name":"ticketId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3745,"src":"4376:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4362:23:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3774,"name":"_eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3694,"src":"4388:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4362:34:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3776,"nodeType":"ExpressionStatement","src":"4362:34:16"},{"expression":{"arguments":[{"expression":{"id":3778,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4449:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4453:6:16","memberName":"sender","nodeType":"MemberAccess","src":"4449:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3780,"name":"ticketId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3745,"src":"4461:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3777,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[915,941],"referencedDeclaration":915,"src":"4439:9:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4439:31:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3782,"nodeType":"ExpressionStatement","src":"4439:31:16"},{"assignments":[3784,null],"declarations":[{"constant":false,"id":3784,"mutability":"mutable","name":"success","nameLocation":"4537:7:16","nodeType":"VariableDeclaration","scope":3812,"src":"4532:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3783,"name":"bool","nodeType":"ElementaryTypeName","src":"4532:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":3796,"initialValue":{"arguments":[{"hexValue":"","id":3794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4602:2:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"expression":{"id":3787,"name":"eventInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3703,"src":"4558:9:16","typeDescriptions":{"typeIdentifier":"t_struct$_Event_$3508_storage_ptr","typeString":"struct EventTicketNFT.Event storage pointer"}},"id":3788,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4568:9:16","memberName":"organizer","nodeType":"MemberAccess","referencedDeclaration":3503,"src":"4558:19:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3786,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4550:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":3785,"name":"address","nodeType":"ElementaryTypeName","src":"4550:8:16","stateMutability":"payable","typeDescriptions":{}}},"id":3789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4550:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":3790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4579:4:16","memberName":"call","nodeType":"MemberAccess","src":"4550:33:16","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":3791,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4591:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4595:5:16","memberName":"value","nodeType":"MemberAccess","src":"4591:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"4550:51:16","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4550:55:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4531:74:16"},{"expression":{"arguments":[{"id":3798,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3784,"src":"4624:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061796d656e74207472616e73666572206661696c6564","id":3799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4633:25:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_adeff6f69037e9fb0ef79570477b6867fb6b68d030e2356ab44708f4e12ed2fe","typeString":"literal_string \"Payment transfer failed\""},"value":"Payment transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_adeff6f69037e9fb0ef79570477b6867fb6b68d030e2356ab44708f4e12ed2fe","typeString":"literal_string \"Payment transfer failed\""}],"id":3797,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4616:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4616:43:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3801,"nodeType":"ExpressionStatement","src":"4616:43:16"},{"eventCall":{"arguments":[{"id":3803,"name":"ticketId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3745,"src":"4690:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3804,"name":"_eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3694,"src":"4700:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3805,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4710:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4714:6:16","memberName":"sender","nodeType":"MemberAccess","src":"4710:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3807,"name":"ticketNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3749,"src":"4722:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3802,"name":"TicketMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3567,"src":"4677:12:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,address,uint256)"}},"id":3808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4677:58:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3809,"nodeType":"EmitStatement","src":"4672:63:16"},{"expression":{"id":3810,"name":"ticketId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3745,"src":"4753:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3700,"id":3811,"nodeType":"Return","src":"4746:15:16"}]},"documentation":{"id":3692,"nodeType":"StructuredDocumentation","src":"3367:56:16","text":" @dev Purchase a ticket for an event"},"functionSelector":"67dd74ca","id":3813,"implemented":true,"kind":"function","modifiers":[{"id":3697,"kind":"modifierInvocation","modifierName":{"id":3696,"name":"nonReentrant","nameLocations":["3483:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":1982,"src":"3483:12:16"},"nodeType":"ModifierInvocation","src":"3483:12:16"}],"name":"buyTicket","nameLocation":"3438:9:16","nodeType":"FunctionDefinition","parameters":{"id":3695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3694,"mutability":"mutable","name":"_eventId","nameLocation":"3456:8:16","nodeType":"VariableDeclaration","scope":3813,"src":"3448:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3693,"name":"uint256","nodeType":"ElementaryTypeName","src":"3448:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3447:18:16"},"returnParameters":{"id":3700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3699,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3813,"src":"3505:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3698,"name":"uint256","nodeType":"ElementaryTypeName","src":"3505:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3504:9:16"},"scope":4562,"src":"3429:1340:16","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":3883,"nodeType":"Block","src":"4916:703:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3823,"name":"_ticketId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"4943:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3822,"name":"ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":426,"src":"4935:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":3824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4935:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3825,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4957:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4961:6:16","memberName":"sender","nodeType":"MemberAccess","src":"4957:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4935:32:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"596f7520646f6e2774206f776e2074686973207469636b6574","id":3828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4969:27:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_55ea8240bcdf2c6dc48f419582466fcc0c70b98f7bab9452e47ab9da674d6c3a","typeString":"literal_string \"You don't own this ticket\""},"value":"You don't own this ticket"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_55ea8240bcdf2c6dc48f419582466fcc0c70b98f7bab9452e47ab9da674d6c3a","typeString":"literal_string \"You don't own this ticket\""}],"id":3821,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4927:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4927:70:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3830,"nodeType":"ExpressionStatement","src":"4927:70:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3832,"name":"_price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3818,"src":"5016:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5025:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5016:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5072696365206d7573742062652067726561746572207468616e2030","id":3835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5028:30:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_f496d2a6b8c6dfd2fdeb51133639f7cbcc6985234f7207231dd11f4a16998dde","typeString":"literal_string \"Price must be greater than 0\""},"value":"Price must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f496d2a6b8c6dfd2fdeb51133639f7cbcc6985234f7207231dd11f4a16998dde","typeString":"literal_string \"Price must be greater than 0\""}],"id":3831,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5008:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5008:51:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3837,"nodeType":"ExpressionStatement","src":"5008:51:16"},{"expression":{"arguments":[{"id":3843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5078:40:16","subExpression":{"expression":{"baseExpression":{"id":3839,"name":"marketplaceListings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3541,"src":"5079:19:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MarketplaceListing_$3526_storage_$","typeString":"mapping(uint256 => struct EventTicketNFT.MarketplaceListing storage ref)"}},"id":3841,"indexExpression":{"id":3840,"name":"_ticketId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"5099:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5079:30:16","typeDescriptions":{"typeIdentifier":"t_struct$_MarketplaceListing_$3526_storage","typeString":"struct EventTicketNFT.MarketplaceListing storage ref"}},"id":3842,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5110:8:16","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":3525,"src":"5079:39:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5469636b657420697320616c7265616479206c6973746564","id":3844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5120:26:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_16ac10015506b0c304e629c6c319bead672de9b8b106c75571165551966b3f54","typeString":"literal_string \"Ticket is already listed\""},"value":"Ticket is already listed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_16ac10015506b0c304e629c6c319bead672de9b8b106c75571165551966b3f54","typeString":"literal_string \"Ticket is already listed\""}],"id":3838,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5070:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5070:77:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3846,"nodeType":"ExpressionStatement","src":"5070:77:16"},{"assignments":[3848],"declarations":[{"constant":false,"id":3848,"mutability":"mutable","name":"eventId","nameLocation":"5213:7:16","nodeType":"VariableDeclaration","scope":3883,"src":"5205:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3847,"name":"uint256","nodeType":"ElementaryTypeName","src":"5205:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3852,"initialValue":{"baseExpression":{"id":3849,"name":"ticketToEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3545,"src":"5223:13:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":3851,"indexExpression":{"id":3850,"name":"_ticketId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"5237:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5223:24:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5205:42:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3854,"name":"events","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3531,"src":"5266:6:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Event_$3508_storage_$","typeString":"mapping(uint256 => struct EventTicketNFT.Event storage ref)"}},"id":3856,"indexExpression":{"id":3855,"name":"eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3848,"src":"5273:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5266:15:16","typeDescriptions":{"typeIdentifier":"t_struct$_Event_$3508_storage","typeString":"struct EventTicketNFT.Event storage ref"}},"id":3857,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5282:9:16","memberName":"eventDate","nodeType":"MemberAccess","referencedDeclaration":3495,"src":"5266:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":3858,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5294:5:16","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5300:9:16","memberName":"timestamp","nodeType":"MemberAccess","src":"5294:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5266:43:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e6e6f742073656c6c207469636b65747320666f722070617374206576656e7473","id":3861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5311:37:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_3ae7fb330a68ad5753c7017d183456b1108414fdee1f867a00433bcf83d8d2d2","typeString":"literal_string \"Cannot sell tickets for past events\""},"value":"Cannot sell tickets for past events"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3ae7fb330a68ad5753c7017d183456b1108414fdee1f867a00433bcf83d8d2d2","typeString":"literal_string \"Cannot sell tickets for past events\""}],"id":3853,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5258:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5258:91:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3863,"nodeType":"ExpressionStatement","src":"5258:91:16"},{"expression":{"id":3874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3864,"name":"marketplaceListings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3541,"src":"5362:19:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MarketplaceListing_$3526_storage_$","typeString":"mapping(uint256 => struct EventTicketNFT.MarketplaceListing storage ref)"}},"id":3866,"indexExpression":{"id":3865,"name":"_ticketId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"5382:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5362:30:16","typeDescriptions":{"typeIdentifier":"t_struct$_MarketplaceListing_$3526_storage","typeString":"struct EventTicketNFT.MarketplaceListing storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3868,"name":"_ticketId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"5439:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3869,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5471:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5475:6:16","memberName":"sender","nodeType":"MemberAccess","src":"5471:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3871,"name":"_price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3818,"src":"5503:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":3872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5534:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3867,"name":"MarketplaceListing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3526,"src":"5395:18:16","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_MarketplaceListing_$3526_storage_ptr_$","typeString":"type(struct EventTicketNFT.MarketplaceListing storage pointer)"}},"id":3873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["5429:8:16","5463:6:16","5496:5:16","5524:8:16"],"names":["ticketId","seller","price","isActive"],"nodeType":"FunctionCall","src":"5395:155:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_MarketplaceListing_$3526_memory_ptr","typeString":"struct EventTicketNFT.MarketplaceListing memory"}},"src":"5362:188:16","typeDescriptions":{"typeIdentifier":"t_struct$_MarketplaceListing_$3526_storage","typeString":"struct EventTicketNFT.MarketplaceListing storage ref"}},"id":3875,"nodeType":"ExpressionStatement","src":"5362:188:16"},{"eventCall":{"arguments":[{"id":3877,"name":"_ticketId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"5581:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3878,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5592:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5596:6:16","memberName":"sender","nodeType":"MemberAccess","src":"5592:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3880,"name":"_price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3818,"src":"5604:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3876,"name":"TicketListed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3575,"src":"5568:12:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256)"}},"id":3881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5568:43:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3882,"nodeType":"EmitStatement","src":"5563:48:16"}]},"documentation":{"id":3814,"nodeType":"StructuredDocumentation","src":"4777:69:16","text":" @dev List a ticket for resale on the marketplace"},"functionSelector":"305a905a","id":3884,"implemented":true,"kind":"function","modifiers":[],"name":"listTicket","nameLocation":"4861:10:16","nodeType":"FunctionDefinition","parameters":{"id":3819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3816,"mutability":"mutable","name":"_ticketId","nameLocation":"4880:9:16","nodeType":"VariableDeclaration","scope":3884,"src":"4872:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3815,"name":"uint256","nodeType":"ElementaryTypeName","src":"4872:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3818,"mutability":"mutable","name":"_price","nameLocation":"4899:6:16","nodeType":"VariableDeclaration","scope":3884,"src":"4891:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3817,"name":"uint256","nodeType":"ElementaryTypeName","src":"4891:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4871:35:16"},"returnParameters":{"id":3820,"nodeType":"ParameterList","parameters":[],"src":"4916:0:16"},"scope":4562,"src":"4852:767:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3990,"nodeType":"Block","src":"5766:994:16","statements":[{"assignments":[3894],"declarations":[{"constant":false,"id":3894,"mutability":"mutable","name":"listing","nameLocation":"5804:7:16","nodeType":"VariableDeclaration","scope":3990,"src":"5777:34:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_MarketplaceListing_$3526_storage_ptr","typeString":"struct EventTicketNFT.MarketplaceListing"},"typeName":{"id":3893,"nodeType":"UserDefinedTypeName","pathNode":{"id":3892,"name":"MarketplaceListing","nameLocations":["5777:18:16"],"nodeType":"IdentifierPath","referencedDeclaration":3526,"src":"5777:18:16"},"referencedDeclaration":3526,"src":"5777:18:16","typeDescriptions":{"typeIdentifier":"t_struct$_MarketplaceListing_$3526_storage_ptr","typeString":"struct EventTicketNFT.MarketplaceListing"}},"visibility":"internal"}],"id":3898,"initialValue":{"baseExpression":{"id":3895,"name":"marketplaceListings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3541,"src":"5814:19:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MarketplaceListing_$3526_storage_$","typeString":"mapping(uint256 => struct EventTicketNFT.MarketplaceListing storage ref)"}},"id":3897,"indexExpression":{"id":3896,"name":"_ticketId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"5834:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5814:30:16","typeDescriptions":{"typeIdentifier":"t_struct$_MarketplaceListing_$3526_storage","typeString":"struct EventTicketNFT.MarketplaceListing storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5777:67:16"},{"expression":{"arguments":[{"expression":{"id":3900,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3894,"src":"5863:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_MarketplaceListing_$3526_storage_ptr","typeString":"struct EventTicketNFT.MarketplaceListing storage pointer"}},"id":3901,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5871:8:16","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":3525,"src":"5863:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5469636b6574206973206e6f74206c697374656420666f722073616c65","id":3902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5881:31:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_bbe9577aa005ed6b6dbddd783648cb01e4144ad5f71e747d0368acc55164e1a3","typeString":"literal_string \"Ticket is not listed for sale\""},"value":"Ticket is not listed for sale"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bbe9577aa005ed6b6dbddd783648cb01e4144ad5f71e747d0368acc55164e1a3","typeString":"literal_string \"Ticket is not listed for sale\""}],"id":3899,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5855:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5855:58:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3904,"nodeType":"ExpressionStatement","src":"5855:58:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3906,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5932:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5936:5:16","memberName":"value","nodeType":"MemberAccess","src":"5932:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":3908,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3894,"src":"5945:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_MarketplaceListing_$3526_storage_ptr","typeString":"struct EventTicketNFT.MarketplaceListing storage pointer"}},"id":3909,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5953:5:16","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":3523,"src":"5945:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5932:26:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e74207061796d656e74","id":3911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5960:22:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_8d1b93b434e468e73514a2449ae955e822f73dcdf924bb4553be247ebca8755e","typeString":"literal_string \"Insufficient payment\""},"value":"Insufficient payment"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8d1b93b434e468e73514a2449ae955e822f73dcdf924bb4553be247ebca8755e","typeString":"literal_string \"Insufficient payment\""}],"id":3905,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5924:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5924:59:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3913,"nodeType":"ExpressionStatement","src":"5924:59:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3916,"name":"_ticketId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"6010:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3915,"name":"ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":426,"src":"6002:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":3917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6002:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3918,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3894,"src":"6024:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_MarketplaceListing_$3526_storage_ptr","typeString":"struct EventTicketNFT.MarketplaceListing storage pointer"}},"id":3919,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6032:6:16","memberName":"seller","nodeType":"MemberAccess","referencedDeclaration":3521,"src":"6024:14:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6002:36:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53656c6c6572206e6f206c6f6e676572206f776e7320746865207469636b6574","id":3921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6040:34:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_b9bd71c9f98033f096609c9be16498005116bad6be9c7d3e736232f6b582510f","typeString":"literal_string \"Seller no longer owns the ticket\""},"value":"Seller no longer owns the ticket"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b9bd71c9f98033f096609c9be16498005116bad6be9c7d3e736232f6b582510f","typeString":"literal_string \"Seller no longer owns the ticket\""}],"id":3914,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5994:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5994:81:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3923,"nodeType":"ExpressionStatement","src":"5994:81:16"},{"assignments":[3925],"declarations":[{"constant":false,"id":3925,"mutability":"mutable","name":"eventId","nameLocation":"6141:7:16","nodeType":"VariableDeclaration","scope":3990,"src":"6133:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3924,"name":"uint256","nodeType":"ElementaryTypeName","src":"6133:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3929,"initialValue":{"baseExpression":{"id":3926,"name":"ticketToEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3545,"src":"6151:13:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":3928,"indexExpression":{"id":3927,"name":"_ticketId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"6165:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6151:24:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6133:42:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3931,"name":"events","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3531,"src":"6194:6:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Event_$3508_storage_$","typeString":"mapping(uint256 => struct EventTicketNFT.Event storage ref)"}},"id":3933,"indexExpression":{"id":3932,"name":"eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3925,"src":"6201:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6194:15:16","typeDescriptions":{"typeIdentifier":"t_struct$_Event_$3508_storage","typeString":"struct EventTicketNFT.Event storage ref"}},"id":3934,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6210:9:16","memberName":"eventDate","nodeType":"MemberAccess","referencedDeclaration":3495,"src":"6194:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":3935,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6222:5:16","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6228:9:16","memberName":"timestamp","nodeType":"MemberAccess","src":"6222:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6194:43:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e6e6f7420627579207469636b65747320666f722070617374206576656e7473","id":3938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6239:36:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_29d99e722b1d2b1a4b7548f1dffcb76273ed4117a40f2a30f6e67c7f4c652abc","typeString":"literal_string \"Cannot buy tickets for past events\""},"value":"Cannot buy tickets for past events"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_29d99e722b1d2b1a4b7548f1dffcb76273ed4117a40f2a30f6e67c7f4c652abc","typeString":"literal_string \"Cannot buy tickets for past events\""}],"id":3930,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6186:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6186:90:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3940,"nodeType":"ExpressionStatement","src":"6186:90:16"},{"assignments":[3942],"declarations":[{"constant":false,"id":3942,"mutability":"mutable","name":"seller","nameLocation":"6297:6:16","nodeType":"VariableDeclaration","scope":3990,"src":"6289:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3941,"name":"address","nodeType":"ElementaryTypeName","src":"6289:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3945,"initialValue":{"expression":{"id":3943,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3894,"src":"6306:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_MarketplaceListing_$3526_storage_ptr","typeString":"struct EventTicketNFT.MarketplaceListing storage pointer"}},"id":3944,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6314:6:16","memberName":"seller","nodeType":"MemberAccess","referencedDeclaration":3521,"src":"6306:14:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6289:31:16"},{"assignments":[3947],"declarations":[{"constant":false,"id":3947,"mutability":"mutable","name":"price","nameLocation":"6339:5:16","nodeType":"VariableDeclaration","scope":3990,"src":"6331:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3946,"name":"uint256","nodeType":"ElementaryTypeName","src":"6331:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3950,"initialValue":{"expression":{"id":3948,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3894,"src":"6347:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_MarketplaceListing_$3526_storage_ptr","typeString":"struct EventTicketNFT.MarketplaceListing storage pointer"}},"id":3949,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6355:5:16","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":3523,"src":"6347:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6331:29:16"},{"expression":{"id":3955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3951,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3894,"src":"6404:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_MarketplaceListing_$3526_storage_ptr","typeString":"struct EventTicketNFT.MarketplaceListing storage pointer"}},"id":3953,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6412:8:16","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":3525,"src":"6404:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":3954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6423:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6404:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3956,"nodeType":"ExpressionStatement","src":"6404:24:16"},{"expression":{"arguments":[{"id":3958,"name":"seller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3942,"src":"6489:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3959,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6497:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6501:6:16","memberName":"sender","nodeType":"MemberAccess","src":"6497:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3961,"name":"_ticketId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"6509:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3957,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"6479:9:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6479:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3963,"nodeType":"ExpressionStatement","src":"6479:40:16"},{"assignments":[3965,null],"declarations":[{"constant":false,"id":3965,"mutability":"mutable","name":"success","nameLocation":"6577:7:16","nodeType":"VariableDeclaration","scope":3990,"src":"6572:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3964,"name":"bool","nodeType":"ElementaryTypeName","src":"6572:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":3976,"initialValue":{"arguments":[{"hexValue":"","id":3974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6629:2:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"id":3968,"name":"seller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3942,"src":"6598:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3967,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6590:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":3966,"name":"address","nodeType":"ElementaryTypeName","src":"6590:8:16","stateMutability":"payable","typeDescriptions":{}}},"id":3969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6590:15:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":3970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6606:4:16","memberName":"call","nodeType":"MemberAccess","src":"6590:20:16","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":3971,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6618:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6622:5:16","memberName":"value","nodeType":"MemberAccess","src":"6618:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"6590:38:16","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6590:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6571:61:16"},{"expression":{"arguments":[{"id":3978,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3965,"src":"6651:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061796d656e74207472616e73666572206661696c6564","id":3979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6660:25:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_adeff6f69037e9fb0ef79570477b6867fb6b68d030e2356ab44708f4e12ed2fe","typeString":"literal_string \"Payment transfer failed\""},"value":"Payment transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_adeff6f69037e9fb0ef79570477b6867fb6b68d030e2356ab44708f4e12ed2fe","typeString":"literal_string \"Payment transfer failed\""}],"id":3977,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6643:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6643:43:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3981,"nodeType":"ExpressionStatement","src":"6643:43:16"},{"eventCall":{"arguments":[{"id":3983,"name":"_ticketId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"6715:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3984,"name":"seller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3942,"src":"6726:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3985,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6734:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6738:6:16","memberName":"sender","nodeType":"MemberAccess","src":"6734:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3987,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3947,"src":"6746:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3982,"name":"TicketSold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"6704:10:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,address,uint256)"}},"id":3988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6704:48:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3989,"nodeType":"EmitStatement","src":"6699:53:16"}]},"documentation":{"id":3885,"nodeType":"StructuredDocumentation","src":"5627:59:16","text":" @dev Buy a ticket from the marketplace"},"functionSelector":"50248853","id":3991,"implemented":true,"kind":"function","modifiers":[{"id":3890,"kind":"modifierInvocation","modifierName":{"id":3889,"name":"nonReentrant","nameLocations":["5753:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":1982,"src":"5753:12:16"},"nodeType":"ModifierInvocation","src":"5753:12:16"}],"name":"buyListedTicket","nameLocation":"5701:15:16","nodeType":"FunctionDefinition","parameters":{"id":3888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3887,"mutability":"mutable","name":"_ticketId","nameLocation":"5725:9:16","nodeType":"VariableDeclaration","scope":3991,"src":"5717:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3886,"name":"uint256","nodeType":"ElementaryTypeName","src":"5717:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5716:19:16"},"returnParameters":{"id":3891,"nodeType":"ParameterList","parameters":[],"src":"5766:0:16"},"scope":4562,"src":"5692:1068:16","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":4031,"nodeType":"Block","src":"6879:321:16","statements":[{"assignments":[3999],"declarations":[{"constant":false,"id":3999,"mutability":"mutable","name":"listing","nameLocation":"6917:7:16","nodeType":"VariableDeclaration","scope":4031,"src":"6890:34:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_MarketplaceListing_$3526_storage_ptr","typeString":"struct EventTicketNFT.MarketplaceListing"},"typeName":{"id":3998,"nodeType":"UserDefinedTypeName","pathNode":{"id":3997,"name":"MarketplaceListing","nameLocations":["6890:18:16"],"nodeType":"IdentifierPath","referencedDeclaration":3526,"src":"6890:18:16"},"referencedDeclaration":3526,"src":"6890:18:16","typeDescriptions":{"typeIdentifier":"t_struct$_MarketplaceListing_$3526_storage_ptr","typeString":"struct EventTicketNFT.MarketplaceListing"}},"visibility":"internal"}],"id":4003,"initialValue":{"baseExpression":{"id":4000,"name":"marketplaceListings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3541,"src":"6927:19:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MarketplaceListing_$3526_storage_$","typeString":"mapping(uint256 => struct EventTicketNFT.MarketplaceListing storage ref)"}},"id":4002,"indexExpression":{"id":4001,"name":"_ticketId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3994,"src":"6947:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6927:30:16","typeDescriptions":{"typeIdentifier":"t_struct$_MarketplaceListing_$3526_storage","typeString":"struct EventTicketNFT.MarketplaceListing storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6890:67:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4005,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3999,"src":"6976:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_MarketplaceListing_$3526_storage_ptr","typeString":"struct EventTicketNFT.MarketplaceListing storage pointer"}},"id":4006,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6984:6:16","memberName":"seller","nodeType":"MemberAccess","referencedDeclaration":3521,"src":"6976:14:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4007,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6994:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6998:6:16","memberName":"sender","nodeType":"MemberAccess","src":"6994:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6976:28:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"596f7520617265206e6f74207468652073656c6c6572","id":4010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7006:24:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_e746a83d03b67c14d7fc4864f916d74d5f0a0ad1594fc5ca3dce5170f9d1643c","typeString":"literal_string \"You are not the seller\""},"value":"You are not the seller"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e746a83d03b67c14d7fc4864f916d74d5f0a0ad1594fc5ca3dce5170f9d1643c","typeString":"literal_string \"You are not the seller\""}],"id":4004,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6968:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6968:63:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4012,"nodeType":"ExpressionStatement","src":"6968:63:16"},{"expression":{"arguments":[{"expression":{"id":4014,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3999,"src":"7050:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_MarketplaceListing_$3526_storage_ptr","typeString":"struct EventTicketNFT.MarketplaceListing storage pointer"}},"id":4015,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7058:8:16","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":3525,"src":"7050:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c697374696e67206973206e6f7420616374697665","id":4016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7068:23:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_8a9d86df5a17d2e64d94c92a00571bc62c4a629d78187aab72e5203bed12c690","typeString":"literal_string \"Listing is not active\""},"value":"Listing is not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8a9d86df5a17d2e64d94c92a00571bc62c4a629d78187aab72e5203bed12c690","typeString":"literal_string \"Listing is not active\""}],"id":4013,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7042:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7042:50:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4018,"nodeType":"ExpressionStatement","src":"7042:50:16"},{"expression":{"id":4023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4019,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3999,"src":"7105:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_MarketplaceListing_$3526_storage_ptr","typeString":"struct EventTicketNFT.MarketplaceListing storage pointer"}},"id":4021,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7113:8:16","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":3525,"src":"7105:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":4022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7124:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"7105:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4024,"nodeType":"ExpressionStatement","src":"7105:24:16"},{"eventCall":{"arguments":[{"id":4026,"name":"_ticketId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3994,"src":"7170:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4027,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7181:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7185:6:16","memberName":"sender","nodeType":"MemberAccess","src":"7181:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4025,"name":"TicketListingCancelled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3591,"src":"7147:22:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":4029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7147:45:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4030,"nodeType":"EmitStatement","src":"7142:50:16"}]},"documentation":{"id":3992,"nodeType":"StructuredDocumentation","src":"6768:54:16","text":" @dev Cancel a marketplace listing"},"functionSelector":"305a67a8","id":4032,"implemented":true,"kind":"function","modifiers":[],"name":"cancelListing","nameLocation":"6837:13:16","nodeType":"FunctionDefinition","parameters":{"id":3995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3994,"mutability":"mutable","name":"_ticketId","nameLocation":"6859:9:16","nodeType":"VariableDeclaration","scope":4032,"src":"6851:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3993,"name":"uint256","nodeType":"ElementaryTypeName","src":"6851:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6850:19:16"},"returnParameters":{"id":3996,"nodeType":"ParameterList","parameters":[],"src":"6879:0:16"},"scope":4562,"src":"6828:372:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4045,"nodeType":"Block","src":"7330:42:16","statements":[{"expression":{"baseExpression":{"id":4041,"name":"events","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3531,"src":"7348:6:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Event_$3508_storage_$","typeString":"mapping(uint256 => struct EventTicketNFT.Event storage ref)"}},"id":4043,"indexExpression":{"id":4042,"name":"_eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4035,"src":"7355:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7348:16:16","typeDescriptions":{"typeIdentifier":"t_struct$_Event_$3508_storage","typeString":"struct EventTicketNFT.Event storage ref"}},"functionReturnParameters":4040,"id":4044,"nodeType":"Return","src":"7341:23:16"}]},"documentation":{"id":4033,"nodeType":"StructuredDocumentation","src":"7208:43:16","text":" @dev Get event details"},"functionSelector":"6d1884e0","id":4046,"implemented":true,"kind":"function","modifiers":[],"name":"getEvent","nameLocation":"7266:8:16","nodeType":"FunctionDefinition","parameters":{"id":4036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4035,"mutability":"mutable","name":"_eventId","nameLocation":"7283:8:16","nodeType":"VariableDeclaration","scope":4046,"src":"7275:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4034,"name":"uint256","nodeType":"ElementaryTypeName","src":"7275:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7274:18:16"},"returnParameters":{"id":4040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4039,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4046,"src":"7316:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Event_$3508_memory_ptr","typeString":"struct EventTicketNFT.Event"},"typeName":{"id":4038,"nodeType":"UserDefinedTypeName","pathNode":{"id":4037,"name":"Event","nameLocations":["7316:5:16"],"nodeType":"IdentifierPath","referencedDeclaration":3508,"src":"7316:5:16"},"referencedDeclaration":3508,"src":"7316:5:16","typeDescriptions":{"typeIdentifier":"t_struct$_Event_$3508_storage_ptr","typeString":"struct EventTicketNFT.Event"}},"visibility":"internal"}],"src":"7315:14:16"},"scope":4562,"src":"7257:115:16","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4059,"nodeType":"Block","src":"7506:44:16","statements":[{"expression":{"baseExpression":{"id":4055,"name":"tickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3536,"src":"7524:7:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Ticket_$3517_storage_$","typeString":"mapping(uint256 => struct EventTicketNFT.Ticket storage ref)"}},"id":4057,"indexExpression":{"id":4056,"name":"_ticketId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4049,"src":"7532:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7524:18:16","typeDescriptions":{"typeIdentifier":"t_struct$_Ticket_$3517_storage","typeString":"struct EventTicketNFT.Ticket storage ref"}},"functionReturnParameters":4054,"id":4058,"nodeType":"Return","src":"7517:25:16"}]},"documentation":{"id":4047,"nodeType":"StructuredDocumentation","src":"7380:44:16","text":" @dev Get ticket details"},"functionSelector":"7dc379fa","id":4060,"implemented":true,"kind":"function","modifiers":[],"name":"getTicket","nameLocation":"7439:9:16","nodeType":"FunctionDefinition","parameters":{"id":4050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4049,"mutability":"mutable","name":"_ticketId","nameLocation":"7457:9:16","nodeType":"VariableDeclaration","scope":4060,"src":"7449:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4048,"name":"uint256","nodeType":"ElementaryTypeName","src":"7449:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7448:19:16"},"returnParameters":{"id":4054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4053,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4060,"src":"7491:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Ticket_$3517_memory_ptr","typeString":"struct EventTicketNFT.Ticket"},"typeName":{"id":4052,"nodeType":"UserDefinedTypeName","pathNode":{"id":4051,"name":"Ticket","nameLocations":["7491:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":3517,"src":"7491:6:16"},"referencedDeclaration":3517,"src":"7491:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_Ticket_$3517_storage_ptr","typeString":"struct EventTicketNFT.Ticket"}},"visibility":"internal"}],"src":"7490:15:16"},"scope":4562,"src":"7430:120:16","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4073,"nodeType":"Block","src":"7721:56:16","statements":[{"expression":{"baseExpression":{"id":4069,"name":"marketplaceListings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3541,"src":"7739:19:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MarketplaceListing_$3526_storage_$","typeString":"mapping(uint256 => struct EventTicketNFT.MarketplaceListing storage ref)"}},"id":4071,"indexExpression":{"id":4070,"name":"_ticketId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4063,"src":"7759:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7739:30:16","typeDescriptions":{"typeIdentifier":"t_struct$_MarketplaceListing_$3526_storage","typeString":"struct EventTicketNFT.MarketplaceListing storage ref"}},"functionReturnParameters":4068,"id":4072,"nodeType":"Return","src":"7732:37:16"}]},"documentation":{"id":4061,"nodeType":"StructuredDocumentation","src":"7558:57:16","text":" @dev Get marketplace listing details"},"functionSelector":"d5a87ecb","id":4074,"implemented":true,"kind":"function","modifiers":[],"name":"getMarketplaceListing","nameLocation":"7630:21:16","nodeType":"FunctionDefinition","parameters":{"id":4064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4063,"mutability":"mutable","name":"_ticketId","nameLocation":"7660:9:16","nodeType":"VariableDeclaration","scope":4074,"src":"7652:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4062,"name":"uint256","nodeType":"ElementaryTypeName","src":"7652:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7651:19:16"},"returnParameters":{"id":4068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4067,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4074,"src":"7694:25:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_MarketplaceListing_$3526_memory_ptr","typeString":"struct EventTicketNFT.MarketplaceListing"},"typeName":{"id":4066,"nodeType":"UserDefinedTypeName","pathNode":{"id":4065,"name":"MarketplaceListing","nameLocations":["7694:18:16"],"nodeType":"IdentifierPath","referencedDeclaration":3526,"src":"7694:18:16"},"referencedDeclaration":3526,"src":"7694:18:16","typeDescriptions":{"typeIdentifier":"t_struct$_MarketplaceListing_$3526_storage_ptr","typeString":"struct EventTicketNFT.MarketplaceListing"}},"visibility":"internal"}],"src":"7693:27:16"},"scope":4562,"src":"7621:156:16","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4118,"nodeType":"Block","src":"7917:211:16","statements":[{"assignments":[4086],"declarations":[{"constant":false,"id":4086,"mutability":"mutable","name":"allEvents","nameLocation":"7943:9:16","nodeType":"VariableDeclaration","scope":4118,"src":"7928:24:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Event_$3508_memory_ptr_$dyn_memory_ptr","typeString":"struct EventTicketNFT.Event[]"},"typeName":{"baseType":{"id":4084,"nodeType":"UserDefinedTypeName","pathNode":{"id":4083,"name":"Event","nameLocations":["7928:5:16"],"nodeType":"IdentifierPath","referencedDeclaration":3508,"src":"7928:5:16"},"referencedDeclaration":3508,"src":"7928:5:16","typeDescriptions":{"typeIdentifier":"t_struct$_Event_$3508_storage_ptr","typeString":"struct EventTicketNFT.Event"}},"id":4085,"nodeType":"ArrayTypeName","src":"7928:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Event_$3508_storage_$dyn_storage_ptr","typeString":"struct EventTicketNFT.Event[]"}},"visibility":"internal"}],"id":4093,"initialValue":{"arguments":[{"id":4091,"name":"eventIdCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3485,"src":"7967:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4090,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"7955:11:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Event_$3508_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct EventTicketNFT.Event memory[] memory)"},"typeName":{"baseType":{"id":4088,"nodeType":"UserDefinedTypeName","pathNode":{"id":4087,"name":"Event","nameLocations":["7959:5:16"],"nodeType":"IdentifierPath","referencedDeclaration":3508,"src":"7959:5:16"},"referencedDeclaration":3508,"src":"7959:5:16","typeDescriptions":{"typeIdentifier":"t_struct$_Event_$3508_storage_ptr","typeString":"struct EventTicketNFT.Event"}},"id":4089,"nodeType":"ArrayTypeName","src":"7959:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Event_$3508_storage_$dyn_storage_ptr","typeString":"struct EventTicketNFT.Event[]"}}},"id":4092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7955:27:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Event_$3508_memory_ptr_$dyn_memory_ptr","typeString":"struct EventTicketNFT.Event memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7928:54:16"},{"body":{"id":4114,"nodeType":"Block","src":"8039:55:16","statements":[{"expression":{"id":4112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4104,"name":"allEvents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4086,"src":"8054:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Event_$3508_memory_ptr_$dyn_memory_ptr","typeString":"struct EventTicketNFT.Event memory[] memory"}},"id":4108,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4105,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4095,"src":"8064:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8068:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8064:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8054:16:16","typeDescriptions":{"typeIdentifier":"t_struct$_Event_$3508_memory_ptr","typeString":"struct EventTicketNFT.Event memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":4109,"name":"events","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3531,"src":"8073:6:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Event_$3508_storage_$","typeString":"mapping(uint256 => struct EventTicketNFT.Event storage ref)"}},"id":4111,"indexExpression":{"id":4110,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4095,"src":"8080:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8073:9:16","typeDescriptions":{"typeIdentifier":"t_struct$_Event_$3508_storage","typeString":"struct EventTicketNFT.Event storage ref"}},"src":"8054:28:16","typeDescriptions":{"typeIdentifier":"t_struct$_Event_$3508_memory_ptr","typeString":"struct EventTicketNFT.Event memory"}},"id":4113,"nodeType":"ExpressionStatement","src":"8054:28:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4098,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4095,"src":"8013:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4099,"name":"eventIdCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3485,"src":"8018:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8013:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4115,"initializationExpression":{"assignments":[4095],"declarations":[{"constant":false,"id":4095,"mutability":"mutable","name":"i","nameLocation":"8006:1:16","nodeType":"VariableDeclaration","scope":4115,"src":"7998:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4094,"name":"uint256","nodeType":"ElementaryTypeName","src":"7998:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4097,"initialValue":{"hexValue":"31","id":4096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8010:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"7998:13:16"},"loopExpression":{"expression":{"id":4102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8034:3:16","subExpression":{"id":4101,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4095,"src":"8034:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4103,"nodeType":"ExpressionStatement","src":"8034:3:16"},"nodeType":"ForStatement","src":"7993:101:16"},{"expression":{"id":4116,"name":"allEvents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4086,"src":"8111:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Event_$3508_memory_ptr_$dyn_memory_ptr","typeString":"struct EventTicketNFT.Event memory[] memory"}},"functionReturnParameters":4081,"id":4117,"nodeType":"Return","src":"8104:16:16"}]},"documentation":{"id":4075,"nodeType":"StructuredDocumentation","src":"7785:63:16","text":" @dev Get all events (for frontend display)"},"functionSelector":"c27a500d","id":4119,"implemented":true,"kind":"function","modifiers":[],"name":"getAllEvents","nameLocation":"7863:12:16","nodeType":"FunctionDefinition","parameters":{"id":4076,"nodeType":"ParameterList","parameters":[],"src":"7875:2:16"},"returnParameters":{"id":4081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4080,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4119,"src":"7901:14:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Event_$3508_memory_ptr_$dyn_memory_ptr","typeString":"struct EventTicketNFT.Event[]"},"typeName":{"baseType":{"id":4078,"nodeType":"UserDefinedTypeName","pathNode":{"id":4077,"name":"Event","nameLocations":["7901:5:16"],"nodeType":"IdentifierPath","referencedDeclaration":3508,"src":"7901:5:16"},"referencedDeclaration":3508,"src":"7901:5:16","typeDescriptions":{"typeIdentifier":"t_struct$_Event_$3508_storage_ptr","typeString":"struct EventTicketNFT.Event"}},"id":4079,"nodeType":"ArrayTypeName","src":"7901:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Event_$3508_storage_$dyn_storage_ptr","typeString":"struct EventTicketNFT.Event[]"}},"visibility":"internal"}],"src":"7900:16:16"},"scope":4562,"src":"7854:274:16","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4195,"nodeType":"Block","src":"8269:687:16","statements":[{"assignments":[4127],"declarations":[{"constant":false,"id":4127,"mutability":"mutable","name":"activeCount","nameLocation":"8288:11:16","nodeType":"VariableDeclaration","scope":4195,"src":"8280:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4126,"name":"uint256","nodeType":"ElementaryTypeName","src":"8280:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4129,"initialValue":{"hexValue":"30","id":4128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8302:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8280:23:16"},{"body":{"id":4149,"nodeType":"Block","src":"8412:111:16","statements":[{"condition":{"expression":{"baseExpression":{"id":4140,"name":"marketplaceListings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3541,"src":"8431:19:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MarketplaceListing_$3526_storage_$","typeString":"mapping(uint256 => struct EventTicketNFT.MarketplaceListing storage ref)"}},"id":4142,"indexExpression":{"id":4141,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4131,"src":"8451:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8431:22:16","typeDescriptions":{"typeIdentifier":"t_struct$_MarketplaceListing_$3526_storage","typeString":"struct EventTicketNFT.MarketplaceListing storage ref"}},"id":4143,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8454:8:16","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":3525,"src":"8431:31:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4148,"nodeType":"IfStatement","src":"8427:85:16","trueBody":{"id":4147,"nodeType":"Block","src":"8464:48:16","statements":[{"expression":{"id":4145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8483:13:16","subExpression":{"id":4144,"name":"activeCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4127,"src":"8483:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4146,"nodeType":"ExpressionStatement","src":"8483:13:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4134,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4131,"src":"8385:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4135,"name":"ticketIdCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3487,"src":"8390:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8385:20:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4150,"initializationExpression":{"assignments":[4131],"declarations":[{"constant":false,"id":4131,"mutability":"mutable","name":"i","nameLocation":"8378:1:16","nodeType":"VariableDeclaration","scope":4150,"src":"8370:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4130,"name":"uint256","nodeType":"ElementaryTypeName","src":"8370:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4133,"initialValue":{"hexValue":"31","id":4132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8382:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"8370:13:16"},"loopExpression":{"expression":{"id":4138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8407:3:16","subExpression":{"id":4137,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4131,"src":"8407:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4139,"nodeType":"ExpressionStatement","src":"8407:3:16"},"nodeType":"ForStatement","src":"8365:158:16"},{"assignments":[4155],"declarations":[{"constant":false,"id":4155,"mutability":"mutable","name":"activeListings","nameLocation":"8598:14:16","nodeType":"VariableDeclaration","scope":4195,"src":"8581:31:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4153,"name":"uint256","nodeType":"ElementaryTypeName","src":"8581:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4154,"nodeType":"ArrayTypeName","src":"8581:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":4161,"initialValue":{"arguments":[{"id":4159,"name":"activeCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4127,"src":"8629:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"8615:13:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":4156,"name":"uint256","nodeType":"ElementaryTypeName","src":"8619:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4157,"nodeType":"ArrayTypeName","src":"8619:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":4160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8615:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"8581:60:16"},{"assignments":[4163],"declarations":[{"constant":false,"id":4163,"mutability":"mutable","name":"currentIndex","nameLocation":"8660:12:16","nodeType":"VariableDeclaration","scope":4195,"src":"8652:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4162,"name":"uint256","nodeType":"ElementaryTypeName","src":"8652:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4165,"initialValue":{"hexValue":"30","id":4164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8675:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8652:24:16"},{"body":{"id":4191,"nodeType":"Block","src":"8744:163:16","statements":[{"condition":{"expression":{"baseExpression":{"id":4176,"name":"marketplaceListings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3541,"src":"8763:19:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MarketplaceListing_$3526_storage_$","typeString":"mapping(uint256 => struct EventTicketNFT.MarketplaceListing storage ref)"}},"id":4178,"indexExpression":{"id":4177,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4167,"src":"8783:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8763:22:16","typeDescriptions":{"typeIdentifier":"t_struct$_MarketplaceListing_$3526_storage","typeString":"struct EventTicketNFT.MarketplaceListing storage ref"}},"id":4179,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8786:8:16","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":3525,"src":"8763:31:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4190,"nodeType":"IfStatement","src":"8759:137:16","trueBody":{"id":4189,"nodeType":"Block","src":"8796:100:16","statements":[{"expression":{"id":4184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4180,"name":"activeListings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4155,"src":"8815:14:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4182,"indexExpression":{"id":4181,"name":"currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"8830:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8815:28:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4183,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4167,"src":"8846:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8815:32:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4185,"nodeType":"ExpressionStatement","src":"8815:32:16"},{"expression":{"id":4187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8866:14:16","subExpression":{"id":4186,"name":"currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"8866:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4188,"nodeType":"ExpressionStatement","src":"8866:14:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4170,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4167,"src":"8717:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4171,"name":"ticketIdCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3487,"src":"8722:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8717:20:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4192,"initializationExpression":{"assignments":[4167],"declarations":[{"constant":false,"id":4167,"mutability":"mutable","name":"i","nameLocation":"8710:1:16","nodeType":"VariableDeclaration","scope":4192,"src":"8702:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4166,"name":"uint256","nodeType":"ElementaryTypeName","src":"8702:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4169,"initialValue":{"hexValue":"31","id":4168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8714:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"8702:13:16"},"loopExpression":{"expression":{"id":4174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8739:3:16","subExpression":{"id":4173,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4167,"src":"8739:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4175,"nodeType":"ExpressionStatement","src":"8739:3:16"},"nodeType":"ForStatement","src":"8697:210:16"},{"expression":{"id":4193,"name":"activeListings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4155,"src":"8934:14:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":4125,"id":4194,"nodeType":"Return","src":"8927:21:16"}]},"documentation":{"id":4120,"nodeType":"StructuredDocumentation","src":"8136:57:16","text":" @dev Get active marketplace listings"},"functionSelector":"87c35bc0","id":4196,"implemented":true,"kind":"function","modifiers":[],"name":"getActiveListings","nameLocation":"8208:17:16","nodeType":"FunctionDefinition","parameters":{"id":4121,"nodeType":"ParameterList","parameters":[],"src":"8225:2:16"},"returnParameters":{"id":4125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4124,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4196,"src":"8251:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4122,"name":"uint256","nodeType":"ElementaryTypeName","src":"8251:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4123,"nodeType":"ArrayTypeName","src":"8251:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"8250:18:16"},"scope":4562,"src":"8199:757:16","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4296,"nodeType":"Block","src":"9158:703:16","statements":[{"assignments":[4208],"declarations":[{"constant":false,"id":4208,"mutability":"mutable","name":"balance","nameLocation":"9177:7:16","nodeType":"VariableDeclaration","scope":4296,"src":"9169:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4207,"name":"uint256","nodeType":"ElementaryTypeName","src":"9169:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4212,"initialValue":{"arguments":[{"id":4210,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4201,"src":"9197:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4209,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":413,"src":"9187:9:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":4211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9187:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9169:35:16"},{"assignments":[4217],"declarations":[{"constant":false,"id":4217,"mutability":"mutable","name":"eventTickets","nameLocation":"9232:12:16","nodeType":"VariableDeclaration","scope":4296,"src":"9215:29:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4215,"name":"uint256","nodeType":"ElementaryTypeName","src":"9215:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4216,"nodeType":"ArrayTypeName","src":"9215:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":4223,"initialValue":{"arguments":[{"id":4221,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4208,"src":"9261:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"9247:13:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":4218,"name":"uint256","nodeType":"ElementaryTypeName","src":"9251:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4219,"nodeType":"ArrayTypeName","src":"9251:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":4222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9247:22:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"9215:54:16"},{"assignments":[4225],"declarations":[{"constant":false,"id":4225,"mutability":"mutable","name":"currentIndex","nameLocation":"9288:12:16","nodeType":"VariableDeclaration","scope":4296,"src":"9280:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4224,"name":"uint256","nodeType":"ElementaryTypeName","src":"9280:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4227,"initialValue":{"hexValue":"30","id":4226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9303:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9280:24:16"},{"body":{"id":4261,"nodeType":"Block","src":"9363:236:16","statements":[{"assignments":[4239],"declarations":[{"constant":false,"id":4239,"mutability":"mutable","name":"ticketId","nameLocation":"9386:8:16","nodeType":"VariableDeclaration","scope":4261,"src":"9378:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4238,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4244,"initialValue":{"arguments":[{"id":4241,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4201,"src":"9417:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4242,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4229,"src":"9425:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4240,"name":"tokenOfOwnerByIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1521,"src":"9397:19:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":4243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9397:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9378:49:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4245,"name":"ticketToEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3545,"src":"9446:13:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":4247,"indexExpression":{"id":4246,"name":"ticketId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4239,"src":"9460:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9446:23:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4248,"name":"_eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"9473:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9446:35:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4260,"nodeType":"IfStatement","src":"9442:146:16","trueBody":{"id":4259,"nodeType":"Block","src":"9483:105:16","statements":[{"expression":{"id":4254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4250,"name":"eventTickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"9502:12:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4252,"indexExpression":{"id":4251,"name":"currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4225,"src":"9515:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9502:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4253,"name":"ticketId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4239,"src":"9531:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9502:37:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4255,"nodeType":"ExpressionStatement","src":"9502:37:16"},{"expression":{"id":4257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9558:14:16","subExpression":{"id":4256,"name":"currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4225,"src":"9558:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4258,"nodeType":"ExpressionStatement","src":"9558:14:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4232,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4229,"src":"9345:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4233,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4208,"src":"9349:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9345:11:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4262,"initializationExpression":{"assignments":[4229],"declarations":[{"constant":false,"id":4229,"mutability":"mutable","name":"i","nameLocation":"9338:1:16","nodeType":"VariableDeclaration","scope":4262,"src":"9330:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4228,"name":"uint256","nodeType":"ElementaryTypeName","src":"9330:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4231,"initialValue":{"hexValue":"30","id":4230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9342:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9330:13:16"},"loopExpression":{"expression":{"id":4236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9358:3:16","subExpression":{"id":4235,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4229,"src":"9358:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4237,"nodeType":"ExpressionStatement","src":"9358:3:16"},"nodeType":"ForStatement","src":"9325:274:16"},{"assignments":[4267],"declarations":[{"constant":false,"id":4267,"mutability":"mutable","name":"result","nameLocation":"9676:6:16","nodeType":"VariableDeclaration","scope":4296,"src":"9659:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4265,"name":"uint256","nodeType":"ElementaryTypeName","src":"9659:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4266,"nodeType":"ArrayTypeName","src":"9659:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":4273,"initialValue":{"arguments":[{"id":4271,"name":"currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4225,"src":"9699:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4270,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"9685:13:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":4268,"name":"uint256","nodeType":"ElementaryTypeName","src":"9689:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4269,"nodeType":"ArrayTypeName","src":"9689:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":4272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9685:27:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"9659:53:16"},{"body":{"id":4292,"nodeType":"Block","src":"9766:54:16","statements":[{"expression":{"id":4290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4284,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4267,"src":"9781:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4286,"indexExpression":{"id":4285,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4275,"src":"9788:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9781:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":4287,"name":"eventTickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"9793:12:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4289,"indexExpression":{"id":4288,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4275,"src":"9806:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9793:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9781:27:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4291,"nodeType":"ExpressionStatement","src":"9781:27:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4278,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4275,"src":"9743:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4279,"name":"currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4225,"src":"9747:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9743:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4293,"initializationExpression":{"assignments":[4275],"declarations":[{"constant":false,"id":4275,"mutability":"mutable","name":"i","nameLocation":"9736:1:16","nodeType":"VariableDeclaration","scope":4293,"src":"9728:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4274,"name":"uint256","nodeType":"ElementaryTypeName","src":"9728:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4277,"initialValue":{"hexValue":"30","id":4276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9740:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9728:13:16"},"loopExpression":{"expression":{"id":4282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9761:3:16","subExpression":{"id":4281,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4275,"src":"9761:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4283,"nodeType":"ExpressionStatement","src":"9761:3:16"},"nodeType":"ForStatement","src":"9723:97:16"},{"expression":{"id":4294,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4267,"src":"9847:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":4206,"id":4295,"nodeType":"Return","src":"9840:13:16"}]},"documentation":{"id":4197,"nodeType":"StructuredDocumentation","src":"8964:78:16","text":" @dev Get tickets owned by an address for a specific event"},"functionSelector":"65ec74b0","id":4297,"implemented":true,"kind":"function","modifiers":[],"name":"getTicketsByEventAndOwner","nameLocation":"9057:25:16","nodeType":"FunctionDefinition","parameters":{"id":4202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4199,"mutability":"mutable","name":"_eventId","nameLocation":"9091:8:16","nodeType":"VariableDeclaration","scope":4297,"src":"9083:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4198,"name":"uint256","nodeType":"ElementaryTypeName","src":"9083:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4201,"mutability":"mutable","name":"_owner","nameLocation":"9109:6:16","nodeType":"VariableDeclaration","scope":4297,"src":"9101:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4200,"name":"address","nodeType":"ElementaryTypeName","src":"9101:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9082:34:16"},"returnParameters":{"id":4206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4205,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4297,"src":"9140:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4203,"name":"uint256","nodeType":"ElementaryTypeName","src":"9140:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4204,"nodeType":"ArrayTypeName","src":"9140:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"9139:18:16"},"scope":4562,"src":"9048:813:16","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4333,"nodeType":"Block","src":"10031:237:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4307,"name":"_ticketId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4300,"src":"10058:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4306,"name":"ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":426,"src":"10050:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":4308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10050:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4309,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10072:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10076:6:16","memberName":"sender","nodeType":"MemberAccess","src":"10072:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10050:32:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"596f7520646f6e2774206f776e2074686973207469636b6574","id":4312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10084:27:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_55ea8240bcdf2c6dc48f419582466fcc0c70b98f7bab9452e47ab9da674d6c3a","typeString":"literal_string \"You don't own this ticket\""},"value":"You don't own this ticket"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_55ea8240bcdf2c6dc48f419582466fcc0c70b98f7bab9452e47ab9da674d6c3a","typeString":"literal_string \"You don't own this ticket\""}],"id":4305,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10042:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10042:70:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4314,"nodeType":"ExpressionStatement","src":"10042:70:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":4318,"name":"_metadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4302,"src":"10137:12:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4317,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10131:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4316,"name":"bytes","nodeType":"ElementaryTypeName","src":"10131:5:16","typeDescriptions":{}}},"id":4319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10131:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10151:6:16","memberName":"length","nodeType":"MemberAccess","src":"10131:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10160:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10131:30:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d65746164617461205552492063616e6e6f7420626520656d707479","id":4323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10163:30:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_59af62c861bea9965436e11fa79e23e8590850e875c82ec47c5884384b8b64f9","typeString":"literal_string \"Metadata URI cannot be empty\""},"value":"Metadata URI cannot be empty"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_59af62c861bea9965436e11fa79e23e8590850e875c82ec47c5884384b8b64f9","typeString":"literal_string \"Metadata URI cannot be empty\""}],"id":4315,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10123:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10123:71:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4325,"nodeType":"ExpressionStatement","src":"10123:71:16"},{"expression":{"id":4331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":4326,"name":"tickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3536,"src":"10215:7:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Ticket_$3517_storage_$","typeString":"mapping(uint256 => struct EventTicketNFT.Ticket storage ref)"}},"id":4328,"indexExpression":{"id":4327,"name":"_ticketId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4300,"src":"10223:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10215:18:16","typeDescriptions":{"typeIdentifier":"t_struct$_Ticket_$3517_storage","typeString":"struct EventTicketNFT.Ticket storage ref"}},"id":4329,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10234:11:16","memberName":"metadataURI","nodeType":"MemberAccess","referencedDeclaration":3516,"src":"10215:30:16","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4330,"name":"_metadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4302,"src":"10248:12:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"10215:45:16","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":4332,"nodeType":"ExpressionStatement","src":"10215:45:16"}]},"documentation":{"id":4298,"nodeType":"StructuredDocumentation","src":"9869:70:16","text":" @dev Update ticket metadata URI after IPFS upload"},"functionSelector":"33a03d22","id":4334,"implemented":true,"kind":"function","modifiers":[],"name":"updateTicketMetadata","nameLocation":"9954:20:16","nodeType":"FunctionDefinition","parameters":{"id":4303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4300,"mutability":"mutable","name":"_ticketId","nameLocation":"9983:9:16","nodeType":"VariableDeclaration","scope":4334,"src":"9975:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4299,"name":"uint256","nodeType":"ElementaryTypeName","src":"9975:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4302,"mutability":"mutable","name":"_metadataURI","nameLocation":"10008:12:16","nodeType":"VariableDeclaration","scope":4334,"src":"9994:26:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4301,"name":"string","nodeType":"ElementaryTypeName","src":"9994:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9974:47:16"},"returnParameters":{"id":4304,"nodeType":"ParameterList","parameters":[],"src":"10031:0:16"},"scope":4562,"src":"9945:323:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[480],"body":{"id":4425,"nodeType":"Block","src":"10431:1057:16","statements":[{"expression":{"arguments":[{"id":4344,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4337,"src":"10456:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4343,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"10442:13:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":4345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10442:22:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4346,"nodeType":"ExpressionStatement","src":"10442:22:16"},{"assignments":[4348],"declarations":[{"constant":false,"id":4348,"mutability":"mutable","name":"metadataCid","nameLocation":"10491:11:16","nodeType":"VariableDeclaration","scope":4425,"src":"10477:25:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4347,"name":"string","nodeType":"ElementaryTypeName","src":"10477:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":4353,"initialValue":{"expression":{"baseExpression":{"id":4349,"name":"tickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3536,"src":"10505:7:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Ticket_$3517_storage_$","typeString":"mapping(uint256 => struct EventTicketNFT.Ticket storage ref)"}},"id":4351,"indexExpression":{"id":4350,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4337,"src":"10513:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10505:16:16","typeDescriptions":{"typeIdentifier":"t_struct$_Ticket_$3517_storage","typeString":"struct EventTicketNFT.Ticket storage ref"}},"id":4352,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10522:11:16","memberName":"metadataURI","nodeType":"MemberAccess","referencedDeclaration":3516,"src":"10505:28:16","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"VariableDeclarationStatement","src":"10477:56:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":4356,"name":"metadataCid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4348,"src":"10554:11:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4355,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10548:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4354,"name":"bytes","nodeType":"ElementaryTypeName","src":"10548:5:16","typeDescriptions":{}}},"id":4357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10548:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10567:6:16","memberName":"length","nodeType":"MemberAccess","src":"10548:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10576:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10548:29:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4371,"nodeType":"IfStatement","src":"10544:197:16","trueBody":{"id":4370,"nodeType":"Block","src":"10579:162:16","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"697066733a2f2f","id":4365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10705:9:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_66f0790b1cbe0dcac007f07341b00cafe2bda254914729058b5209e04b702afe","typeString":"literal_string \"ipfs://\""},"value":"ipfs://"},{"id":4366,"name":"metadataCid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4348,"src":"10716:11:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_66f0790b1cbe0dcac007f07341b00cafe2bda254914729058b5209e04b702afe","typeString":"literal_string \"ipfs://\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":4363,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"10688:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4364,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10692:12:16","memberName":"encodePacked","nodeType":"MemberAccess","src":"10688:16:16","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10688:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10681:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":4361,"name":"string","nodeType":"ElementaryTypeName","src":"10681:6:16","typeDescriptions":{}}},"id":4368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10681:48:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4342,"id":4369,"nodeType":"Return","src":"10674:55:16"}]}},{"assignments":[4374],"declarations":[{"constant":false,"id":4374,"mutability":"mutable","name":"t","nameLocation":"10842:1:16","nodeType":"VariableDeclaration","scope":4425,"src":"10828:15:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Ticket_$3517_memory_ptr","typeString":"struct EventTicketNFT.Ticket"},"typeName":{"id":4373,"nodeType":"UserDefinedTypeName","pathNode":{"id":4372,"name":"Ticket","nameLocations":["10828:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":3517,"src":"10828:6:16"},"referencedDeclaration":3517,"src":"10828:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_Ticket_$3517_storage_ptr","typeString":"struct EventTicketNFT.Ticket"}},"visibility":"internal"}],"id":4378,"initialValue":{"baseExpression":{"id":4375,"name":"tickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3536,"src":"10846:7:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Ticket_$3517_storage_$","typeString":"mapping(uint256 => struct EventTicketNFT.Ticket storage ref)"}},"id":4377,"indexExpression":{"id":4376,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4337,"src":"10854:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10846:16:16","typeDescriptions":{"typeIdentifier":"t_struct$_Ticket_$3517_storage","typeString":"struct EventTicketNFT.Ticket storage ref"}},"nodeType":"VariableDeclarationStatement","src":"10828:34:16"},{"assignments":[4381],"declarations":[{"constant":false,"id":4381,"mutability":"mutable","name":"e","nameLocation":"10886:1:16","nodeType":"VariableDeclaration","scope":4425,"src":"10873:14:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Event_$3508_memory_ptr","typeString":"struct EventTicketNFT.Event"},"typeName":{"id":4380,"nodeType":"UserDefinedTypeName","pathNode":{"id":4379,"name":"Event","nameLocations":["10873:5:16"],"nodeType":"IdentifierPath","referencedDeclaration":3508,"src":"10873:5:16"},"referencedDeclaration":3508,"src":"10873:5:16","typeDescriptions":{"typeIdentifier":"t_struct$_Event_$3508_storage_ptr","typeString":"struct EventTicketNFT.Event"}},"visibility":"internal"}],"id":4386,"initialValue":{"baseExpression":{"id":4382,"name":"events","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3531,"src":"10890:6:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Event_$3508_storage_$","typeString":"mapping(uint256 => struct EventTicketNFT.Event storage ref)"}},"id":4385,"indexExpression":{"expression":{"id":4383,"name":"t","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"10897:1:16","typeDescriptions":{"typeIdentifier":"t_struct$_Ticket_$3517_memory_ptr","typeString":"struct EventTicketNFT.Ticket memory"}},"id":4384,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10899:7:16","memberName":"eventId","nodeType":"MemberAccess","referencedDeclaration":3512,"src":"10897:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10890:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_Event_$3508_storage","typeString":"struct EventTicketNFT.Event storage ref"}},"nodeType":"VariableDeclarationStatement","src":"10873:34:16"},{"assignments":[4388],"declarations":[{"constant":false,"id":4388,"mutability":"mutable","name":"json","nameLocation":"10933:4:16","nodeType":"VariableDeclaration","scope":4425,"src":"10920:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4387,"name":"bytes","nodeType":"ElementaryTypeName","src":"10920:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4412,"initialValue":{"arguments":[{"hexValue":"7b","id":4391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10971:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52","typeString":"literal_string \"{\""},"value":"{"},{"hexValue":"226e616d65223a22","id":4392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10993:13:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_51367d69f1c3baff467b722249990cf2b0f92b1e50edd5a778b81ffc7191408f","typeString":"literal_string \"\"name\":\"\""},"value":"\"name\":\""},{"expression":{"id":4393,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4381,"src":"11025:1:16","typeDescriptions":{"typeIdentifier":"t_struct$_Event_$3508_memory_ptr","typeString":"struct EventTicketNFT.Event memory"}},"id":4394,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11027:4:16","memberName":"name","nodeType":"MemberAccess","referencedDeclaration":3491,"src":"11025:6:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"2023","id":4395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11050:4:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_21af77cd140717e5867fa5acefcf2fc51f566448915c6d7fd3ac9763b6517a12","typeString":"literal_string \" #\""},"value":" #"},{"arguments":[{"expression":{"id":4398,"name":"t","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"11090:1:16","typeDescriptions":{"typeIdentifier":"t_struct$_Ticket_$3517_memory_ptr","typeString":"struct EventTicketNFT.Ticket memory"}},"id":4399,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11092:12:16","memberName":"ticketNumber","nodeType":"MemberAccess","referencedDeclaration":3514,"src":"11090:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4396,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"11073:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$2273_$","typeString":"type(library Strings)"}},"id":4397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11081:8:16","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2086,"src":"11073:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":4400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11073:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"222c","id":4401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11124:5:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb","typeString":"literal_string \"\",\""},"value":"\","},{"hexValue":"226465736372697074696f6e223a22","id":4402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11148:20:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_1f63d9db42efe217d85281c4ef6267f200cbdd8e8d6fd9a3e9d557ed86a373c7","typeString":"literal_string \"\"description\":\"\""},"value":"\"description\":\""},{"expression":{"id":4403,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4381,"src":"11187:1:16","typeDescriptions":{"typeIdentifier":"t_struct$_Event_$3508_memory_ptr","typeString":"struct EventTicketNFT.Event memory"}},"id":4404,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11189:11:16","memberName":"description","nodeType":"MemberAccess","referencedDeclaration":3493,"src":"11187:13:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"222c","id":4405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11219:5:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb","typeString":"literal_string \"\",\""},"value":"\","},{"hexValue":"22696d616765223a22697066733a2f2f","id":4406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11243:21:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_1142d87ae89da2e55c57bf6d4d08b8c1cbd98506048166b2165a9963aa8d182d","typeString":"literal_string \"\"image\":\"ipfs://\""},"value":"\"image\":\"ipfs://"},{"expression":{"id":4407,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4381,"src":"11283:1:16","typeDescriptions":{"typeIdentifier":"t_struct$_Event_$3508_memory_ptr","typeString":"struct EventTicketNFT.Event memory"}},"id":4408,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11285:8:16","memberName":"imageCID","nodeType":"MemberAccess","referencedDeclaration":3507,"src":"11283:10:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"22","id":4409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11312:4:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},"value":"\""},{"hexValue":"7d","id":4410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11331:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff","typeString":"literal_string \"}\""},"value":"}"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52","typeString":"literal_string \"{\""},{"typeIdentifier":"t_stringliteral_51367d69f1c3baff467b722249990cf2b0f92b1e50edd5a778b81ffc7191408f","typeString":"literal_string \"\"name\":\"\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_21af77cd140717e5867fa5acefcf2fc51f566448915c6d7fd3ac9763b6517a12","typeString":"literal_string \" #\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb","typeString":"literal_string \"\",\""},{"typeIdentifier":"t_stringliteral_1f63d9db42efe217d85281c4ef6267f200cbdd8e8d6fd9a3e9d557ed86a373c7","typeString":"literal_string \"\"description\":\"\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb","typeString":"literal_string \"\",\""},{"typeIdentifier":"t_stringliteral_1142d87ae89da2e55c57bf6d4d08b8c1cbd98506048166b2165a9963aa8d182d","typeString":"literal_string \"\"image\":\"ipfs://\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},{"typeIdentifier":"t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff","typeString":"literal_string \"}\""}],"expression":{"id":4389,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"10940:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4390,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10944:12:16","memberName":"encodePacked","nodeType":"MemberAccess","src":"10940:16:16","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10940:405:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"10920:425:16"},{"expression":{"arguments":[{"arguments":[{"hexValue":"646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c","id":4417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11403:31:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa","typeString":"literal_string \"data:application/json;base64,\""},"value":"data:application/json;base64,"},{"arguments":[{"id":4420,"name":"json","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4388,"src":"11463:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4418,"name":"Base64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1919,"src":"11449:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Base64_$1919_$","typeString":"type(library Base64)"}},"id":4419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11456:6:16","memberName":"encode","nodeType":"MemberAccess","referencedDeclaration":1918,"src":"11449:13:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$","typeString":"function (bytes memory) pure returns (string memory)"}},"id":4421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11449:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa","typeString":"literal_string \"data:application/json;base64,\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":4415,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"11372:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4416,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11376:12:16","memberName":"encodePacked","nodeType":"MemberAccess","src":"11372:16:16","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11372:107:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4414,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11365:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":4413,"name":"string","nodeType":"ElementaryTypeName","src":"11365:6:16","typeDescriptions":{}}},"id":4423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11365:115:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4342,"id":4424,"nodeType":"Return","src":"11358:122:16"}]},"documentation":{"id":4335,"nodeType":"StructuredDocumentation","src":"10276:69:16","text":" @dev Override tokenURI to return ticket metadata"},"functionSelector":"c87b56dd","id":4426,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"10360:8:16","nodeType":"FunctionDefinition","overrides":{"id":4339,"nodeType":"OverrideSpecifier","overrides":[],"src":"10398:8:16"},"parameters":{"id":4338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4337,"mutability":"mutable","name":"tokenId","nameLocation":"10377:7:16","nodeType":"VariableDeclaration","scope":4426,"src":"10369:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4336,"name":"uint256","nodeType":"ElementaryTypeName","src":"10369:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10368:17:16"},"returnParameters":{"id":4342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4341,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4426,"src":"10416:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4340,"name":"string","nodeType":"ElementaryTypeName","src":"10416:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10415:15:16"},"scope":4562,"src":"10351:1137:16","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4488,"nodeType":"Block","src":"11739:734:16","statements":[{"assignments":[4438],"declarations":[{"constant":false,"id":4438,"mutability":"mutable","name":"t","nameLocation":"11868:1:16","nodeType":"VariableDeclaration","scope":4488,"src":"11854:15:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Ticket_$3517_memory_ptr","typeString":"struct EventTicketNFT.Ticket"},"typeName":{"id":4437,"nodeType":"UserDefinedTypeName","pathNode":{"id":4436,"name":"Ticket","nameLocations":["11854:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":3517,"src":"11854:6:16"},"referencedDeclaration":3517,"src":"11854:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_Ticket_$3517_storage_ptr","typeString":"struct EventTicketNFT.Ticket"}},"visibility":"internal"}],"id":4442,"initialValue":{"baseExpression":{"id":4439,"name":"tickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3536,"src":"11872:7:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Ticket_$3517_storage_$","typeString":"mapping(uint256 => struct EventTicketNFT.Ticket storage ref)"}},"id":4441,"indexExpression":{"id":4440,"name":"_eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4429,"src":"11880:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11872:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_Ticket_$3517_storage","typeString":"struct EventTicketNFT.Ticket storage ref"}},"nodeType":"VariableDeclarationStatement","src":"11854:35:16"},{"assignments":[4445],"declarations":[{"constant":false,"id":4445,"mutability":"mutable","name":"e","nameLocation":"11913:1:16","nodeType":"VariableDeclaration","scope":4488,"src":"11900:14:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Event_$3508_memory_ptr","typeString":"struct EventTicketNFT.Event"},"typeName":{"id":4444,"nodeType":"UserDefinedTypeName","pathNode":{"id":4443,"name":"Event","nameLocations":["11900:5:16"],"nodeType":"IdentifierPath","referencedDeclaration":3508,"src":"11900:5:16"},"referencedDeclaration":3508,"src":"11900:5:16","typeDescriptions":{"typeIdentifier":"t_struct$_Event_$3508_storage_ptr","typeString":"struct EventTicketNFT.Event"}},"visibility":"internal"}],"id":4450,"initialValue":{"baseExpression":{"id":4446,"name":"events","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3531,"src":"11917:6:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Event_$3508_storage_$","typeString":"mapping(uint256 => struct EventTicketNFT.Event storage ref)"}},"id":4449,"indexExpression":{"expression":{"id":4447,"name":"t","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4438,"src":"11924:1:16","typeDescriptions":{"typeIdentifier":"t_struct$_Ticket_$3517_memory_ptr","typeString":"struct EventTicketNFT.Ticket memory"}},"id":4448,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11926:7:16","memberName":"eventId","nodeType":"MemberAccess","referencedDeclaration":3512,"src":"11924:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11917:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_Event_$3508_storage","typeString":"struct EventTicketNFT.Event storage ref"}},"nodeType":"VariableDeclarationStatement","src":"11900:34:16"},{"assignments":[4452],"declarations":[{"constant":false,"id":4452,"mutability":"mutable","name":"json","nameLocation":"11958:4:16","nodeType":"VariableDeclaration","scope":4488,"src":"11945:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4451,"name":"bytes","nodeType":"ElementaryTypeName","src":"11945:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4475,"initialValue":{"arguments":[{"hexValue":"7b","id":4455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11996:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52","typeString":"literal_string \"{\""},"value":"{"},{"hexValue":"226e616d65223a22","id":4456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12018:13:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_51367d69f1c3baff467b722249990cf2b0f92b1e50edd5a778b81ffc7191408f","typeString":"literal_string \"\"name\":\"\""},"value":"\"name\":\""},{"expression":{"id":4457,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4445,"src":"12050:1:16","typeDescriptions":{"typeIdentifier":"t_struct$_Event_$3508_memory_ptr","typeString":"struct EventTicketNFT.Event memory"}},"id":4458,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12052:4:16","memberName":"name","nodeType":"MemberAccess","referencedDeclaration":3491,"src":"12050:6:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"2023","id":4459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12075:4:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_21af77cd140717e5867fa5acefcf2fc51f566448915c6d7fd3ac9763b6517a12","typeString":"literal_string \" #\""},"value":" #"},{"arguments":[{"id":4462,"name":"_ticketNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4431,"src":"12115:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4460,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"12098:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$2273_$","typeString":"type(library Strings)"}},"id":4461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12106:8:16","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2086,"src":"12098:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":4463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12098:31:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"222c","id":4464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12148:5:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb","typeString":"literal_string \"\",\""},"value":"\","},{"hexValue":"226465736372697074696f6e223a22","id":4465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12172:20:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_1f63d9db42efe217d85281c4ef6267f200cbdd8e8d6fd9a3e9d557ed86a373c7","typeString":"literal_string \"\"description\":\"\""},"value":"\"description\":\""},{"expression":{"id":4466,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4445,"src":"12211:1:16","typeDescriptions":{"typeIdentifier":"t_struct$_Event_$3508_memory_ptr","typeString":"struct EventTicketNFT.Event memory"}},"id":4467,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12213:11:16","memberName":"description","nodeType":"MemberAccess","referencedDeclaration":3493,"src":"12211:13:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"222c","id":4468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12243:5:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb","typeString":"literal_string \"\",\""},"value":"\","},{"hexValue":"22696d616765223a22697066733a2f2f","id":4469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12267:21:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_1142d87ae89da2e55c57bf6d4d08b8c1cbd98506048166b2165a9963aa8d182d","typeString":"literal_string \"\"image\":\"ipfs://\""},"value":"\"image\":\"ipfs://"},{"expression":{"id":4470,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4445,"src":"12307:1:16","typeDescriptions":{"typeIdentifier":"t_struct$_Event_$3508_memory_ptr","typeString":"struct EventTicketNFT.Event memory"}},"id":4471,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12309:8:16","memberName":"imageCID","nodeType":"MemberAccess","referencedDeclaration":3507,"src":"12307:10:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"22","id":4472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12336:4:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},"value":"\""},{"hexValue":"7d","id":4473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12355:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff","typeString":"literal_string \"}\""},"value":"}"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52","typeString":"literal_string \"{\""},{"typeIdentifier":"t_stringliteral_51367d69f1c3baff467b722249990cf2b0f92b1e50edd5a778b81ffc7191408f","typeString":"literal_string \"\"name\":\"\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_21af77cd140717e5867fa5acefcf2fc51f566448915c6d7fd3ac9763b6517a12","typeString":"literal_string \" #\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb","typeString":"literal_string \"\",\""},{"typeIdentifier":"t_stringliteral_1f63d9db42efe217d85281c4ef6267f200cbdd8e8d6fd9a3e9d557ed86a373c7","typeString":"literal_string \"\"description\":\"\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb","typeString":"literal_string \"\",\""},{"typeIdentifier":"t_stringliteral_1142d87ae89da2e55c57bf6d4d08b8c1cbd98506048166b2165a9963aa8d182d","typeString":"literal_string \"\"image\":\"ipfs://\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},{"typeIdentifier":"t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff","typeString":"literal_string \"}\""}],"expression":{"id":4453,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"11965:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4454,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11969:12:16","memberName":"encodePacked","nodeType":"MemberAccess","src":"11965:16:16","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11965:404:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"11945:424:16"},{"expression":{"arguments":[{"arguments":[{"hexValue":"646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c","id":4480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12411:31:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa","typeString":"literal_string \"data:application/json;base64,\""},"value":"data:application/json;base64,"},{"arguments":[{"id":4483,"name":"json","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4452,"src":"12458:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4481,"name":"Base64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1919,"src":"12444:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Base64_$1919_$","typeString":"type(library Base64)"}},"id":4482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12451:6:16","memberName":"encode","nodeType":"MemberAccess","referencedDeclaration":1918,"src":"12444:13:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$","typeString":"function (bytes memory) pure returns (string memory)"}},"id":4484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12444:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa","typeString":"literal_string \"data:application/json;base64,\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":4478,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"12394:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4479,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12398:12:16","memberName":"encodePacked","nodeType":"MemberAccess","src":"12394:16:16","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12394:70:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4477,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":4476,"name":"string","nodeType":"ElementaryTypeName","src":"12387:6:16","typeDescriptions":{}}},"id":4486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12387:78:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4435,"id":4487,"nodeType":"Return","src":"12380:85:16"}]},"documentation":{"id":4427,"nodeType":"StructuredDocumentation","src":"11496:128:16","text":" @dev Generate metadata URI for a ticket\n In a real implementation, this would point to IPFS metadata"},"id":4489,"implemented":true,"kind":"function","modifiers":[],"name":"_generateMetadataURI","nameLocation":"11639:20:16","nodeType":"FunctionDefinition","parameters":{"id":4432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4429,"mutability":"mutable","name":"_eventId","nameLocation":"11668:8:16","nodeType":"VariableDeclaration","scope":4489,"src":"11660:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4428,"name":"uint256","nodeType":"ElementaryTypeName","src":"11660:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4431,"mutability":"mutable","name":"_ticketNumber","nameLocation":"11686:13:16","nodeType":"VariableDeclaration","scope":4489,"src":"11678:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4430,"name":"uint256","nodeType":"ElementaryTypeName","src":"11678:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11659:41:16"},"returnParameters":{"id":4435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4434,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4489,"src":"11724:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4433,"name":"string","nodeType":"ElementaryTypeName","src":"11724:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11723:15:16"},"scope":4562,"src":"11630:843:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4502,"nodeType":"Block","src":"12610:49:16","statements":[{"expression":{"arguments":[{"id":4499,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4492,"src":"12645:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4497,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"12628:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$2273_$","typeString":"type(library Strings)"}},"id":4498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12636:8:16","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2086,"src":"12628:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":4500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12628:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4496,"id":4501,"nodeType":"Return","src":"12621:30:16"}]},"documentation":{"id":4490,"nodeType":"StructuredDocumentation","src":"12481:51:16","text":" @dev Convert uint256 to string"},"id":4503,"implemented":true,"kind":"function","modifiers":[],"name":"_toString","nameLocation":"12547:9:16","nodeType":"FunctionDefinition","parameters":{"id":4493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4492,"mutability":"mutable","name":"value","nameLocation":"12565:5:16","nodeType":"VariableDeclaration","scope":4503,"src":"12557:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4491,"name":"uint256","nodeType":"ElementaryTypeName","src":"12557:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12556:15:16"},"returnParameters":{"id":4496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4495,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4503,"src":"12595:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4494,"name":"string","nodeType":"ElementaryTypeName","src":"12595:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"12594:15:16"},"scope":4562,"src":"12538:121:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4518,"nodeType":"Block","src":"12815:52:16","statements":[{"expression":{"id":4516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":4511,"name":"events","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3531,"src":"12826:6:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Event_$3508_storage_$","typeString":"mapping(uint256 => struct EventTicketNFT.Event storage ref)"}},"id":4513,"indexExpression":{"id":4512,"name":"_eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4506,"src":"12833:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12826:16:16","typeDescriptions":{"typeIdentifier":"t_struct$_Event_$3508_storage","typeString":"struct EventTicketNFT.Event storage ref"}},"id":4514,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12843:8:16","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":3505,"src":"12826:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":4515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12854:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"12826:33:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4517,"nodeType":"ExpressionStatement","src":"12826:33:16"}]},"documentation":{"id":4504,"nodeType":"StructuredDocumentation","src":"12667:80:16","text":" @dev Emergency function to deactivate an event (only owner)"},"functionSelector":"957a632e","id":4519,"implemented":true,"kind":"function","modifiers":[{"id":4509,"kind":"modifierInvocation","modifierName":{"id":4508,"name":"onlyOwner","nameLocations":["12805:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"12805:9:16"},"nodeType":"ModifierInvocation","src":"12805:9:16"}],"name":"deactivateEvent","nameLocation":"12762:15:16","nodeType":"FunctionDefinition","parameters":{"id":4507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4506,"mutability":"mutable","name":"_eventId","nameLocation":"12786:8:16","nodeType":"VariableDeclaration","scope":4519,"src":"12778:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4505,"name":"uint256","nodeType":"ElementaryTypeName","src":"12778:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12777:18:16"},"returnParameters":{"id":4510,"nodeType":"ParameterList","parameters":[],"src":"12815:0:16"},"scope":4562,"src":"12753:114:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[1627],"body":{"id":4560,"nodeType":"Block","src":"13061:370:16","statements":[{"condition":{"expression":{"baseExpression":{"id":4532,"name":"marketplaceListings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3541,"src":"13165:19:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MarketplaceListing_$3526_storage_$","typeString":"mapping(uint256 => struct EventTicketNFT.MarketplaceListing storage ref)"}},"id":4534,"indexExpression":{"id":4533,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4524,"src":"13185:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13165:28:16","typeDescriptions":{"typeIdentifier":"t_struct$_MarketplaceListing_$3526_storage","typeString":"struct EventTicketNFT.MarketplaceListing storage ref"}},"id":4535,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13194:8:16","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":3525,"src":"13165:37:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4552,"nodeType":"IfStatement","src":"13161:203:16","trueBody":{"id":4551,"nodeType":"Block","src":"13204:160:16","statements":[{"expression":{"id":4541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":4536,"name":"marketplaceListings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3541,"src":"13219:19:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MarketplaceListing_$3526_storage_$","typeString":"mapping(uint256 => struct EventTicketNFT.MarketplaceListing storage ref)"}},"id":4538,"indexExpression":{"id":4537,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4524,"src":"13239:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13219:28:16","typeDescriptions":{"typeIdentifier":"t_struct$_MarketplaceListing_$3526_storage","typeString":"struct EventTicketNFT.MarketplaceListing storage ref"}},"id":4539,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"13248:8:16","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":3525,"src":"13219:37:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":4540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13259:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"13219:45:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4542,"nodeType":"ExpressionStatement","src":"13219:45:16"},{"eventCall":{"arguments":[{"id":4544,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4524,"src":"13307:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"baseExpression":{"id":4545,"name":"marketplaceListings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3541,"src":"13316:19:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MarketplaceListing_$3526_storage_$","typeString":"mapping(uint256 => struct EventTicketNFT.MarketplaceListing storage ref)"}},"id":4547,"indexExpression":{"id":4546,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4524,"src":"13336:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13316:28:16","typeDescriptions":{"typeIdentifier":"t_struct$_MarketplaceListing_$3526_storage","typeString":"struct EventTicketNFT.MarketplaceListing storage ref"}},"id":4548,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13345:6:16","memberName":"seller","nodeType":"MemberAccess","referencedDeclaration":3521,"src":"13316:35:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4543,"name":"TicketListingCancelled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3591,"src":"13284:22:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":4549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13284:68:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4550,"nodeType":"EmitStatement","src":"13279:73:16"}]}},{"expression":{"arguments":[{"id":4555,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4522,"src":"13405:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4556,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4524,"src":"13409:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4557,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4526,"src":"13418:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4553,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"13391:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_EventTicketNFT_$4562_$","typeString":"type(contract super EventTicketNFT)"}},"id":4554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13397:7:16","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":1627,"src":"13391:13:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":4558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13391:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4531,"id":4559,"nodeType":"Return","src":"13384:39:16"}]},"documentation":{"id":4520,"nodeType":"StructuredDocumentation","src":"12875:84:16","text":" @dev Override transfer functions to handle marketplace listings"},"id":4561,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"12974:7:16","nodeType":"FunctionDefinition","overrides":{"id":4528,"nodeType":"OverrideSpecifier","overrides":[],"src":"13034:8:16"},"parameters":{"id":4527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4522,"mutability":"mutable","name":"to","nameLocation":"12990:2:16","nodeType":"VariableDeclaration","scope":4561,"src":"12982:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4521,"name":"address","nodeType":"ElementaryTypeName","src":"12982:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4524,"mutability":"mutable","name":"tokenId","nameLocation":"13002:7:16","nodeType":"VariableDeclaration","scope":4561,"src":"12994:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4523,"name":"uint256","nodeType":"ElementaryTypeName","src":"12994:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4526,"mutability":"mutable","name":"auth","nameLocation":"13019:4:16","nodeType":"VariableDeclaration","scope":4561,"src":"13011:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4525,"name":"address","nodeType":"ElementaryTypeName","src":"13011:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12981:43:16"},"returnParameters":{"id":4531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4530,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4561,"src":"13052:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4529,"name":"address","nodeType":"ElementaryTypeName","src":"13052:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13051:9:16"},"scope":4562,"src":"12965:466:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":4563,"src":"538:12896:16","usedErrors":[13,18,195,200,209,214,219,226,231,236,1465,1468,1963],"usedEvents":[24,1309,1318,1327,3557,3567,3575,3585,3591]}],"src":"33:13403:16"},"id":16},"contracts/SE2NFT.sol":{"ast":{"absolutePath":"contracts/SE2NFT.sol","exportedSymbols":{"Base64":[1919],"Context":[1949],"ERC165":[2297],"ERC721":[1293],"ERC721Enumerable":[1812],"IERC165":[2309],"IERC721":[1410],"IERC721Enumerable":[1844],"IERC721Errors":[237],"IERC721Metadata":[1872],"IERC721Receiver":[1428],"Math":[3363],"SE2NFT":[4703],"SignedMath":[3468],"Strings":[2273]},"id":4704,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4564,"literals":["solidity",">=","0.8",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"32:31:17"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"@openzeppelin/contracts/token/ERC721/ERC721.sol","id":4565,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4704,"sourceUnit":1294,"src":"65:57:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol","file":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol","id":4566,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4704,"sourceUnit":1813,"src":"123:78:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Base64.sol","file":"@openzeppelin/contracts/utils/Base64.sol","id":4567,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4704,"sourceUnit":1920,"src":"202:50:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"@openzeppelin/contracts/utils/Strings.sol","id":4568,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4704,"sourceUnit":2274,"src":"253:51:17","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4569,"name":"ERC721Enumerable","nameLocations":["325:16:17"],"nodeType":"IdentifierPath","referencedDeclaration":1812,"src":"325:16:17"},"id":4570,"nodeType":"InheritanceSpecifier","src":"325:16:17"}],"canonicalName":"SE2NFT","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":4703,"linearizedBaseContracts":[4703,1812,1844,1293,237,1872,1410,2297,2309,1949],"name":"SE2NFT","nameLocation":"315:6:17","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"98bdf6f5","id":4572,"mutability":"mutable","name":"tokenIdCounter","nameLocation":"363:14:17","nodeType":"VariableDeclaration","scope":4703,"src":"348:29:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4571,"name":"uint256","nodeType":"ElementaryTypeName","src":"348:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"6c8b703f","id":4576,"mutability":"mutable","name":"tokenURIs","nameLocation":"425:9:17","nodeType":"VariableDeclaration","scope":4703,"src":"383:51:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"typeName":{"id":4575,"keyName":"tokenId","keyNameLocation":"399:7:17","keyType":{"id":4573,"name":"uint256","nodeType":"ElementaryTypeName","src":"391:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"383:34:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4574,"name":"string","nodeType":"ElementaryTypeName","src":"410:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"visibility":"public"},{"constant":false,"functionSelector":"1253c546","id":4583,"mutability":"mutable","name":"uris","nameLocation":"456:4:17","nodeType":"VariableDeclaration","scope":4703,"src":"440:232:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string[]"},"typeName":{"baseType":{"id":4577,"name":"string","nodeType":"ElementaryTypeName","src":"440:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":4578,"nodeType":"ArrayTypeName","src":"440:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"value":{"components":[{"hexValue":"516d564869336334716b5a634833634a796e7a4458526d356e37647a633952395455745563666e57517668646377","id":4579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"473:48:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_42ecba4cb8a4b48e4ca75c00f0554228256405964ed777ba8f2f7e5549f58fda","typeString":"literal_string \"QmVHi3c4qkZcH3cJynzDXRm5n7dzc9R9TUtUcfnWQvhdcw\""},"value":"QmVHi3c4qkZcH3cJynzDXRm5n7dzc9R9TUtUcfnWQvhdcw"},{"hexValue":"516d66564d416d4e4d316b4445425972433254507a51446f4352464836463574453165394d7234466b6b52355872","id":4580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"540:48:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_139ba8af83e46877ca7de7fc9eb1baeff6d7d8532ace896c99b3c0ce90688f02","typeString":"literal_string \"QmfVMAmNM1kDEBYrC2TPzQDoCRFH6F5tE1e9Mr4FkkR5Xr\""},"value":"QmfVMAmNM1kDEBYrC2TPzQDoCRFH6F5tE1e9Mr4FkkR5Xr"},{"hexValue":"516d63766355614b66364a794358684c4431627936684a584e727550514773336b6b4c673257317872376e46316a","id":4581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"609:48:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_b3006cc4ed76797d93660c2ef469f68e43f538799657d2740c97ce3ba2c6df40","typeString":"literal_string \"QmcvcUaKf6JyCXhLD1by6hJXNruPQGs3kkLg2W1xr7nF1j\""},"value":"QmcvcUaKf6JyCXhLD1by6hJXNruPQGs3kkLg2W1xr7nF1j"}],"id":4582,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"463:209:17","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$3_memory_ptr","typeString":"string memory[3] memory"}},"visibility":"public"},{"body":{"id":4590,"nodeType":"Block","src":"728:2:17","statements":[]},"id":4591,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"5345322d4552433732312d4e4654","id":4586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"700:16:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_190837db19800910019f4da51a20e58edb6563836aefc9d5c03b21e2754709f2","typeString":"literal_string \"SE2-ERC721-NFT\""},"value":"SE2-ERC721-NFT"},{"hexValue":"5345324e4654","id":4587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"718:8:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_23e4a38ec529753e97b6f0a3a9ef96d1c5f41eb45d3345c9ce2a314946d8904b","typeString":"literal_string \"SE2NFT\""},"value":"SE2NFT"}],"id":4588,"kind":"baseConstructorSpecifier","modifierName":{"id":4585,"name":"ERC721","nameLocations":["693:6:17"],"nodeType":"IdentifierPath","referencedDeclaration":1293,"src":"693:6:17"},"nodeType":"ModifierInvocation","src":"693:34:17"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4584,"nodeType":"ParameterList","parameters":[],"src":"690:2:17"},"returnParameters":{"id":4589,"nodeType":"ParameterList","parameters":[],"src":"728:0:17"},"scope":4703,"src":"679:51:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[489],"body":{"id":4599,"nodeType":"Block","src":"803:47:17","statements":[{"expression":{"hexValue":"68747470733a2f2f697066732e696f2f697066732f","id":4597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"820:23:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_6f6c4dab5ef2d22ee688f4f246e6d9e579f088bed1b916b0ef559db8e1ac6e46","typeString":"literal_string \"https://ipfs.io/ipfs/\""},"value":"https://ipfs.io/ipfs/"},"functionReturnParameters":4596,"id":4598,"nodeType":"Return","src":"813:30:17"}]},"id":4600,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"745:8:17","nodeType":"FunctionDefinition","overrides":{"id":4593,"nodeType":"OverrideSpecifier","overrides":[],"src":"770:8:17"},"parameters":{"id":4592,"nodeType":"ParameterList","parameters":[],"src":"753:2:17"},"returnParameters":{"id":4596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4595,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4600,"src":"788:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4594,"name":"string","nodeType":"ElementaryTypeName","src":"788:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"787:15:17"},"scope":4703,"src":"736:114:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4652,"nodeType":"Block","src":"911:348:17","statements":[{"expression":{"id":4608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"921:16:17","subExpression":{"id":4607,"name":"tokenIdCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4572,"src":"921:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4609,"nodeType":"ExpressionStatement","src":"921:16:17"},{"expression":{"arguments":[{"id":4611,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4602,"src":"957:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4612,"name":"tokenIdCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4572,"src":"961:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4610,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[915,941],"referencedDeclaration":915,"src":"947:9:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"947:29:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4614,"nodeType":"ExpressionStatement","src":"947:29:17"},{"assignments":[4616],"declarations":[{"constant":false,"id":4616,"mutability":"mutable","name":"predictableRandom","nameLocation":"995:17:17","nodeType":"VariableDeclaration","scope":4652,"src":"987:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4615,"name":"bytes32","nodeType":"ElementaryTypeName","src":"987:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4635,"initialValue":{"arguments":[{"arguments":[{"id":4620,"name":"tokenIdCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4572,"src":"1055:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4622,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1081:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1087:6:17","memberName":"number","nodeType":"MemberAccess","src":"1081:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1096:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1081:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4621,"name":"blockhash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-5,"src":"1071:9:17","typeDescriptions":{"typeIdentifier":"t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$","typeString":"function (uint256) view returns (bytes32)"}},"id":4626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1071:27:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":4627,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1100:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1104:6:17","memberName":"sender","nodeType":"MemberAccess","src":"1100:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":4631,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1120:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_SE2NFT_$4703","typeString":"contract SE2NFT"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SE2NFT_$4703","typeString":"contract SE2NFT"}],"id":4630,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1112:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4629,"name":"address","nodeType":"ElementaryTypeName","src":"1112:7:17","typeDescriptions":{}}},"id":4632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1112:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4618,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1038:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4619,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1042:12:17","memberName":"encodePacked","nodeType":"MemberAccess","src":"1038:16:17","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1038:88:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4617,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1015:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1015:121:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"987:149:17"},{"expression":{"id":4648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4636,"name":"tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"1147:9:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":4638,"indexExpression":{"id":4637,"name":"tokenIdCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4572,"src":"1157:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1147:25:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":4639,"name":"uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4583,"src":"1175:4:17","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"id":4647,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4642,"name":"predictableRandom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4616,"src":"1188:17:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1180:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4640,"name":"uint256","nodeType":"ElementaryTypeName","src":"1180:7:17","typeDescriptions":{}}},"id":4643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1180:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"expression":{"id":4644,"name":"uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4583,"src":"1209:4:17","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"id":4645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1214:6:17","memberName":"length","nodeType":"MemberAccess","src":"1209:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1180:40:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1175:46:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"src":"1147:74:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":4649,"nodeType":"ExpressionStatement","src":"1147:74:17"},{"expression":{"id":4650,"name":"tokenIdCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4572,"src":"1238:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4606,"id":4651,"nodeType":"Return","src":"1231:21:17"}]},"functionSelector":"691c65d4","id":4653,"implemented":true,"kind":"function","modifiers":[],"name":"mintItem","nameLocation":"865:8:17","nodeType":"FunctionDefinition","parameters":{"id":4603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4602,"mutability":"mutable","name":"to","nameLocation":"882:2:17","nodeType":"VariableDeclaration","scope":4653,"src":"874:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4601,"name":"address","nodeType":"ElementaryTypeName","src":"874:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"873:12:17"},"returnParameters":{"id":4606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4605,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4653,"src":"902:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4604,"name":"uint256","nodeType":"ElementaryTypeName","src":"902:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:9:17"},"scope":4703,"src":"856:403:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[480],"body":{"id":4701,"nodeType":"Block","src":"1345:571:17","statements":[{"expression":{"arguments":[{"id":4662,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"1369:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4661,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"1355:13:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":4663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1355:22:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4664,"nodeType":"ExpressionStatement","src":"1355:22:17"},{"assignments":[4666],"declarations":[{"constant":false,"id":4666,"mutability":"mutable","name":"imageCid","nameLocation":"1401:8:17","nodeType":"VariableDeclaration","scope":4701,"src":"1387:22:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4665,"name":"string","nodeType":"ElementaryTypeName","src":"1387:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":4670,"initialValue":{"baseExpression":{"id":4667,"name":"tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"1412:9:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":4669,"indexExpression":{"id":4668,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"1422:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1412:18:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1387:43:17"},{"assignments":[4672],"declarations":[{"constant":false,"id":4672,"mutability":"mutable","name":"json","nameLocation":"1454:4:17","nodeType":"VariableDeclaration","scope":4701,"src":"1441:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4671,"name":"bytes","nodeType":"ElementaryTypeName","src":"1441:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4688,"initialValue":{"arguments":[{"hexValue":"7b","id":4675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1491:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52","typeString":"literal_string \"{\""},"value":"{"},{"hexValue":"226e616d65223a225345324e46542023","id":4676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1512:21:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_1aa8fdda351331c29acd1810b7221962a68db950e62d3ad373ddf4bb48c6523f","typeString":"literal_string \"\"name\":\"SE2NFT #\""},"value":"\"name\":\"SE2NFT #"},{"arguments":[{"id":4679,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"1568:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4677,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"1551:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$2273_$","typeString":"type(library Strings)"}},"id":4678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1559:8:17","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2086,"src":"1551:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":4680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1551:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"222c","id":4681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1594:5:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb","typeString":"literal_string \"\",\""},"value":"\","},{"hexValue":"226465736372697074696f6e223a2253636166666f6c642d45544820322073616d706c65204e4654222c","id":4682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1617:48:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_1f27a6fded7ec13570e26e45ccdc9e364fc50b012b92a66ec24ade67e4d34298","typeString":"literal_string \"\"description\":\"Scaffold-ETH 2 sample NFT\",\""},"value":"\"description\":\"Scaffold-ETH 2 sample NFT\","},{"hexValue":"22696d616765223a22697066733a2f2f","id":4683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1683:21:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_1142d87ae89da2e55c57bf6d4d08b8c1cbd98506048166b2165a9963aa8d182d","typeString":"literal_string \"\"image\":\"ipfs://\""},"value":"\"image\":\"ipfs://"},{"id":4684,"name":"imageCid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4666,"src":"1722:8:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"22","id":4685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1748:4:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},"value":"\""},{"hexValue":"7d","id":4686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1766:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff","typeString":"literal_string \"}\""},"value":"}"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52","typeString":"literal_string \"{\""},{"typeIdentifier":"t_stringliteral_1aa8fdda351331c29acd1810b7221962a68db950e62d3ad373ddf4bb48c6523f","typeString":"literal_string \"\"name\":\"SE2NFT #\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb","typeString":"literal_string \"\",\""},{"typeIdentifier":"t_stringliteral_1f27a6fded7ec13570e26e45ccdc9e364fc50b012b92a66ec24ade67e4d34298","typeString":"literal_string \"\"description\":\"Scaffold-ETH 2 sample NFT\",\""},{"typeIdentifier":"t_stringliteral_1142d87ae89da2e55c57bf6d4d08b8c1cbd98506048166b2165a9963aa8d182d","typeString":"literal_string \"\"image\":\"ipfs://\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},{"typeIdentifier":"t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff","typeString":"literal_string \"}\""}],"expression":{"id":4673,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1461:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1465:12:17","memberName":"encodePacked","nodeType":"MemberAccess","src":"1461:16:17","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1461:318:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1441:338:17"},{"expression":{"arguments":[{"arguments":[{"hexValue":"646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c","id":4693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1834:31:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa","typeString":"literal_string \"data:application/json;base64,\""},"value":"data:application/json;base64,"},{"arguments":[{"id":4696,"name":"json","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4672,"src":"1893:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4694,"name":"Base64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1919,"src":"1879:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Base64_$1919_$","typeString":"type(library Base64)"}},"id":4695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1886:6:17","memberName":"encode","nodeType":"MemberAccess","referencedDeclaration":1918,"src":"1879:13:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$","typeString":"function (bytes memory) pure returns (string memory)"}},"id":4697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1879:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa","typeString":"literal_string \"data:application/json;base64,\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":4691,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1804:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4692,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1808:12:17","memberName":"encodePacked","nodeType":"MemberAccess","src":"1804:16:17","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1804:104:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1797:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":4689,"name":"string","nodeType":"ElementaryTypeName","src":"1797:6:17","typeDescriptions":{}}},"id":4699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1797:112:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4660,"id":4700,"nodeType":"Return","src":"1790:119:17"}]},"functionSelector":"c87b56dd","id":4702,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"1274:8:17","nodeType":"FunctionDefinition","overrides":{"id":4657,"nodeType":"OverrideSpecifier","overrides":[],"src":"1312:8:17"},"parameters":{"id":4656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4655,"mutability":"mutable","name":"tokenId","nameLocation":"1291:7:17","nodeType":"VariableDeclaration","scope":4702,"src":"1283:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4654,"name":"uint256","nodeType":"ElementaryTypeName","src":"1283:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1282:17:17"},"returnParameters":{"id":4660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4659,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4702,"src":"1330:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4658,"name":"string","nodeType":"ElementaryTypeName","src":"1330:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1329:15:17"},"scope":4703,"src":"1265:651:17","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":4704,"src":"306:1612:17","usedErrors":[195,200,209,214,219,226,231,236,1465,1468],"usedEvents":[1309,1318,1327]}],"src":"32:1887:17"},"id":17}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","errors":{"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}]},"kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the address provided by the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":8,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"devdoc":{"details":"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.","errors":{"ERC1155InsufficientBalance(address,uint256,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC1155InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC1155InvalidArrayLength(uint256,uint256)":[{"details":"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.","params":{"idsLength":"Length of the array of token identifiers","valuesLength":"Length of the array of token amounts"}}],"ERC1155InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC1155InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC1155InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC1155MissingApprovalForAll(address,address)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","owner":"Address of the current owner of a token."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"devdoc":{"details":"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.","errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"devdoc":{"details":"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.","errors":{"ERC721IncorrectOwner(address,uint256,address)":[{"details":"Indicates an error related to the ownership over a particular token. Used in transfers.","params":{"owner":"Address of the current owner of a token.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC721InsufficientApproval(address,uint256)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","tokenId":"Identifier number of a token."}}],"ERC721InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC721InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC721InvalidOwner(address)":[{"details":"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.","params":{"owner":"Address of the current owner of a token."}}],"ERC721InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC721InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC721NonexistentToken(uint256)":[{"details":"Indicates a `tokenId` whose `owner` is the zero address.","params":{"tokenId":"Identifier number of a token."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ERC721":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.","errors":{"ERC721IncorrectOwner(address,uint256,address)":[{"details":"Indicates an error related to the ownership over a particular token. Used in transfers.","params":{"owner":"Address of the current owner of a token.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC721InsufficientApproval(address,uint256)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","tokenId":"Identifier number of a token."}}],"ERC721InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC721InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC721InvalidOwner(address)":[{"details":"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.","params":{"owner":"Address of the current owner of a token."}}],"ERC721InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC721InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC721NonexistentToken(uint256)":[{"details":"Indicates a `tokenId` whose `owner` is the zero address.","params":{"tokenId":"Identifier number of a token."}}]},"events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"constructor":{"details":"Initializes the contract by setting a `name` and a `symbol` to the token collection."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC721} from \\\"./IERC721.sol\\\";\\nimport {IERC721Receiver} from \\\"./IERC721Receiver.sol\\\";\\nimport {IERC721Metadata} from \\\"./extensions/IERC721Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {Strings} from \\\"../../utils/Strings.sol\\\";\\nimport {IERC165, ERC165} from \\\"../../utils/introspection/ERC165.sol\\\";\\nimport {IERC721Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    mapping(uint256 tokenId => address) private _owners;\\n\\n    mapping(address owner => uint256) private _balances;\\n\\n    mapping(uint256 tokenId => address) private _tokenApprovals;\\n\\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual returns (uint256) {\\n        if (owner == address(0)) {\\n            revert ERC721InvalidOwner(address(0));\\n        }\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\\n        return _requireOwned(tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\\n        _requireOwned(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual {\\n        _approve(to, tokenId, _msgSender());\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\\n        _requireOwned(tokenId);\\n\\n        return _getApproved(tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\\n        if (to == address(0)) {\\n            revert ERC721InvalidReceiver(address(0));\\n        }\\n        // Setting an \\\"auth\\\" arguments enables the `_isAuthorized` check which verifies that the token exists\\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\\n        address previousOwner = _update(to, tokenId, _msgSender());\\n        if (previousOwner != from) {\\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\\n        }\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\\n        transferFrom(from, to, tokenId);\\n        _checkOnERC721Received(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\\n     *\\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\\n     */\\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\\n        return _owners[tokenId];\\n    }\\n\\n    /**\\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\\n     */\\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\\n     * particular (ignoring whether it is owned by `owner`).\\n     *\\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\\n     * assumption.\\n     */\\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        return\\n            spender != address(0) &&\\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\\n     * the `spender` for the specific `tokenId`.\\n     *\\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\\n     * assumption.\\n     */\\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\\n        if (!_isAuthorized(owner, spender, tokenId)) {\\n            if (owner == address(0)) {\\n                revert ERC721NonexistentToken(tokenId);\\n            } else {\\n                revert ERC721InsufficientApproval(spender, tokenId);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Unsafe write access to the balances, used by extensions that \\\"mint\\\" tokens using an {ownerOf} override.\\n     *\\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\\n     *\\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\\n     * remain consistent with one another.\\n     */\\n    function _increaseBalance(address account, uint128 value) internal virtual {\\n        unchecked {\\n            _balances[account] += value;\\n        }\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\\n     *\\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\\n     */\\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\\n        address from = _ownerOf(tokenId);\\n\\n        // Perform (optional) operator check\\n        if (auth != address(0)) {\\n            _checkAuthorized(from, auth, tokenId);\\n        }\\n\\n        // Execute the update\\n        if (from != address(0)) {\\n            // Clear approval. No need to re-authorize or emit the Approval event\\n            _approve(address(0), tokenId, address(0), false);\\n\\n            unchecked {\\n                _balances[from] -= 1;\\n            }\\n        }\\n\\n        if (to != address(0)) {\\n            unchecked {\\n                _balances[to] += 1;\\n            }\\n        }\\n\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        return from;\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal {\\n        if (to == address(0)) {\\n            revert ERC721InvalidReceiver(address(0));\\n        }\\n        address previousOwner = _update(to, tokenId, address(0));\\n        if (previousOwner != address(0)) {\\n            revert ERC721InvalidSender(address(0));\\n        }\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\\n        _mint(to, tokenId);\\n        _checkOnERC721Received(address(0), to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal {\\n        address previousOwner = _update(address(0), tokenId, address(0));\\n        if (previousOwner == address(0)) {\\n            revert ERC721NonexistentToken(tokenId);\\n        }\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(address from, address to, uint256 tokenId) internal {\\n        if (to == address(0)) {\\n            revert ERC721InvalidReceiver(address(0));\\n        }\\n        address previousOwner = _update(to, tokenId, address(0));\\n        if (previousOwner == address(0)) {\\n            revert ERC721NonexistentToken(tokenId);\\n        } else if (previousOwner != from) {\\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\\n        }\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - `to` cannot be the zero address.\\n     * - `from` cannot be the zero address.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\\n        _safeTransfer(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\\n        _transfer(from, to, tokenId);\\n        _checkOnERC721Received(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address to, uint256 tokenId, address auth) internal {\\n        _approve(to, tokenId, auth, true);\\n    }\\n\\n    /**\\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\\n     * emitted in the context of transfers.\\n     */\\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\\n        // Avoid reading the owner unless necessary\\n        if (emitEvent || auth != address(0)) {\\n            address owner = _requireOwned(tokenId);\\n\\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\\n                revert ERC721InvalidApprover(auth);\\n            }\\n\\n            if (emitEvent) {\\n                emit Approval(owner, to, tokenId);\\n            }\\n        }\\n\\n        _tokenApprovals[tokenId] = to;\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Requirements:\\n     * - operator can't be the address zero.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\\n        if (operator == address(0)) {\\n            revert ERC721InvalidOperator(operator);\\n        }\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\\n     * Returns the owner.\\n     *\\n     * Overrides to ownership logic should be done to {_ownerOf}.\\n     */\\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\\n        address owner = _ownerOf(tokenId);\\n        if (owner == address(0)) {\\n            revert ERC721NonexistentToken(tokenId);\\n        }\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     */\\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\\n        if (to.code.length > 0) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                if (retval != IERC721Receiver.onERC721Received.selector) {\\n                    revert ERC721InvalidReceiver(to);\\n                }\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert ERC721InvalidReceiver(to);\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\\n     *   {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the address zero.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\\n     * reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC721} from \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Math} from \\\"./math/Math.sol\\\";\\nimport {SignedMath} from \\\"./math/SignedMath.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant HEX_DIGITS = \\\"0123456789abcdef\\\";\\n    uint8 private constant ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev The `value` string doesn't fit in the specified `length`.\\n     */\\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toStringSigned(int256 value) internal pure returns (string memory) {\\n        return string.concat(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMath.abs(value)));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        uint256 localValue = value;\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\\n            localValue >>= 4;\\n        }\\n        if (localValue != 0) {\\n            revert StringsInsufficientHexLength(value, length);\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\\n     * representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    /**\\n     * @dev Muldiv operation overflow.\\n     */\\n    error MathOverflowedMulDiv();\\n\\n    enum Rounding {\\n        Floor, // Toward negative infinity\\n        Ceil, // Toward positive infinity\\n        Trunc, // Toward zero\\n        Expand // Away from zero\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds towards infinity instead\\n     * of rounding towards zero.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (b == 0) {\\n            // Guarantee the same behavior as in a regular Solidity division.\\n            return a / b;\\n        }\\n\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\\n     * denominator == 0.\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\\n     * Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            if (denominator <= prod1) {\\n                revert MathOverflowedMulDiv();\\n            }\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\\n\\n            uint256 twos = denominator & (0 - denominator);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\\n            // works in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\\n     * towards zero.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\\n     */\\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\\n        return uint8(rounding) % 2 == 1;\\n    }\\n}\\n\",\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":317,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":319,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":323,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":327,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":331,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":337,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Required interface of an ERC721 compliant contract.","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\\n     *   {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the address zero.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.","kind":"dev","methods":{"onERC721Received(address,address,uint256,bytes)":{"details":"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."}},"title":"ERC721 token receiver interface","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\\n     * reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol":{"ERC721Enumerable":{"abi":[{"inputs":[],"name":"ERC721EnumerableForbiddenBatchMint","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"ERC721OutOfBoundsIndex","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenOfOwnerByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"This implements an optional extension of {ERC721} defined in the EIP that adds enumerability of all the token ids in the contract as well as all token ids owned by each account. CAUTION: `ERC721` extensions that implement custom `balanceOf` logic, such as `ERC721Consecutive`, interfere with enumerability and should not be used together with `ERC721Enumerable`.","errors":{"ERC721EnumerableForbiddenBatchMint()":[{"details":"Batch mint is not allowed."}],"ERC721IncorrectOwner(address,uint256,address)":[{"details":"Indicates an error related to the ownership over a particular token. Used in transfers.","params":{"owner":"Address of the current owner of a token.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC721InsufficientApproval(address,uint256)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","tokenId":"Identifier number of a token."}}],"ERC721InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC721InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC721InvalidOwner(address)":[{"details":"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.","params":{"owner":"Address of the current owner of a token."}}],"ERC721InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC721InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC721NonexistentToken(uint256)":[{"details":"Indicates a `tokenId` whose `owner` is the zero address.","params":{"tokenId":"Identifier number of a token."}}],"ERC721OutOfBoundsIndex(address,uint256)":[{"details":"An `owner`'s token query was out of bounds for `index`. NOTE: The owner being `address(0)` indicates a global out of bounds index."}]},"events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenByIndex(uint256)":{"details":"See {IERC721Enumerable-tokenByIndex}."},"tokenOfOwnerByIndex(address,uint256)":{"details":"See {IERC721Enumerable-tokenOfOwnerByIndex}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"totalSupply()":{"details":"See {IERC721Enumerable-totalSupply}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenByIndex(uint256)":"4f6ccce7","tokenOfOwnerByIndex(address,uint256)":"2f745c59","tokenURI(uint256)":"c87b56dd","totalSupply()":"18160ddd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ERC721EnumerableForbiddenBatchMint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"ERC721OutOfBoundsIndex\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This implements an optional extension of {ERC721} defined in the EIP that adds enumerability of all the token ids in the contract as well as all token ids owned by each account. CAUTION: `ERC721` extensions that implement custom `balanceOf` logic, such as `ERC721Consecutive`, interfere with enumerability and should not be used together with `ERC721Enumerable`.\",\"errors\":{\"ERC721EnumerableForbiddenBatchMint()\":[{\"details\":\"Batch mint is not allowed.\"}],\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721OutOfBoundsIndex(address,uint256)\":[{\"details\":\"An `owner`'s token query was out of bounds for `index`. NOTE: The owner being `address(0)` indicates a global out of bounds index.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":\"ERC721Enumerable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC721} from \\\"./IERC721.sol\\\";\\nimport {IERC721Receiver} from \\\"./IERC721Receiver.sol\\\";\\nimport {IERC721Metadata} from \\\"./extensions/IERC721Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {Strings} from \\\"../../utils/Strings.sol\\\";\\nimport {IERC165, ERC165} from \\\"../../utils/introspection/ERC165.sol\\\";\\nimport {IERC721Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    mapping(uint256 tokenId => address) private _owners;\\n\\n    mapping(address owner => uint256) private _balances;\\n\\n    mapping(uint256 tokenId => address) private _tokenApprovals;\\n\\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual returns (uint256) {\\n        if (owner == address(0)) {\\n            revert ERC721InvalidOwner(address(0));\\n        }\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\\n        return _requireOwned(tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\\n        _requireOwned(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual {\\n        _approve(to, tokenId, _msgSender());\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\\n        _requireOwned(tokenId);\\n\\n        return _getApproved(tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\\n        if (to == address(0)) {\\n            revert ERC721InvalidReceiver(address(0));\\n        }\\n        // Setting an \\\"auth\\\" arguments enables the `_isAuthorized` check which verifies that the token exists\\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\\n        address previousOwner = _update(to, tokenId, _msgSender());\\n        if (previousOwner != from) {\\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\\n        }\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\\n        transferFrom(from, to, tokenId);\\n        _checkOnERC721Received(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\\n     *\\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\\n     */\\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\\n        return _owners[tokenId];\\n    }\\n\\n    /**\\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\\n     */\\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\\n     * particular (ignoring whether it is owned by `owner`).\\n     *\\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\\n     * assumption.\\n     */\\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        return\\n            spender != address(0) &&\\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\\n     * the `spender` for the specific `tokenId`.\\n     *\\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\\n     * assumption.\\n     */\\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\\n        if (!_isAuthorized(owner, spender, tokenId)) {\\n            if (owner == address(0)) {\\n                revert ERC721NonexistentToken(tokenId);\\n            } else {\\n                revert ERC721InsufficientApproval(spender, tokenId);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Unsafe write access to the balances, used by extensions that \\\"mint\\\" tokens using an {ownerOf} override.\\n     *\\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\\n     *\\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\\n     * remain consistent with one another.\\n     */\\n    function _increaseBalance(address account, uint128 value) internal virtual {\\n        unchecked {\\n            _balances[account] += value;\\n        }\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\\n     *\\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\\n     */\\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\\n        address from = _ownerOf(tokenId);\\n\\n        // Perform (optional) operator check\\n        if (auth != address(0)) {\\n            _checkAuthorized(from, auth, tokenId);\\n        }\\n\\n        // Execute the update\\n        if (from != address(0)) {\\n            // Clear approval. No need to re-authorize or emit the Approval event\\n            _approve(address(0), tokenId, address(0), false);\\n\\n            unchecked {\\n                _balances[from] -= 1;\\n            }\\n        }\\n\\n        if (to != address(0)) {\\n            unchecked {\\n                _balances[to] += 1;\\n            }\\n        }\\n\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        return from;\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal {\\n        if (to == address(0)) {\\n            revert ERC721InvalidReceiver(address(0));\\n        }\\n        address previousOwner = _update(to, tokenId, address(0));\\n        if (previousOwner != address(0)) {\\n            revert ERC721InvalidSender(address(0));\\n        }\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\\n        _mint(to, tokenId);\\n        _checkOnERC721Received(address(0), to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal {\\n        address previousOwner = _update(address(0), tokenId, address(0));\\n        if (previousOwner == address(0)) {\\n            revert ERC721NonexistentToken(tokenId);\\n        }\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(address from, address to, uint256 tokenId) internal {\\n        if (to == address(0)) {\\n            revert ERC721InvalidReceiver(address(0));\\n        }\\n        address previousOwner = _update(to, tokenId, address(0));\\n        if (previousOwner == address(0)) {\\n            revert ERC721NonexistentToken(tokenId);\\n        } else if (previousOwner != from) {\\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\\n        }\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - `to` cannot be the zero address.\\n     * - `from` cannot be the zero address.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\\n        _safeTransfer(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\\n        _transfer(from, to, tokenId);\\n        _checkOnERC721Received(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address to, uint256 tokenId, address auth) internal {\\n        _approve(to, tokenId, auth, true);\\n    }\\n\\n    /**\\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\\n     * emitted in the context of transfers.\\n     */\\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\\n        // Avoid reading the owner unless necessary\\n        if (emitEvent || auth != address(0)) {\\n            address owner = _requireOwned(tokenId);\\n\\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\\n                revert ERC721InvalidApprover(auth);\\n            }\\n\\n            if (emitEvent) {\\n                emit Approval(owner, to, tokenId);\\n            }\\n        }\\n\\n        _tokenApprovals[tokenId] = to;\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Requirements:\\n     * - operator can't be the address zero.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\\n        if (operator == address(0)) {\\n            revert ERC721InvalidOperator(operator);\\n        }\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\\n     * Returns the owner.\\n     *\\n     * Overrides to ownership logic should be done to {_ownerOf}.\\n     */\\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\\n        address owner = _ownerOf(tokenId);\\n        if (owner == address(0)) {\\n            revert ERC721NonexistentToken(tokenId);\\n        }\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     */\\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\\n        if (to.code.length > 0) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                if (retval != IERC721Receiver.onERC721Received.selector) {\\n                    revert ERC721InvalidReceiver(to);\\n                }\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert ERC721InvalidReceiver(to);\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\\n     *   {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the address zero.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\\n     * reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/ERC721Enumerable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ERC721} from \\\"../ERC721.sol\\\";\\nimport {IERC721Enumerable} from \\\"./IERC721Enumerable.sol\\\";\\nimport {IERC165} from \\\"../../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev This implements an optional extension of {ERC721} defined in the EIP that adds enumerability\\n * of all the token ids in the contract as well as all token ids owned by each account.\\n *\\n * CAUTION: `ERC721` extensions that implement custom `balanceOf` logic, such as `ERC721Consecutive`,\\n * interfere with enumerability and should not be used together with `ERC721Enumerable`.\\n */\\nabstract contract ERC721Enumerable is ERC721, IERC721Enumerable {\\n    mapping(address owner => mapping(uint256 index => uint256)) private _ownedTokens;\\n    mapping(uint256 tokenId => uint256) private _ownedTokensIndex;\\n\\n    uint256[] private _allTokens;\\n    mapping(uint256 tokenId => uint256) private _allTokensIndex;\\n\\n    /**\\n     * @dev An `owner`'s token query was out of bounds for `index`.\\n     *\\n     * NOTE: The owner being `address(0)` indicates a global out of bounds index.\\n     */\\n    error ERC721OutOfBoundsIndex(address owner, uint256 index);\\n\\n    /**\\n     * @dev Batch mint is not allowed.\\n     */\\n    error ERC721EnumerableForbiddenBatchMint();\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC721) returns (bool) {\\n        return interfaceId == type(IERC721Enumerable).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721Enumerable-tokenOfOwnerByIndex}.\\n     */\\n    function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual returns (uint256) {\\n        if (index >= balanceOf(owner)) {\\n            revert ERC721OutOfBoundsIndex(owner, index);\\n        }\\n        return _ownedTokens[owner][index];\\n    }\\n\\n    /**\\n     * @dev See {IERC721Enumerable-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _allTokens.length;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Enumerable-tokenByIndex}.\\n     */\\n    function tokenByIndex(uint256 index) public view virtual returns (uint256) {\\n        if (index >= totalSupply()) {\\n            revert ERC721OutOfBoundsIndex(address(0), index);\\n        }\\n        return _allTokens[index];\\n    }\\n\\n    /**\\n     * @dev See {ERC721-_update}.\\n     */\\n    function _update(address to, uint256 tokenId, address auth) internal virtual override returns (address) {\\n        address previousOwner = super._update(to, tokenId, auth);\\n\\n        if (previousOwner == address(0)) {\\n            _addTokenToAllTokensEnumeration(tokenId);\\n        } else if (previousOwner != to) {\\n            _removeTokenFromOwnerEnumeration(previousOwner, tokenId);\\n        }\\n        if (to == address(0)) {\\n            _removeTokenFromAllTokensEnumeration(tokenId);\\n        } else if (previousOwner != to) {\\n            _addTokenToOwnerEnumeration(to, tokenId);\\n        }\\n\\n        return previousOwner;\\n    }\\n\\n    /**\\n     * @dev Private function to add a token to this extension's ownership-tracking data structures.\\n     * @param to address representing the new owner of the given token ID\\n     * @param tokenId uint256 ID of the token to be added to the tokens list of the given address\\n     */\\n    function _addTokenToOwnerEnumeration(address to, uint256 tokenId) private {\\n        uint256 length = balanceOf(to) - 1;\\n        _ownedTokens[to][length] = tokenId;\\n        _ownedTokensIndex[tokenId] = length;\\n    }\\n\\n    /**\\n     * @dev Private function to add a token to this extension's token tracking data structures.\\n     * @param tokenId uint256 ID of the token to be added to the tokens list\\n     */\\n    function _addTokenToAllTokensEnumeration(uint256 tokenId) private {\\n        _allTokensIndex[tokenId] = _allTokens.length;\\n        _allTokens.push(tokenId);\\n    }\\n\\n    /**\\n     * @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\\n     * while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\\n     * gas optimizations e.g. when performing a transfer operation (avoiding double writes).\\n     * This has O(1) time complexity, but alters the order of the _ownedTokens array.\\n     * @param from address representing the previous owner of the given token ID\\n     * @param tokenId uint256 ID of the token to be removed from the tokens list of the given address\\n     */\\n    function _removeTokenFromOwnerEnumeration(address from, uint256 tokenId) private {\\n        // To prevent a gap in from's tokens array, we store the last token in the index of the token to delete, and\\n        // then delete the last slot (swap and pop).\\n\\n        uint256 lastTokenIndex = balanceOf(from);\\n        uint256 tokenIndex = _ownedTokensIndex[tokenId];\\n\\n        // When the token to delete is the last token, the swap operation is unnecessary\\n        if (tokenIndex != lastTokenIndex) {\\n            uint256 lastTokenId = _ownedTokens[from][lastTokenIndex];\\n\\n            _ownedTokens[from][tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\\n            _ownedTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\\n        }\\n\\n        // This also deletes the contents at the last position of the array\\n        delete _ownedTokensIndex[tokenId];\\n        delete _ownedTokens[from][lastTokenIndex];\\n    }\\n\\n    /**\\n     * @dev Private function to remove a token from this extension's token tracking data structures.\\n     * This has O(1) time complexity, but alters the order of the _allTokens array.\\n     * @param tokenId uint256 ID of the token to be removed from the tokens list\\n     */\\n    function _removeTokenFromAllTokensEnumeration(uint256 tokenId) private {\\n        // To prevent a gap in the tokens array, we store the last token in the index of the token to delete, and\\n        // then delete the last slot (swap and pop).\\n\\n        uint256 lastTokenIndex = _allTokens.length - 1;\\n        uint256 tokenIndex = _allTokensIndex[tokenId];\\n\\n        // When the token to delete is the last token, the swap operation is unnecessary. However, since this occurs so\\n        // rarely (when the last minted token is burnt) that we still do the swap here to avoid the gas cost of adding\\n        // an 'if' statement (like in _removeTokenFromOwnerEnumeration)\\n        uint256 lastTokenId = _allTokens[lastTokenIndex];\\n\\n        _allTokens[tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\\n        _allTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\\n\\n        // This also deletes the contents at the last position of the array\\n        delete _allTokensIndex[tokenId];\\n        _allTokens.pop();\\n    }\\n\\n    /**\\n     * See {ERC721-_increaseBalance}. We need that to account tokens that were minted in batch\\n     */\\n    function _increaseBalance(address account, uint128 amount) internal virtual override {\\n        if (amount > 0) {\\n            revert ERC721EnumerableForbiddenBatchMint();\\n        }\\n        super._increaseBalance(account, amount);\\n    }\\n}\\n\",\"keccak256\":\"0x36797469c391ea5ba27408e6ca8adf0824ba6f3adea9c139be18bd6f63232c16\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Enumerable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC721} from \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Enumerable is IERC721 {\\n    /**\\n     * @dev Returns the total amount of tokens stored by the contract.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\\n     */\\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\\n     * Use along with {totalSupply} to enumerate all tokens.\\n     */\\n    function tokenByIndex(uint256 index) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x3d6954a93ac198a2ffa384fa58ccf18e7e235263e051a394328002eff4e073de\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC721} from \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Math} from \\\"./math/Math.sol\\\";\\nimport {SignedMath} from \\\"./math/SignedMath.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant HEX_DIGITS = \\\"0123456789abcdef\\\";\\n    uint8 private constant ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev The `value` string doesn't fit in the specified `length`.\\n     */\\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toStringSigned(int256 value) internal pure returns (string memory) {\\n        return string.concat(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMath.abs(value)));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        uint256 localValue = value;\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\\n            localValue >>= 4;\\n        }\\n        if (localValue != 0) {\\n            revert StringsInsufficientHexLength(value, length);\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\\n     * representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    /**\\n     * @dev Muldiv operation overflow.\\n     */\\n    error MathOverflowedMulDiv();\\n\\n    enum Rounding {\\n        Floor, // Toward negative infinity\\n        Ceil, // Toward positive infinity\\n        Trunc, // Toward zero\\n        Expand // Away from zero\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds towards infinity instead\\n     * of rounding towards zero.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (b == 0) {\\n            // Guarantee the same behavior as in a regular Solidity division.\\n            return a / b;\\n        }\\n\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\\n     * denominator == 0.\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\\n     * Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            if (denominator <= prod1) {\\n                revert MathOverflowedMulDiv();\\n            }\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\\n\\n            uint256 twos = denominator & (0 - denominator);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\\n            // works in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\\n     * towards zero.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\\n     */\\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\\n        return uint8(rounding) % 2 == 1;\\n    }\\n}\\n\",\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":317,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":319,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":323,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":327,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":331,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":337,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":1447,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable","label":"_ownedTokens","offset":0,"slot":"6","type":"t_mapping(t_address,t_mapping(t_uint256,t_uint256))"},{"astId":1451,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable","label":"_ownedTokensIndex","offset":0,"slot":"7","type":"t_mapping(t_uint256,t_uint256)"},{"astId":1454,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable","label":"_allTokens","offset":0,"slot":"8","type":"t_array(t_uint256)dyn_storage"},{"astId":1458,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable","label":"_allTokensIndex","offset":0,"slot":"9","type":"t_mapping(t_uint256,t_uint256)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)dyn_storage":{"base":"t_uint256","encoding":"dynamic_array","label":"uint256[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_mapping(t_uint256,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(uint256 => uint256))","numberOfBytes":"32","value":"t_mapping(t_uint256,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_uint256,t_uint256)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol":{"IERC721Enumerable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenOfOwnerByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"See https://eips.ethereum.org/EIPS/eip-721","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"tokenByIndex(uint256)":{"details":"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens."},"tokenOfOwnerByIndex(address,uint256)":{"details":"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens."},"totalSupply()":{"details":"Returns the total amount of tokens stored by the contract."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"title":"ERC-721 Non-Fungible Token Standard, optional enumeration extension","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","tokenByIndex(uint256)":"4f6ccce7","tokenOfOwnerByIndex(address,uint256)":"2f745c59","totalSupply()":"18160ddd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional enumeration extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":\"IERC721Enumerable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\\n     *   {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the address zero.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Enumerable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC721} from \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Enumerable is IERC721 {\\n    /**\\n     * @dev Returns the total amount of tokens stored by the contract.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\\n     */\\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\\n     * Use along with {totalSupply} to enumerate all tokens.\\n     */\\n    function tokenByIndex(uint256 index) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x3d6954a93ac198a2ffa384fa58ccf18e7e235263e051a394328002eff4e073de\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"See https://eips.ethereum.org/EIPS/eip-721","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"name()":{"details":"Returns the token collection name."},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"symbol()":{"details":"Returns the token collection symbol."},"tokenURI(uint256)":{"details":"Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"title":"ERC-721 Non-Fungible Token Standard, optional metadata extension","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\\n     *   {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the address zero.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC721} from \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Base64.sol":{"Base64":{"abi":[],"devdoc":{"details":"Provides a set of functions to operate with Base64 strings.","kind":"dev","methods":{},"stateVariables":{"_TABLE":{"details":"Base64 Encoding/Decoding Table"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200304ef209982972105dc1d66ac54bcf12229775aa731b83800a1622dcfb78cb264736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB DIV 0xEF KECCAK256 SWAP10 DUP3 SWAP8 0x21 SDIV 0xDC SAR PUSH7 0xAC54BCF1222977 GAS 0xA7 BALANCE 0xB8 CODESIZE STOP LOG1 PUSH3 0x2DCFB7 DUP13 0xB2 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"202:3658:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;202:3658:8;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200304ef209982972105dc1d66ac54bcf12229775aa731b83800a1622dcfb78cb264736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB DIV 0xEF KECCAK256 SWAP10 DUP3 SWAP8 0x21 SDIV 0xDC SAR PUSH7 0xAC54BCF1222977 GAS 0xA7 BALANCE 0xB8 CODESIZE STOP LOG1 PUSH3 0x2DCFB7 DUP13 0xB2 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"202:3658:8:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"encode(bytes memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides a set of functions to operate with Base64 strings.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_TABLE\":{\"details\":\"Base64 Encoding/Decoding Table\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Base64.sol\":\"Base64\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Base64.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.2) (utils/Base64.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides a set of functions to operate with Base64 strings.\\n */\\nlibrary Base64 {\\n    /**\\n     * @dev Base64 Encoding/Decoding Table\\n     */\\n    string internal constant _TABLE = \\\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\\\";\\n\\n    /**\\n     * @dev Converts a `bytes` to its Bytes64 `string` representation.\\n     */\\n    function encode(bytes memory data) internal pure returns (string memory) {\\n        /**\\n         * Inspired by Brecht Devos (Brechtpd) implementation - MIT licence\\n         * https://github.com/Brechtpd/base64/blob/e78d9fd951e7b0977ddca77d92dc85183770daf4/base64.sol\\n         */\\n        if (data.length == 0) return \\\"\\\";\\n\\n        // Loads the table into memory\\n        string memory table = _TABLE;\\n\\n        // Encoding takes 3 bytes chunks of binary data from `bytes` data parameter\\n        // and split into 4 numbers of 6 bits.\\n        // The final Base64 length should be `bytes` data length multiplied by 4/3 rounded up\\n        // - `data.length + 2`  -> Round up\\n        // - `/ 3`              -> Number of 3-bytes chunks\\n        // - `4 *`              -> 4 characters for each chunk\\n        string memory result = new string(4 * ((data.length + 2) / 3));\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            // Prepare the lookup table (skip the first \\\"length\\\" byte)\\n            let tablePtr := add(table, 1)\\n\\n            // Prepare result pointer, jump over length\\n            let resultPtr := add(result, 0x20)\\n            let dataPtr := data\\n            let endPtr := add(data, mload(data))\\n\\n            // In some cases, the last iteration will read bytes after the end of the data. We cache the value, and\\n            // set it to zero to make sure no dirty bytes are read in that section.\\n            let afterPtr := add(endPtr, 0x20)\\n            let afterCache := mload(afterPtr)\\n            mstore(afterPtr, 0x00)\\n\\n            // Run over the input, 3 bytes at a time\\n            for {\\n\\n            } lt(dataPtr, endPtr) {\\n\\n            } {\\n                // Advance 3 bytes\\n                dataPtr := add(dataPtr, 3)\\n                let input := mload(dataPtr)\\n\\n                // To write each character, shift the 3 byte (24 bits) chunk\\n                // 4 times in blocks of 6 bits for each character (18, 12, 6, 0)\\n                // and apply logical AND with 0x3F to bitmask the least significant 6 bits.\\n                // Use this as an index into the lookup table, mload an entire word\\n                // so the desired character is in the least significant byte, and\\n                // mstore8 this least significant byte into the result and continue.\\n\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(18, input), 0x3F))))\\n                resultPtr := add(resultPtr, 1) // Advance\\n\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(12, input), 0x3F))))\\n                resultPtr := add(resultPtr, 1) // Advance\\n\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(6, input), 0x3F))))\\n                resultPtr := add(resultPtr, 1) // Advance\\n\\n                mstore8(resultPtr, mload(add(tablePtr, and(input, 0x3F))))\\n                resultPtr := add(resultPtr, 1) // Advance\\n            }\\n\\n            // Reset the value that was cached\\n            mstore(afterPtr, afterCache)\\n\\n            // When data `bytes` is not exactly 3 bytes long\\n            // it is padded with `=` characters at the end\\n            switch mod(mload(data), 3)\\n            case 1 {\\n                mstore8(sub(resultPtr, 1), 0x3d)\\n                mstore8(sub(resultPtr, 2), 0x3d)\\n            }\\n            case 2 {\\n                mstore8(sub(resultPtr, 1), 0x3d)\\n            }\\n        }\\n\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0x09000342b85b1a06fa1f5b71bdeef7c449cd25799aac14fa9053d8abd18219aa\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"}],"devdoc":{"details":"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].","errors":{"ReentrancyGuardReentrantCall()":[{"details":"Unauthorized reentrant call."}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    constructor() {\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if (_status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1960,"contract":"@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard","label":"_status","offset":0,"slot":"0","type":"t_uint256"}],"types":{"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"}],"devdoc":{"details":"String operations.","errors":{"StringsInsufficientHexLength(uint256,uint256)":[{"details":"The `value` string doesn't fit in the specified `length`."}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122014361ae278094b127bedfe2e8cb2fd31667231c7b831bedf7b6576e352ff5d4464736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EQ CALLDATASIZE BYTE 0xE2 PUSH25 0x94B127BEDFE2E8CB2FD31667231C7B831BEDF7B6576E352FF 0x5D PREVRANDAO PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"251:2847:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;251:2847:11;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122014361ae278094b127bedfe2e8cb2fd31667231c7b831bedf7b6576e352ff5d4464736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EQ CALLDATASIZE BYTE 0xE2 PUSH25 0x94B127BEDFE2E8CB2FD31667231C7B831BEDF7B6576E352FF 0x5D PREVRANDAO PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"251:2847:11:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"equal(string memory,string memory)":"infinite","toHexString(address)":"infinite","toHexString(uint256)":"infinite","toHexString(uint256,uint256)":"infinite","toString(uint256)":"infinite","toStringSigned(int256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Math} from \\\"./math/Math.sol\\\";\\nimport {SignedMath} from \\\"./math/SignedMath.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant HEX_DIGITS = \\\"0123456789abcdef\\\";\\n    uint8 private constant ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev The `value` string doesn't fit in the specified `length`.\\n     */\\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toStringSigned(int256 value) internal pure returns (string memory) {\\n        return string.concat(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMath.abs(value)));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        uint256 localValue = value;\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\\n            localValue >>= 4;\\n        }\\n        if (localValue != 0) {\\n            revert StringsInsufficientHexLength(value, length);\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\\n     * representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    /**\\n     * @dev Muldiv operation overflow.\\n     */\\n    error MathOverflowedMulDiv();\\n\\n    enum Rounding {\\n        Floor, // Toward negative infinity\\n        Ceil, // Toward positive infinity\\n        Trunc, // Toward zero\\n        Expand // Away from zero\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds towards infinity instead\\n     * of rounding towards zero.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (b == 0) {\\n            // Guarantee the same behavior as in a regular Solidity division.\\n            return a / b;\\n        }\\n\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\\n     * denominator == 0.\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\\n     * Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            if (denominator <= prod1) {\\n                revert MathOverflowedMulDiv();\\n            }\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\\n\\n            uint256 twos = denominator & (0 - denominator);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\\n            // works in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\\n     * towards zero.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\\n     */\\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\\n        return uint8(rounding) % 2 == 1;\\n    }\\n}\\n\",\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[{"inputs":[],"name":"MathOverflowedMulDiv","type":"error"}],"devdoc":{"details":"Standard math utilities missing in the Solidity language.","errors":{"MathOverflowedMulDiv()":[{"details":"Muldiv operation overflow."}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205668e942167f71b57b39fdd3181a46cc44d9e606ae111ad83102b2d9038f111564736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMP PUSH9 0xE942167F71B57B39FD 0xD3 XOR BYTE CHAINID 0xCC PREVRANDAO 0xD9 0xE6 MOD 0xAE GT BYTE 0xD8 BALANCE MUL 0xB2 0xD9 SUB DUP16 GT ISZERO PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"203:14914:14:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;203:14914:14;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205668e942167f71b57b39fdd3181a46cc44d9e606ae111ad83102b2d9038f111564736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMP PUSH9 0xE942167F71B57B39FD 0xD3 XOR BYTE CHAINID 0xCC PREVRANDAO 0xD9 0xE6 MOD 0xAE GT BYTE 0xD8 BALANCE MUL 0xB2 0xD9 SUB DUP16 GT ISZERO PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"203:14914:14:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"average(uint256,uint256)":"infinite","ceilDiv(uint256,uint256)":"infinite","log10(uint256)":"infinite","log10(uint256,enum Math.Rounding)":"infinite","log2(uint256)":"infinite","log2(uint256,enum Math.Rounding)":"infinite","log256(uint256)":"infinite","log256(uint256,enum Math.Rounding)":"infinite","max(uint256,uint256)":"infinite","min(uint256,uint256)":"infinite","mulDiv(uint256,uint256,uint256)":"infinite","mulDiv(uint256,uint256,uint256,enum Math.Rounding)":"infinite","sqrt(uint256)":"infinite","sqrt(uint256,enum Math.Rounding)":"infinite","tryAdd(uint256,uint256)":"infinite","tryDiv(uint256,uint256)":"infinite","tryMod(uint256,uint256)":"infinite","tryMul(uint256,uint256)":"infinite","trySub(uint256,uint256)":"infinite","unsignedRoundsUp(enum Math.Rounding)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    /**\\n     * @dev Muldiv operation overflow.\\n     */\\n    error MathOverflowedMulDiv();\\n\\n    enum Rounding {\\n        Floor, // Toward negative infinity\\n        Ceil, // Toward positive infinity\\n        Trunc, // Toward zero\\n        Expand // Away from zero\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds towards infinity instead\\n     * of rounding towards zero.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (b == 0) {\\n            // Guarantee the same behavior as in a regular Solidity division.\\n            return a / b;\\n        }\\n\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\\n     * denominator == 0.\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\\n     * Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            if (denominator <= prod1) {\\n                revert MathOverflowedMulDiv();\\n            }\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\\n\\n            uint256 twos = denominator & (0 - denominator);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\\n            // works in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\\n     * towards zero.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\\n     */\\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\\n        return uint8(rounding) % 2 == 1;\\n    }\\n}\\n\",\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"devdoc":{"details":"Standard signed math utilities missing in the Solidity language.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f4964af4e40dcf6c065c71071b1bffd923984b12e9cb29e4e7ca16d1e7e7840264736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DELEGATECALL SWAP7 0x4A DELEGATECALL 0xE4 0xD 0xCF PUSH13 0x65C71071B1BFFD923984B12E9 0xCB 0x29 0xE4 0xE7 0xCA AND 0xD1 0xE7 0xE7 DUP5 MUL PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"216:1047:15:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;216:1047:15;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f4964af4e40dcf6c065c71071b1bffd923984b12e9cb29e4e7ca16d1e7e7840264736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DELEGATECALL SWAP7 0x4A DELEGATECALL 0xE4 0xD 0xCF PUSH13 0x65C71071B1BFFD923984B12E9 0xCB 0x29 0xE4 0xE7 0xCA AND 0xD1 0xE7 0xE7 DUP5 MUL PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"216:1047:15:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"abs(int256)":"infinite","average(int256,int256)":"infinite","max(int256,int256)":"infinite","min(int256,int256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/EventTicketNFT.sol":{"EventTicketNFT":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"ERC721EnumerableForbiddenBatchMint","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"ERC721OutOfBoundsIndex","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"eventId","type":"uint256"},{"indexed":false,"internalType":"string","name":"name","type":"string"},{"indexed":true,"internalType":"address","name":"organizer","type":"address"},{"indexed":false,"internalType":"uint256","name":"ticketPrice","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"maxSupply","type":"uint256"}],"name":"EventCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"ticketId","type":"uint256"},{"indexed":true,"internalType":"address","name":"seller","type":"address"},{"indexed":false,"internalType":"uint256","name":"price","type":"uint256"}],"name":"TicketListed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"ticketId","type":"uint256"},{"indexed":true,"internalType":"address","name":"seller","type":"address"}],"name":"TicketListingCancelled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"ticketId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"eventId","type":"uint256"},{"indexed":true,"internalType":"address","name":"buyer","type":"address"},{"indexed":false,"internalType":"uint256","name":"ticketNumber","type":"uint256"}],"name":"TicketMinted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"ticketId","type":"uint256"},{"indexed":true,"internalType":"address","name":"seller","type":"address"},{"indexed":true,"internalType":"address","name":"buyer","type":"address"},{"indexed":false,"internalType":"uint256","name":"price","type":"uint256"}],"name":"TicketSold","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_ticketId","type":"uint256"}],"name":"buyListedTicket","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_eventId","type":"uint256"}],"name":"buyTicket","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_ticketId","type":"uint256"}],"name":"cancelListing","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_name","type":"string"},{"internalType":"string","name":"_description","type":"string"},{"internalType":"uint256","name":"_eventDate","type":"uint256"},{"internalType":"uint256","name":"_ticketPrice","type":"uint256"},{"internalType":"uint256","name":"_maxSupply","type":"uint256"},{"internalType":"string","name":"_imageCID","type":"string"}],"name":"createEvent","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_eventId","type":"uint256"}],"name":"deactivateEvent","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"eventIdCounter","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"events","outputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"description","type":"string"},{"internalType":"uint256","name":"eventDate","type":"uint256"},{"internalType":"uint256","name":"ticketPrice","type":"uint256"},{"internalType":"uint256","name":"maxSupply","type":"uint256"},{"internalType":"uint256","name":"soldTickets","type":"uint256"},{"internalType":"address","name":"organizer","type":"address"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"string","name":"imageCID","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getActiveListings","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAllEvents","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"description","type":"string"},{"internalType":"uint256","name":"eventDate","type":"uint256"},{"internalType":"uint256","name":"ticketPrice","type":"uint256"},{"internalType":"uint256","name":"maxSupply","type":"uint256"},{"internalType":"uint256","name":"soldTickets","type":"uint256"},{"internalType":"address","name":"organizer","type":"address"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"string","name":"imageCID","type":"string"}],"internalType":"struct EventTicketNFT.Event[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_eventId","type":"uint256"}],"name":"getEvent","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"description","type":"string"},{"internalType":"uint256","name":"eventDate","type":"uint256"},{"internalType":"uint256","name":"ticketPrice","type":"uint256"},{"internalType":"uint256","name":"maxSupply","type":"uint256"},{"internalType":"uint256","name":"soldTickets","type":"uint256"},{"internalType":"address","name":"organizer","type":"address"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"string","name":"imageCID","type":"string"}],"internalType":"struct EventTicketNFT.Event","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_ticketId","type":"uint256"}],"name":"getMarketplaceListing","outputs":[{"components":[{"internalType":"uint256","name":"ticketId","type":"uint256"},{"internalType":"address","name":"seller","type":"address"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"}],"internalType":"struct EventTicketNFT.MarketplaceListing","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_ticketId","type":"uint256"}],"name":"getTicket","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"eventId","type":"uint256"},{"internalType":"uint256","name":"ticketNumber","type":"uint256"},{"internalType":"string","name":"metadataURI","type":"string"}],"internalType":"struct EventTicketNFT.Ticket","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_eventId","type":"uint256"},{"internalType":"address","name":"_owner","type":"address"}],"name":"getTicketsByEventAndOwner","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_ticketId","type":"uint256"},{"internalType":"uint256","name":"_price","type":"uint256"}],"name":"listTicket","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"marketplaceListings","outputs":[{"internalType":"uint256","name":"ticketId","type":"uint256"},{"internalType":"address","name":"seller","type":"address"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ticketIdCounter","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"ticketToEvent","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"tickets","outputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"eventId","type":"uint256"},{"internalType":"uint256","name":"ticketNumber","type":"uint256"},{"internalType":"string","name":"metadataURI","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenOfOwnerByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_ticketId","type":"uint256"},{"internalType":"string","name":"_metadataURI","type":"string"}],"name":"updateTicketMetadata","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"NFT-based event ticketing system with marketplace functionality","errors":{"ERC721EnumerableForbiddenBatchMint()":[{"details":"Batch mint is not allowed."}],"ERC721IncorrectOwner(address,uint256,address)":[{"details":"Indicates an error related to the ownership over a particular token. Used in transfers.","params":{"owner":"Address of the current owner of a token.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC721InsufficientApproval(address,uint256)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","tokenId":"Identifier number of a token."}}],"ERC721InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC721InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC721InvalidOwner(address)":[{"details":"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.","params":{"owner":"Address of the current owner of a token."}}],"ERC721InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC721InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC721NonexistentToken(uint256)":[{"details":"Indicates a `tokenId` whose `owner` is the zero address.","params":{"tokenId":"Identifier number of a token."}}],"ERC721OutOfBoundsIndex(address,uint256)":[{"details":"An `owner`'s token query was out of bounds for `index`. NOTE: The owner being `address(0)` indicates a global out of bounds index."}],"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}],"ReentrancyGuardReentrantCall()":[{"details":"Unauthorized reentrant call."}]},"events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"buyListedTicket(uint256)":{"details":"Buy a ticket from the marketplace"},"buyTicket(uint256)":{"details":"Purchase a ticket for an event"},"cancelListing(uint256)":{"details":"Cancel a marketplace listing"},"createEvent(string,string,uint256,uint256,uint256,string)":{"details":"Create a new event"},"deactivateEvent(uint256)":{"details":"Emergency function to deactivate an event (only owner)"},"getActiveListings()":{"details":"Get active marketplace listings"},"getAllEvents()":{"details":"Get all events (for frontend display)"},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"getEvent(uint256)":{"details":"Get event details"},"getMarketplaceListing(uint256)":{"details":"Get marketplace listing details"},"getTicket(uint256)":{"details":"Get ticket details"},"getTicketsByEventAndOwner(uint256,address)":{"details":"Get tickets owned by an address for a specific event"},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"listTicket(uint256,uint256)":{"details":"List a ticket for resale on the marketplace"},"name()":{"details":"See {IERC721Metadata-name}."},"owner()":{"details":"Returns the address of the current owner."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenByIndex(uint256)":{"details":"See {IERC721Enumerable-tokenByIndex}."},"tokenOfOwnerByIndex(address,uint256)":{"details":"See {IERC721Enumerable-tokenOfOwnerByIndex}."},"tokenURI(uint256)":{"details":"Override tokenURI to return ticket metadata"},"totalSupply()":{"details":"See {IERC721Enumerable-totalSupply}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"updateTicketMetadata(uint256,string)":{"details":"Update ticket metadata URI after IPFS upload"}},"title":"EventTicketNFT","version":1},"evm":{"bytecode":{"functionDebugData":{"@_1971":{"entryPoint":null,"id":1971,"parameterSlots":0,"returnSlots":0},"@_354":{"entryPoint":null,"id":354,"parameterSlots":2,"returnSlots":0},"@_3603":{"entryPoint":null,"id":3603,"parameterSlots":0,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":193,"id":146,"parameterSlots":1,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":357,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":440,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":297,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":275,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:2940:18","statements":[{"nodeType":"YulBlock","src":"6:3:18","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:18","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:18"},"nodeType":"YulFunctionCall","src":"66:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:18"},"nodeType":"YulFunctionCall","src":"56:31:18"},"nodeType":"YulExpressionStatement","src":"56:31:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:18","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:18"},"nodeType":"YulFunctionCall","src":"96:15:18"},"nodeType":"YulExpressionStatement","src":"96:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:18"},"nodeType":"YulFunctionCall","src":"120:15:18"},"nodeType":"YulExpressionStatement","src":"120:15:18"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:127:18"},{"body":{"nodeType":"YulBlock","src":"201:325:18","statements":[{"nodeType":"YulAssignment","src":"211:22:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"225:1:18","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"228:4:18"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"221:3:18"},"nodeType":"YulFunctionCall","src":"221:12:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"211:6:18"}]},{"nodeType":"YulVariableDeclaration","src":"242:38:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"272:4:18"},{"kind":"number","nodeType":"YulLiteral","src":"278:1:18","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"268:3:18"},"nodeType":"YulFunctionCall","src":"268:12:18"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"246:18:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"319:31:18","statements":[{"nodeType":"YulAssignment","src":"321:27:18","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"335:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"343:4:18","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"331:3:18"},"nodeType":"YulFunctionCall","src":"331:17:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"321:6:18"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"299:18:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"292:6:18"},"nodeType":"YulFunctionCall","src":"292:26:18"},"nodeType":"YulIf","src":"289:61:18"},{"body":{"nodeType":"YulBlock","src":"409:111:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"430:1:18","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"437:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"442:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"433:3:18"},"nodeType":"YulFunctionCall","src":"433:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"423:6:18"},"nodeType":"YulFunctionCall","src":"423:31:18"},"nodeType":"YulExpressionStatement","src":"423:31:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"474:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"477:4:18","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"467:6:18"},"nodeType":"YulFunctionCall","src":"467:15:18"},"nodeType":"YulExpressionStatement","src":"467:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"502:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"505:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"495:6:18"},"nodeType":"YulFunctionCall","src":"495:15:18"},"nodeType":"YulExpressionStatement","src":"495:15:18"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"365:18:18"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"388:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"396:2:18","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"385:2:18"},"nodeType":"YulFunctionCall","src":"385:14:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"362:2:18"},"nodeType":"YulFunctionCall","src":"362:38:18"},"nodeType":"YulIf","src":"359:161:18"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"181:4:18","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"190:6:18","type":""}],"src":"146:380:18"},{"body":{"nodeType":"YulBlock","src":"587:65:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"604:1:18","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"607:3:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"597:6:18"},"nodeType":"YulFunctionCall","src":"597:14:18"},"nodeType":"YulExpressionStatement","src":"597:14:18"},{"nodeType":"YulAssignment","src":"620:26:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"638:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"641:4:18","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"628:9:18"},"nodeType":"YulFunctionCall","src":"628:18:18"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"620:4:18"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"570:3:18","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"578:4:18","type":""}],"src":"531:121:18"},{"body":{"nodeType":"YulBlock","src":"738:464:18","statements":[{"body":{"nodeType":"YulBlock","src":"771:425:18","statements":[{"nodeType":"YulVariableDeclaration","src":"785:11:18","value":{"kind":"number","nodeType":"YulLiteral","src":"795:1:18","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"789:2:18","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"816:2:18"},{"name":"array","nodeType":"YulIdentifier","src":"820:5:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"809:6:18"},"nodeType":"YulFunctionCall","src":"809:17:18"},"nodeType":"YulExpressionStatement","src":"809:17:18"},{"nodeType":"YulVariableDeclaration","src":"839:31:18","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"861:2:18"},{"kind":"number","nodeType":"YulLiteral","src":"865:4:18","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"851:9:18"},"nodeType":"YulFunctionCall","src":"851:19:18"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"843:4:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"883:57:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"906:4:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"916:1:18","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"923:10:18"},{"kind":"number","nodeType":"YulLiteral","src":"935:2:18","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"919:3:18"},"nodeType":"YulFunctionCall","src":"919:19:18"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"912:3:18"},"nodeType":"YulFunctionCall","src":"912:27:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"902:3:18"},"nodeType":"YulFunctionCall","src":"902:38:18"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"887:11:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"977:23:18","statements":[{"nodeType":"YulAssignment","src":"979:19:18","value":{"name":"data","nodeType":"YulIdentifier","src":"994:4:18"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"979:11:18"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"959:10:18"},{"kind":"number","nodeType":"YulLiteral","src":"971:4:18","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"956:2:18"},"nodeType":"YulFunctionCall","src":"956:20:18"},"nodeType":"YulIf","src":"953:47:18"},{"nodeType":"YulVariableDeclaration","src":"1013:41:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1027:4:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1037:1:18","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"1044:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"1049:2:18","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1040:3:18"},"nodeType":"YulFunctionCall","src":"1040:12:18"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1033:3:18"},"nodeType":"YulFunctionCall","src":"1033:20:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1023:3:18"},"nodeType":"YulFunctionCall","src":"1023:31:18"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"1017:2:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1067:24:18","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"1080:11:18"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"1071:5:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"1165:21:18","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1174:5:18"},{"name":"_1","nodeType":"YulIdentifier","src":"1181:2:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"1167:6:18"},"nodeType":"YulFunctionCall","src":"1167:17:18"},"nodeType":"YulExpressionStatement","src":"1167:17:18"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1115:5:18"},{"name":"_2","nodeType":"YulIdentifier","src":"1122:2:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1112:2:18"},"nodeType":"YulFunctionCall","src":"1112:13:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1126:26:18","statements":[{"nodeType":"YulAssignment","src":"1128:22:18","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1141:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"1148:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1137:3:18"},"nodeType":"YulFunctionCall","src":"1137:13:18"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"1128:5:18"}]}]},"pre":{"nodeType":"YulBlock","src":"1108:3:18","statements":[]},"src":"1104:82:18"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"754:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"759:2:18","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"751:2:18"},"nodeType":"YulFunctionCall","src":"751:11:18"},"nodeType":"YulIf","src":"748:448:18"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"710:5:18","type":""},{"name":"len","nodeType":"YulTypedName","src":"717:3:18","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"722:10:18","type":""}],"src":"657:545:18"},{"body":{"nodeType":"YulBlock","src":"1292:81:18","statements":[{"nodeType":"YulAssignment","src":"1302:65:18","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1317:4:18"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1335:1:18","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"1338:3:18"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1331:3:18"},"nodeType":"YulFunctionCall","src":"1331:11:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1348:1:18","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1344:3:18"},"nodeType":"YulFunctionCall","src":"1344:6:18"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1327:3:18"},"nodeType":"YulFunctionCall","src":"1327:24:18"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1323:3:18"},"nodeType":"YulFunctionCall","src":"1323:29:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1313:3:18"},"nodeType":"YulFunctionCall","src":"1313:40:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1359:1:18","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"1362:3:18"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1355:3:18"},"nodeType":"YulFunctionCall","src":"1355:11:18"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1310:2:18"},"nodeType":"YulFunctionCall","src":"1310:57:18"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"1302:4:18"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1269:4:18","type":""},{"name":"len","nodeType":"YulTypedName","src":"1275:3:18","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"1283:4:18","type":""}],"src":"1207:166:18"},{"body":{"nodeType":"YulBlock","src":"1474:1256:18","statements":[{"nodeType":"YulVariableDeclaration","src":"1484:24:18","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1504:3:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1498:5:18"},"nodeType":"YulFunctionCall","src":"1498:10:18"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"1488:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"1551:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1553:16:18"},"nodeType":"YulFunctionCall","src":"1553:18:18"},"nodeType":"YulExpressionStatement","src":"1553:18:18"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"1523:6:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1539:2:18","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1543:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1535:3:18"},"nodeType":"YulFunctionCall","src":"1535:10:18"},{"kind":"number","nodeType":"YulLiteral","src":"1547:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1531:3:18"},"nodeType":"YulFunctionCall","src":"1531:18:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1520:2:18"},"nodeType":"YulFunctionCall","src":"1520:30:18"},"nodeType":"YulIf","src":"1517:56:18"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"1626:4:18"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"1664:4:18"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"1658:5:18"},"nodeType":"YulFunctionCall","src":"1658:11:18"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"1632:25:18"},"nodeType":"YulFunctionCall","src":"1632:38:18"},{"name":"newLen","nodeType":"YulIdentifier","src":"1672:6:18"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"1582:43:18"},"nodeType":"YulFunctionCall","src":"1582:97:18"},"nodeType":"YulExpressionStatement","src":"1582:97:18"},{"nodeType":"YulVariableDeclaration","src":"1688:18:18","value":{"kind":"number","nodeType":"YulLiteral","src":"1705:1:18","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"1692:9:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1715:23:18","value":{"kind":"number","nodeType":"YulLiteral","src":"1734:4:18","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"1719:11:18","type":""}]},{"nodeType":"YulAssignment","src":"1747:24:18","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"1760:11:18"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"1747:9:18"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"1817:656:18","statements":[{"nodeType":"YulVariableDeclaration","src":"1831:35:18","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"1850:6:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1862:2:18","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1858:3:18"},"nodeType":"YulFunctionCall","src":"1858:7:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1846:3:18"},"nodeType":"YulFunctionCall","src":"1846:20:18"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"1835:7:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1879:49:18","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"1923:4:18"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"1893:29:18"},"nodeType":"YulFunctionCall","src":"1893:35:18"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"1883:6:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1941:10:18","value":{"kind":"number","nodeType":"YulLiteral","src":"1950:1:18","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1945:1:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"2028:172:18","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2053:6:18"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2071:3:18"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2076:9:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2067:3:18"},"nodeType":"YulFunctionCall","src":"2067:19:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2061:5:18"},"nodeType":"YulFunctionCall","src":"2061:26:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2046:6:18"},"nodeType":"YulFunctionCall","src":"2046:42:18"},"nodeType":"YulExpressionStatement","src":"2046:42:18"},{"nodeType":"YulAssignment","src":"2105:24:18","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2119:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"2127:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2115:3:18"},"nodeType":"YulFunctionCall","src":"2115:14:18"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2105:6:18"}]},{"nodeType":"YulAssignment","src":"2146:40:18","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"2163:9:18"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2174:11:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2159:3:18"},"nodeType":"YulFunctionCall","src":"2159:27:18"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"2146:9:18"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1975:1:18"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"1978:7:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1972:2:18"},"nodeType":"YulFunctionCall","src":"1972:14:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1987:28:18","statements":[{"nodeType":"YulAssignment","src":"1989:24:18","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1998:1:18"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2001:11:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1994:3:18"},"nodeType":"YulFunctionCall","src":"1994:19:18"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1989:1:18"}]}]},"pre":{"nodeType":"YulBlock","src":"1968:3:18","statements":[]},"src":"1964:236:18"},{"body":{"nodeType":"YulBlock","src":"2248:166:18","statements":[{"nodeType":"YulVariableDeclaration","src":"2266:43:18","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2293:3:18"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2298:9:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2289:3:18"},"nodeType":"YulFunctionCall","src":"2289:19:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2283:5:18"},"nodeType":"YulFunctionCall","src":"2283:26:18"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"2270:9:18","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2333:6:18"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"2345:9:18"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2372:1:18","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"2375:6:18"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2368:3:18"},"nodeType":"YulFunctionCall","src":"2368:14:18"},{"kind":"number","nodeType":"YulLiteral","src":"2384:3:18","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2364:3:18"},"nodeType":"YulFunctionCall","src":"2364:24:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2394:1:18","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2390:3:18"},"nodeType":"YulFunctionCall","src":"2390:6:18"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2360:3:18"},"nodeType":"YulFunctionCall","src":"2360:37:18"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2356:3:18"},"nodeType":"YulFunctionCall","src":"2356:42:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2341:3:18"},"nodeType":"YulFunctionCall","src":"2341:58:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2326:6:18"},"nodeType":"YulFunctionCall","src":"2326:74:18"},"nodeType":"YulExpressionStatement","src":"2326:74:18"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"2219:7:18"},{"name":"newLen","nodeType":"YulIdentifier","src":"2228:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2216:2:18"},"nodeType":"YulFunctionCall","src":"2216:19:18"},"nodeType":"YulIf","src":"2213:201:18"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2434:4:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2448:1:18","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"2451:6:18"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2444:3:18"},"nodeType":"YulFunctionCall","src":"2444:14:18"},{"kind":"number","nodeType":"YulLiteral","src":"2460:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2440:3:18"},"nodeType":"YulFunctionCall","src":"2440:22:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2427:6:18"},"nodeType":"YulFunctionCall","src":"2427:36:18"},"nodeType":"YulExpressionStatement","src":"2427:36:18"}]},"nodeType":"YulCase","src":"1810:663:18","value":{"kind":"number","nodeType":"YulLiteral","src":"1815:1:18","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"2490:234:18","statements":[{"nodeType":"YulVariableDeclaration","src":"2504:14:18","value":{"kind":"number","nodeType":"YulLiteral","src":"2517:1:18","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2508:5:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"2553:67:18","statements":[{"nodeType":"YulAssignment","src":"2571:35:18","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2590:3:18"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2595:9:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2586:3:18"},"nodeType":"YulFunctionCall","src":"2586:19:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2580:5:18"},"nodeType":"YulFunctionCall","src":"2580:26:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2571:5:18"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"2534:6:18"},"nodeType":"YulIf","src":"2531:89:18"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2640:4:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2699:5:18"},{"name":"newLen","nodeType":"YulIdentifier","src":"2706:6:18"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"2646:52:18"},"nodeType":"YulFunctionCall","src":"2646:67:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2633:6:18"},"nodeType":"YulFunctionCall","src":"2633:81:18"},"nodeType":"YulExpressionStatement","src":"2633:81:18"}]},"nodeType":"YulCase","src":"2482:242:18","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"1790:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"1798:2:18","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1787:2:18"},"nodeType":"YulFunctionCall","src":"1787:14:18"},"nodeType":"YulSwitch","src":"1780:944:18"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"1459:4:18","type":""},{"name":"src","nodeType":"YulTypedName","src":"1465:3:18","type":""}],"src":"1378:1352:18"},{"body":{"nodeType":"YulBlock","src":"2836:102:18","statements":[{"nodeType":"YulAssignment","src":"2846:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2858:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"2869:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2854:3:18"},"nodeType":"YulFunctionCall","src":"2854:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2846:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2888:9:18"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2903:6:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2919:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2924:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2915:3:18"},"nodeType":"YulFunctionCall","src":"2915:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"2928:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2911:3:18"},"nodeType":"YulFunctionCall","src":"2911:19:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2899:3:18"},"nodeType":"YulFunctionCall","src":"2899:32:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2881:6:18"},"nodeType":"YulFunctionCall","src":"2881:51:18"},"nodeType":"YulExpressionStatement","src":"2881:51:18"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2805:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2816:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2827:4:18","type":""}],"src":"2735:203:18"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}","id":18,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH14 0x115D995B9D151A58DAD95D139195 PUSH1 0x92 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x1155139195 PUSH1 0xDA SHL DUP2 MSTORE POP DUP2 PUSH1 0x0 SWAP1 DUP2 PUSH3 0x69 SWAP2 SWAP1 PUSH3 0x1B8 JUMP JUMPDEST POP PUSH1 0x1 PUSH3 0x78 DUP3 DUP3 PUSH3 0x1B8 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0xAA JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xB5 DUP2 PUSH3 0xC1 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xB SSTORE PUSH3 0x284 JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x13E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x15F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x1B3 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x18E JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x1AF JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x19A JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x1D4 JUMPI PUSH3 0x1D4 PUSH3 0x113 JUMP JUMPDEST PUSH3 0x1EC DUP2 PUSH3 0x1E5 DUP5 SLOAD PUSH3 0x129 JUMP JUMPDEST DUP5 PUSH3 0x165 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x224 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x20B JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x1AF JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x255 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x234 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x274 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x3F07 DUP1 PUSH3 0x294 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x225 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6D1884E0 GT PUSH2 0x123 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xD5A87ECB GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xD5A87ECB EQ PUSH2 0x6DB JUMPI DUP1 PUSH4 0xE01A0EBE EQ PUSH2 0x7A5 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x7BB JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x7DB JUMPI DUP1 PUSH4 0xF6AC04DA EQ PUSH2 0x7FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x644 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x659 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x679 JUMPI DUP1 PUSH4 0xC27A500D EQ PUSH2 0x699 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x6BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x87C35BC0 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x87C35BC0 EQ PUSH2 0x5BB JUMPI DUP1 PUSH4 0x8802255F EQ PUSH2 0x5D0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x5E6 JUMPI DUP1 PUSH4 0x94816F83 EQ PUSH2 0x604 JUMPI DUP1 PUSH4 0x957A632E EQ PUSH2 0x624 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6D1884E0 EQ PUSH2 0x52C JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x559 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x579 JUMPI DUP1 PUSH4 0x7DC379FA EQ PUSH2 0x58E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x305A905A GT PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x50248853 GT PUSH2 0x175 JUMPI DUP1 PUSH4 0x50248853 EQ PUSH2 0x489 JUMPI DUP1 PUSH4 0x50B44712 EQ PUSH2 0x49C JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x4CC JUMPI DUP1 PUSH4 0x65EC74B0 EQ PUSH2 0x4EC JUMPI DUP1 PUSH4 0x67DD74CA EQ PUSH2 0x519 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x305A905A EQ PUSH2 0x390 JUMPI DUP1 PUSH4 0x33A03D22 EQ PUSH2 0x3B0 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x3D0 JUMPI DUP1 PUSH4 0x48C32093 EQ PUSH2 0x3F0 JUMPI DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x469 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB791430 GT PUSH2 0x1F8 JUMPI DUP1 PUSH4 0xB791430 EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x311 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x330 JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x350 JUMPI DUP1 PUSH4 0x305A67A8 EQ PUSH2 0x370 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2B9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x236 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24A PUSH2 0x245 CALLDATASIZE PUSH1 0x4 PUSH2 0x3462 JUMP JUMPDEST PUSH2 0x828 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x274 PUSH2 0x853 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x256 SWAP2 SWAP1 PUSH2 0x34D6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A1 PUSH2 0x29C CALLDATASIZE PUSH1 0x4 PUSH2 0x34E9 JUMP JUMPDEST PUSH2 0x8E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x256 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D9 PUSH2 0x2D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x3519 JUMP JUMPDEST PUSH2 0x90E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2FB PUSH2 0x2F6 CALLDATASIZE PUSH1 0x4 PUSH2 0x34E9 JUMP JUMPDEST PUSH2 0x91D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x256 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3543 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x256 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D9 PUSH2 0x34B CALLDATASIZE PUSH1 0x4 PUSH2 0x35C6 JUMP JUMPDEST PUSH2 0xB19 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x322 PUSH2 0x36B CALLDATASIZE PUSH1 0x4 PUSH2 0x3519 JUMP JUMPDEST PUSH2 0xBA9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D9 PUSH2 0x38B CALLDATASIZE PUSH1 0x4 PUSH2 0x34E9 JUMP JUMPDEST PUSH2 0xC0E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D9 PUSH2 0x3AB CALLDATASIZE PUSH1 0x4 PUSH2 0x3602 JUMP JUMPDEST PUSH2 0xCFA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D9 PUSH2 0x3CB CALLDATASIZE PUSH1 0x4 PUSH2 0x36D0 JUMP JUMPDEST PUSH2 0xF2E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D9 PUSH2 0x3EB CALLDATASIZE PUSH1 0x4 PUSH2 0x35C6 JUMP JUMPDEST PUSH2 0xFFB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x43F PUSH2 0x40B CALLDATASIZE PUSH1 0x4 PUSH2 0x34E9 JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH1 0xFF AND DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x20 DUP6 ADD MSTORE SWAP2 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x256 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x475 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x322 PUSH2 0x484 CALLDATASIZE PUSH1 0x4 PUSH2 0x34E9 JUMP JUMPDEST PUSH2 0x1016 JUMP JUMPDEST PUSH2 0x2D9 PUSH2 0x497 CALLDATASIZE PUSH1 0x4 PUSH2 0x34E9 JUMP JUMPDEST PUSH2 0x106F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4BC PUSH2 0x4B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x34E9 JUMP JUMPDEST PUSH2 0x1335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x256 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3717 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A1 PUSH2 0x4E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x34E9 JUMP JUMPDEST PUSH2 0x13E8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x50C PUSH2 0x507 CALLDATASIZE PUSH1 0x4 PUSH2 0x3746 JUMP JUMPDEST PUSH2 0x13F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x256 SWAP2 SWAP1 PUSH2 0x3772 JUMP JUMPDEST PUSH2 0x322 PUSH2 0x527 CALLDATASIZE PUSH1 0x4 PUSH2 0x34E9 JUMP JUMPDEST PUSH2 0x1560 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x538 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x54C PUSH2 0x547 CALLDATASIZE PUSH1 0x4 PUSH2 0x34E9 JUMP JUMPDEST PUSH2 0x186D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x256 SWAP2 SWAP1 PUSH2 0x385B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x565 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x322 PUSH2 0x574 CALLDATASIZE PUSH1 0x4 PUSH2 0x386E JUMP JUMPDEST PUSH2 0x1AAC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x585 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D9 PUSH2 0x1AF4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x59A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5AE PUSH2 0x5A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x34E9 JUMP JUMPDEST PUSH2 0x1B08 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x256 SWAP2 SWAP1 PUSH2 0x3889 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x50C PUSH2 0x1B7F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x322 PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2A1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x610 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x322 PUSH2 0x61F CALLDATASIZE PUSH1 0x4 PUSH2 0x38C2 JUMP JUMPDEST PUSH2 0x1C80 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x630 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D9 PUSH2 0x63F CALLDATASIZE PUSH1 0x4 PUSH2 0x34E9 JUMP JUMPDEST PUSH2 0x1F47 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x650 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x274 PUSH2 0x1F6D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x665 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D9 PUSH2 0x674 CALLDATASIZE PUSH1 0x4 PUSH2 0x3966 JUMP JUMPDEST PUSH2 0x1F7C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x685 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D9 PUSH2 0x694 CALLDATASIZE PUSH1 0x4 PUSH2 0x39A2 JUMP JUMPDEST PUSH2 0x1F87 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6AE PUSH2 0x1F9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x256 SWAP2 SWAP1 PUSH2 0x3A1E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x274 PUSH2 0x6D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x34E9 JUMP JUMPDEST PUSH2 0x2277 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x767 PUSH2 0x6F6 CALLDATASIZE PUSH1 0x4 PUSH2 0x34E9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP1 DUP3 ADD DUP4 MSTORE PUSH1 0x0 DUP1 DUP4 MSTORE PUSH1 0x20 DUP1 DUP5 ADD DUP3 SWAP1 MSTORE DUP4 DUP6 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 SWAP4 DUP5 ADD DUP3 SWAP1 MSTORE SWAP5 DUP2 MSTORE PUSH1 0x10 DUP6 MSTORE DUP4 SWAP1 KECCAK256 DUP4 MLOAD SWAP2 DUP3 ADD DUP5 MSTORE DUP1 SLOAD DUP3 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x2 DUP5 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x256 SWAP2 SWAP1 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x60 SWAP2 DUP3 ADD MLOAD ISZERO ISZERO SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x322 PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24A PUSH2 0x7D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x3A80 JUMP JUMPDEST PUSH2 0x26D1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D9 PUSH2 0x7F6 CALLDATASIZE PUSH1 0x4 PUSH2 0x386E JUMP JUMPDEST PUSH2 0x26FF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x807 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x322 PUSH2 0x816 CALLDATASIZE PUSH1 0x4 PUSH2 0x34E9 JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x780E9D63 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x84D JUMPI POP PUSH2 0x84D DUP3 PUSH2 0x273A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x862 SWAP1 PUSH2 0x3AAA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x88E SWAP1 PUSH2 0x3AAA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8DB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8B0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8DB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8BE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F0 DUP3 PUSH2 0x278A JUMP JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x84D JUMP JUMPDEST PUSH2 0x919 DUP3 DUP3 CALLER PUSH2 0x27C3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD SWAP2 SWAP3 SWAP2 PUSH2 0x93F SWAP1 PUSH2 0x3AAA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x96B SWAP1 PUSH2 0x3AAA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9B8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x98D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9B8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x99B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x9CD SWAP1 PUSH2 0x3AAA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x9F9 SWAP1 PUSH2 0x3AAA JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA46 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA1B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA46 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA29 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x5 DUP6 ADD SLOAD PUSH1 0x6 DUP7 ADD SLOAD PUSH1 0x7 DUP8 ADD SLOAD PUSH1 0x8 DUP9 ADD DUP1 SLOAD SWAP8 SWAP9 SWAP6 SWAP8 SWAP5 SWAP7 POP SWAP3 SWAP5 SWAP2 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP4 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP3 DIV PUSH1 0xFF AND SWAP3 SWAP2 SWAP1 PUSH2 0xA96 SWAP1 PUSH2 0x3AAA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xAC2 SWAP1 PUSH2 0x3AAA JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB0F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAE4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB0F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAF2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP11 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB48 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB55 DUP4 DUP4 CALLER PUSH2 0x27D0 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xBA3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x64283D7B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB3F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBB4 DUP4 PUSH2 0x1AAC JUMP JUMPDEST DUP3 LT PUSH2 0xBE5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x295F44F7 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0xB3F JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC71 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x2CB7BA9030B932903737BA103A34329039B2B63632B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB3F JUMP JUMPDEST PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0xFF AND PUSH2 0xCBD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4C697374696E67206973206E6F7420616374697665 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB3F JUMP JUMPDEST PUSH1 0x3 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD CALLER SWAP1 DUP4 SWAP1 PUSH32 0x76C5D8A17D0BEE8BD0E004133353CD78EDE70AC9ACE2AA18BF839E748CAFF290 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST CALLER PUSH2 0xD04 DUP4 PUSH2 0x13E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xD56 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x165BDD48191BDB89DD081BDDDB881D1A1A5CC81D1A58DAD95D PUSH1 0x3A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB3F JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xDA6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5072696365206D7573742062652067726561746572207468616E203000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB3F JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xE08 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5469636B657420697320616C7265616479206C69737465640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB3F JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP1 DUP5 MSTORE PUSH1 0xE SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 PUSH1 0x3 ADD SLOAD TIMESTAMP LT PUSH2 0xE83 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742073656C6C207469636B65747320666F72207061737420657665 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x6E7473 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB3F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE DUP5 DUP2 MSTORE CALLER PUSH1 0x20 DUP1 DUP4 ADD DUP3 DUP2 MSTORE DUP4 DUP6 ADD DUP8 DUP2 MSTORE PUSH1 0x1 PUSH1 0x60 DUP7 ADD DUP2 DUP2 MSTORE PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x10 DUP7 MSTORE DUP9 SWAP1 KECCAK256 SWAP7 MLOAD DUP8 SSTORE SWAP3 MLOAD SWAP1 DUP7 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE MLOAD PUSH1 0x2 DUP6 ADD SSTORE MLOAD PUSH1 0x3 SWAP1 SWAP4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP4 ISZERO ISZERO SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 DUP2 MSTORE DUP6 SWAP2 PUSH32 0x22968EC3BE3687B180F3544163A034B88D57B48159D9A7E9A1B610FDB2D05F80 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST CALLER PUSH2 0xF38 DUP4 PUSH2 0x13E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xF8A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x165BDD48191BDB89DD081BDDDB881D1A1A5CC81D1A58DAD95D PUSH1 0x3A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB3F JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT PUSH2 0xFDB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D65746164617461205552492063616E6E6F7420626520656D70747900000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB3F JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD PUSH2 0xFF6 DUP3 DUP3 PUSH2 0x3B2C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xFF6 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1F87 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1021 PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST DUP3 LT PUSH2 0x104A JUMPI PUSH1 0x40 MLOAD PUSH4 0x295F44F7 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0xB3F JUMP JUMPDEST PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x105D JUMPI PUSH2 0x105D PUSH2 0x3BEC JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1077 PUSH2 0x2851 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0xFF AND PUSH2 0x10D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5469636B6574206973206E6F74206C697374656420666F722073616C65000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB3F JUMP JUMPDEST DUP1 PUSH1 0x2 ADD SLOAD CALLVALUE LT ISZERO PUSH2 0x1124 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x125B9CDD59999A58DA595B9D081C185E5B595B9D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB3F JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x113B DUP4 PUSH2 0x13E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1191 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656C6C6572206E6F206C6F6E676572206F776E7320746865207469636B6574 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB3F JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP1 DUP5 MSTORE PUSH1 0xE SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 PUSH1 0x3 ADD SLOAD TIMESTAMP LT PUSH2 0x120B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F7420627579207469636B65747320666F722070617374206576656E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7473 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB3F JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH2 0x1238 DUP3 CALLER DUP8 PUSH2 0x287B JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLVALUE PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1285 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x128A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x12D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x14185E5B595B9D081D1C985B9CD9995C8819985A5B1959 PUSH1 0x4A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB3F JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH32 0x2BBC64D6AFD28A753F6C5E4AAA894F1D684C44A0E080167EAE104AC8505CFEBD DUP6 PUSH1 0x40 MLOAD PUSH2 0x131B SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP PUSH2 0x1332 PUSH1 0x1 PUSH1 0xB SSTORE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD DUP1 SLOAD SWAP4 SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 SWAP2 PUSH2 0x1365 SWAP1 PUSH2 0x3AAA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1391 SWAP1 PUSH2 0x3AAA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x13DE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x13B3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x13DE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x13C1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x84D DUP3 PUSH2 0x278A JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1400 DUP4 PUSH2 0x1AAC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x141D JUMPI PUSH2 0x141D PUSH2 0x3624 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1446 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x14B9 JUMPI PUSH1 0x0 PUSH2 0x1461 DUP8 DUP4 PUSH2 0xBA9 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP9 SWAP1 SUB PUSH2 0x14A6 JUMPI DUP1 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x148D JUMPI PUSH2 0x148D PUSH2 0x3BEC JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP3 PUSH2 0x14A2 DUP2 PUSH2 0x3C18 JUMP JUMPDEST SWAP4 POP POP JUMPDEST POP DUP1 PUSH2 0x14B1 DUP2 PUSH2 0x3C18 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x144D JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14D5 JUMPI PUSH2 0x14D5 PUSH2 0x3624 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x14FE JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1555 JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x151E JUMPI PUSH2 0x151E PUSH2 0x3BEC JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1538 JUMPI PUSH2 0x1538 PUSH2 0x3BEC JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x154D DUP2 PUSH2 0x3C18 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1504 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x156A PUSH2 0x2851 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x15C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x4576656E74206973206E6F7420616374697665 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB3F JUMP JUMPDEST DUP1 PUSH1 0x5 ADD SLOAD DUP2 PUSH1 0x6 ADD SLOAD LT PUSH2 0x1614 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x115D995B9D081A5CC81CDBDB19081BDD5D PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB3F JUMP JUMPDEST DUP1 PUSH1 0x4 ADD SLOAD CALLVALUE LT ISZERO PUSH2 0x165F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x125B9CDD59999A58DA595B9D081C185E5B595B9D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB3F JUMP JUMPDEST DUP1 PUSH1 0x3 ADD SLOAD TIMESTAMP LT PUSH2 0x16B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4576656E742068617320616C7265616479207061737365640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB3F JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x16C2 DUP4 PUSH2 0x3C18 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xD SLOAD PUSH1 0x6 DUP3 ADD SLOAD PUSH1 0x0 SWAP1 PUSH2 0x16DD SWAP1 PUSH1 0x1 PUSH2 0x3C31 JUMP JUMPDEST PUSH1 0x6 DUP5 ADD DUP1 SLOAD SWAP2 SWAP3 POP PUSH1 0x0 PUSH2 0x16F1 DUP4 PUSH2 0x3C18 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP9 DUP2 MSTORE DUP3 DUP5 ADD DUP6 DUP2 MSTORE DUP5 MLOAD DUP1 DUP5 ADD DUP7 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x60 DUP7 ADD SWAP2 DUP3 MSTORE DUP9 DUP2 MSTORE PUSH1 0xF SWAP1 SWAP5 MSTORE SWAP5 SWAP1 SWAP3 KECCAK256 DUP4 MLOAD DUP2 SSTORE SWAP1 MLOAD PUSH1 0x1 DUP3 ADD SSTORE SWAP1 MLOAD PUSH1 0x2 DUP3 ADD SSTORE SWAP2 MLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x3 DUP3 ADD SWAP1 PUSH2 0x1756 SWAP1 DUP3 PUSH2 0x3B2C JUMP JUMPDEST POP POP POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE PUSH2 0x1774 CALLER DUP4 PUSH2 0x292B JUMP JUMPDEST PUSH1 0x7 DUP4 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 CALLVALUE SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x17C3 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x17C8 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1813 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x14185E5B595B9D081D1C985B9CD9995C8819985A5B1959 PUSH1 0x4A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB3F JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 DUP5 PUSH32 0x4FE0F5BB11EB6AB81C428FB83261719E5B22F84B3E1942CD491C3777504BB851 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1850 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP SWAP1 SWAP3 POP POP POP PUSH2 0x1868 PUSH1 0x1 PUSH1 0xB SSTORE JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1875 PUSH2 0x33EE JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x18AE SWAP1 PUSH2 0x3AAA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x18DA SWAP1 PUSH2 0x3AAA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1927 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x18FC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1927 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x190A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0x1940 SWAP1 PUSH2 0x3AAA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x196C SWAP1 PUSH2 0x3AAA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x19B9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x198E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x19B9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x199C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x5 DUP3 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x6 DUP3 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x7 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x8 DUP3 ADD DUP1 SLOAD PUSH1 0xE0 SWAP1 SWAP3 ADD SWAP2 PUSH2 0x1A23 SWAP1 PUSH2 0x3AAA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1A4F SWAP1 PUSH2 0x3AAA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1A9C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1A71 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1A9C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1A7F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1AD8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x22718AD9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xB3F JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1AFC PUSH2 0x2945 JUMP JUMPDEST PUSH2 0x1B06 PUSH1 0x0 PUSH2 0x2972 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1B33 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD DUP1 SLOAD PUSH2 0x1A23 SWAP1 PUSH2 0x3AAA JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 JUMPDEST PUSH1 0xD SLOAD DUP2 GT PUSH2 0x1BC9 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1BB7 JUMPI DUP2 PUSH2 0x1BB3 DUP2 PUSH2 0x3C18 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 PUSH2 0x1BC1 DUP2 PUSH2 0x3C18 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1B86 JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BE5 JUMPI PUSH2 0x1BE5 PUSH2 0x3624 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1C0E JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH1 0x1 JUMPDEST PUSH1 0xD SLOAD DUP2 GT PUSH2 0x1C77 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1C65 JUMPI DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1C4C JUMPI PUSH2 0x1C4C PUSH2 0x3BEC JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP2 PUSH2 0x1C61 DUP2 PUSH2 0x3C18 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 PUSH2 0x1C6F DUP2 PUSH2 0x3C18 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1C16 JUMP JUMPDEST POP SWAP1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 TIMESTAMP DUP6 GT PUSH2 0x1CD1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4576656E742064617465206D75737420626520696E2074686520667574757265 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB3F JUMP JUMPDEST PUSH1 0x0 DUP5 GT PUSH2 0x1D2D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5469636B6574207072696365206D757374206265206772656174657220746861 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x6E203 PUSH1 0xEC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB3F JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x1D87 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D617820737570706C79206D7573742062652067726561746572207468616E20 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB3F JUMP JUMPDEST PUSH1 0x0 DUP8 MLOAD GT PUSH2 0x1DD8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4576656E74206E616D652063616E6E6F7420626520656D707479000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB3F JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x1DE8 DUP4 PUSH2 0x3C18 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xC SLOAD PUSH1 0x40 DUP1 MLOAD PUSH2 0x140 DUP2 ADD DUP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP12 DUP2 MSTORE DUP3 DUP5 ADD DUP12 SWAP1 MSTORE PUSH1 0x60 DUP4 ADD DUP11 SWAP1 MSTORE PUSH1 0x80 DUP4 ADD DUP10 SWAP1 MSTORE PUSH1 0xA0 DUP4 ADD DUP9 SWAP1 MSTORE PUSH1 0x0 PUSH1 0xC0 DUP5 ADD DUP2 SWAP1 MSTORE CALLER PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x1 PUSH2 0x100 DUP6 ADD DUP2 SWAP1 MSTORE PUSH2 0x120 DUP6 ADD DUP10 SWAP1 MSTORE DUP7 DUP3 MSTORE PUSH1 0xE SWAP1 SWAP4 MSTORE SWAP4 SWAP1 SWAP4 KECCAK256 DUP3 MLOAD DUP2 SSTORE SWAP3 MLOAD SWAP2 SWAP3 SWAP2 SWAP1 DUP3 ADD SWAP1 PUSH2 0x1E65 SWAP1 DUP3 PUSH2 0x3B2C JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD SWAP1 PUSH2 0x1E7A SWAP1 DUP3 PUSH2 0x3B2C JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x4 DUP3 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0x5 DUP3 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD PUSH1 0x6 DUP3 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD PUSH1 0x7 DUP3 ADD DUP1 SLOAD PUSH2 0x100 DUP6 ADD MLOAD ISZERO ISZERO PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x120 DUP3 ADD MLOAD PUSH1 0x8 DUP3 ADD SWAP1 PUSH2 0x1EF2 SWAP1 DUP3 PUSH2 0x3B2C JUMP JUMPDEST POP SWAP1 POP POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH32 0x81F945738BEFF591C3EAB232E9F3265CE3F12263A2EC7ACF84DB8DC0FCE26A27 DUP11 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH2 0x1F34 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3C44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1F4F PUSH2 0x2945 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x7 ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x862 SWAP1 PUSH2 0x3AAA JUMP JUMPDEST PUSH2 0x919 CALLER DUP4 DUP4 PUSH2 0x29C4 JUMP JUMPDEST PUSH2 0x1F92 DUP5 DUP5 DUP5 PUSH2 0xB19 JUMP JUMPDEST PUSH2 0xBA3 DUP5 DUP5 DUP5 DUP5 PUSH2 0x2A5B JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0xC SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1FBD JUMPI PUSH2 0x1FBD PUSH2 0x3624 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1FF6 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x1FE3 PUSH2 0x33EE JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1FDB JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x1 JUMPDEST PUSH1 0xC SLOAD DUP2 GT PUSH2 0x2271 JUMPI PUSH1 0xE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x203E SWAP1 PUSH2 0x3AAA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x206A SWAP1 PUSH2 0x3AAA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x20B7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x208C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x20B7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x209A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0x20D0 SWAP1 PUSH2 0x3AAA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x20FC SWAP1 PUSH2 0x3AAA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2149 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x211E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2149 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x212C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x5 DUP3 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x6 DUP3 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x7 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x8 DUP3 ADD DUP1 SLOAD PUSH1 0xE0 SWAP1 SWAP3 ADD SWAP2 PUSH2 0x21B3 SWAP1 PUSH2 0x3AAA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x21DF SWAP1 PUSH2 0x3AAA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x222C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2201 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x222C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x220F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP DUP3 PUSH1 0x1 DUP4 PUSH2 0x2243 SWAP2 SWAP1 PUSH2 0x3C69 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x2253 JUMPI PUSH2 0x2253 PUSH2 0x3BEC JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x2269 SWAP1 PUSH2 0x3C18 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1FFC JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2282 DUP3 PUSH2 0x278A JUMP JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x229F SWAP1 PUSH2 0x3AAA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x22CB SWAP1 PUSH2 0x3AAA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2318 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x22ED JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2318 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x22FB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x2351 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x233A SWAP2 SWAP1 PUSH2 0x3C98 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xF PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD DUP1 SLOAD PUSH2 0x239F SWAP1 PUSH2 0x3AAA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x23CB SWAP1 PUSH2 0x3AAA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2418 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x23ED JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2418 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x23FB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP4 PUSH1 0x20 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x2462 SWAP1 PUSH2 0x3AAA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x248E SWAP1 PUSH2 0x3AAA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x24DB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x24B0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x24DB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x24BE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0x24F4 SWAP1 PUSH2 0x3AAA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2520 SWAP1 PUSH2 0x3AAA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x256D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2542 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x256D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2550 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x5 DUP3 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x6 DUP3 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x7 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x8 DUP3 ADD DUP1 SLOAD PUSH1 0xE0 SWAP1 SWAP3 ADD SWAP2 PUSH2 0x25D7 SWAP1 PUSH2 0x3AAA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2603 SWAP1 PUSH2 0x3AAA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2650 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2625 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2650 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2633 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x20 ADD MLOAD PUSH2 0x266F DUP5 PUSH1 0x40 ADD MLOAD PUSH2 0x2B84 JUMP JUMPDEST DUP4 PUSH1 0x40 ADD MLOAD DUP5 PUSH2 0x120 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x268D SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3CC7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0x26A7 DUP2 PUSH2 0x2C17 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x26B7 SWAP2 SWAP1 PUSH2 0x3DAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP5 POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x2707 PUSH2 0x2945 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2731 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xB3F JUMP JUMPDEST PUSH2 0x1332 DUP2 PUSH2 0x2972 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x276B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x84D JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x84D JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x84D JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xB3F JUMP JUMPDEST PUSH2 0xFF6 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x2D77 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x283E JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x3 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x1 ADD SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP6 SWAP2 PUSH32 0x76C5D8A17D0BEE8BD0E004133353CD78EDE70AC9ACE2AA18BF839E748CAFF290 SWAP2 SWAP1 LOG3 JUMPDEST PUSH2 0x2849 DUP5 DUP5 DUP5 PUSH2 0x2E7D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0xB SLOAD SUB PUSH2 0x2874 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0xB SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x28A5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xB3F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28B3 DUP4 DUP4 PUSH1 0x0 PUSH2 0x27D0 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x28DF JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xB3F JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xBA3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x64283D7B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB3F JUMP JUMPDEST PUSH2 0x919 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x2F4A JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1B06 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xB3F JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x29F6 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB611743 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xB3F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH2 0xF21 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0xBA3 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x2A9D SWAP1 CALLER SWAP1 DUP9 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x3DF2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x2AD8 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x2AD5 SWAP2 DUP2 ADD SWAP1 PUSH2 0x3E25 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2B41 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x2B06 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2B0B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x2B39 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xB3F JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ PUSH2 0x2B7D JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xB3F JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x2B91 DUP4 PUSH2 0x2F61 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2BB1 JUMPI PUSH2 0x2BB1 PUSH2 0x3624 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2BDB JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0x2BE5 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD PUSH1 0x0 SUB PUSH2 0x2C36 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3E92 PUSH1 0x40 SWAP2 CODECOPY SWAP1 POP PUSH1 0x0 PUSH1 0x3 DUP5 MLOAD PUSH1 0x2 PUSH2 0x2C65 SWAP2 SWAP1 PUSH2 0x3C31 JUMP JUMPDEST PUSH2 0x2C6F SWAP2 SWAP1 PUSH2 0x3E42 JUMP JUMPDEST PUSH2 0x2C7A SWAP1 PUSH1 0x4 PUSH2 0x3E64 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2C92 JUMPI PUSH2 0x2C92 PUSH2 0x3624 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2CBC JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x1 DUP3 ADD PUSH1 0x20 DUP3 ADD DUP6 DUP7 MLOAD DUP8 ADD PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x0 DUP3 MSTORE JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x2D32 JUMPI PUSH1 0x3 DUP5 ADD SWAP4 POP DUP4 MLOAD PUSH1 0x3F DUP2 PUSH1 0x12 SHR AND DUP8 ADD MLOAD DUP7 MSTORE8 PUSH1 0x1 DUP7 ADD SWAP6 POP PUSH1 0x3F DUP2 PUSH1 0xC SHR AND DUP8 ADD MLOAD DUP7 MSTORE8 PUSH1 0x1 DUP7 ADD SWAP6 POP PUSH1 0x3F DUP2 PUSH1 0x6 SHR AND DUP8 ADD MLOAD DUP7 MSTORE8 PUSH1 0x1 DUP7 ADD SWAP6 POP PUSH1 0x3F DUP2 AND DUP8 ADD MLOAD DUP7 MSTORE8 POP PUSH1 0x1 DUP6 ADD SWAP5 POP PUSH2 0x2CD7 JUMP JUMPDEST SWAP1 MSTORE POP POP DUP6 MLOAD PUSH1 0x3 SWAP1 MOD PUSH1 0x1 DUP2 EQ PUSH2 0x2D51 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x2D64 JUMPI PUSH2 0x2D6C JUMP JUMPDEST PUSH1 0x3D PUSH1 0x1 DUP4 SUB MSTORE8 PUSH1 0x3D PUSH1 0x2 DUP4 SUB MSTORE8 PUSH2 0x2D6C JUMP JUMPDEST PUSH1 0x3D PUSH1 0x1 DUP4 SUB MSTORE8 JUMPDEST POP SWAP2 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x2D8B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x2E4D JUMPI PUSH1 0x0 PUSH2 0x2D9B DUP5 PUSH2 0x278A JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x2DC7 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x2DDA JUMPI POP PUSH2 0x2DD8 DUP2 DUP5 PUSH2 0x26D1 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x2E03 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9FBF51F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xB3F JUMP JUMPDEST DUP2 ISZERO PUSH2 0x2E4B JUMPI DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2E8B DUP6 DUP6 DUP6 PUSH2 0x3039 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2EE8 JUMPI PUSH2 0x2EE3 DUP5 PUSH1 0x8 DUP1 SLOAD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD DUP4 SSTORE SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 ADD SSTORE JUMP JUMPDEST PUSH2 0x2F0B JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x2F0B JUMPI PUSH2 0x2F0B DUP2 DUP6 PUSH2 0x3132 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x2F27 JUMPI PUSH2 0x2F22 DUP5 PUSH2 0x31C3 JUMP JUMPDEST PUSH2 0x2849 JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x2849 JUMPI PUSH2 0x2849 DUP6 DUP6 PUSH2 0x3272 JUMP JUMPDEST PUSH2 0x2F54 DUP4 DUP4 PUSH2 0x32C2 JUMP JUMPDEST PUSH2 0xFF6 PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x2A5B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0x2FA0 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x2FCC JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x2FEA JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x3002 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x3016 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x3028 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x84D JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND ISZERO PUSH2 0x3066 JUMPI PUSH2 0x3066 DUP2 DUP5 DUP7 PUSH2 0x3327 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x30A4 JUMPI PUSH2 0x3083 PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH2 0x2D77 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0x30D3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP8 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x313D DUP4 PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP1 DUP3 EQ PUSH2 0x3190 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD DUP5 DUP5 MSTORE DUP2 DUP5 KECCAK256 DUP2 SWAP1 SSTORE DUP4 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP2 SWAP1 SSTORE JUMPDEST POP PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP5 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP4 MSTORE PUSH1 0x6 DUP2 MSTORE DUP4 DUP4 KECCAK256 SWAP2 DUP4 MSTORE MSTORE SWAP1 DUP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x31D5 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x3C69 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x8 DUP1 SLOAD SWAP4 SWAP5 POP SWAP1 SWAP3 DUP5 SWAP1 DUP2 LT PUSH2 0x31FD JUMPI PUSH2 0x31FD PUSH2 0x3BEC JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x321E JUMPI PUSH2 0x321E PUSH2 0x3BEC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 DUP2 MSTORE PUSH1 0x9 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP5 SWAP1 SSTORE DUP6 DUP3 MSTORE DUP2 KECCAK256 SSTORE PUSH1 0x8 DUP1 SLOAD DUP1 PUSH2 0x3256 JUMPI PUSH2 0x3256 PUSH2 0x3E7B JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x327F DUP5 PUSH2 0x1AAC JUMP JUMPDEST PUSH2 0x3289 SWAP2 SWAP1 PUSH2 0x3C69 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE SWAP4 DUP3 MSTORE PUSH1 0x7 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x32EC JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xB3F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32FA DUP4 DUP4 PUSH1 0x0 PUSH2 0x27D0 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xFF6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x39E35637 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xB3F JUMP JUMPDEST PUSH2 0x3332 DUP4 DUP4 DUP4 PUSH2 0x338B JUMP JUMPDEST PUSH2 0xFF6 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3360 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xB3F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x177E802F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0xB3F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x2849 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x33C5 JUMPI POP PUSH2 0x33C5 DUP5 DUP5 PUSH2 0x26D1 JUMP JUMPDEST DUP1 PUSH2 0x2849 JUMPI POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1332 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3474 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x347F DUP2 PUSH2 0x344C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x34A1 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3489 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x34C2 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x3486 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x347F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x34AA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x34FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1868 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x352C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3535 DUP4 PUSH2 0x3502 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP13 DUP4 MSTORE DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x355D DUP2 DUP5 ADD DUP14 PUSH2 0x34AA JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x3571 DUP2 DUP13 PUSH2 0x34AA JUMP JUMPDEST SWAP1 POP DUP10 PUSH1 0x60 DUP5 ADD MSTORE DUP9 PUSH1 0x80 DUP5 ADD MSTORE DUP8 PUSH1 0xA0 DUP5 ADD MSTORE DUP7 PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0xE0 DUP5 ADD MSTORE DUP5 ISZERO ISZERO PUSH2 0x100 DUP5 ADD MSTORE DUP3 DUP2 SUB PUSH2 0x120 DUP5 ADD MSTORE PUSH2 0x35B5 DUP2 DUP6 PUSH2 0x34AA JUMP JUMPDEST SWAP14 SWAP13 POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x35DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x35E4 DUP5 PUSH2 0x3502 JUMP JUMPDEST SWAP3 POP PUSH2 0x35F2 PUSH1 0x20 DUP6 ADD PUSH2 0x3502 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3615 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x3655 JUMPI PUSH2 0x3655 PUSH2 0x3624 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x367D JUMPI PUSH2 0x367D PUSH2 0x3624 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x3696 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x36C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x347F DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x363A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x36E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3701 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x370D DUP6 DUP3 DUP7 ADD PUSH2 0x36B0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP5 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x373C PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x34AA JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3759 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x3769 PUSH1 0x20 DUP5 ADD PUSH2 0x3502 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x37AA JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x378E JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP3 MLOAD DUP5 MSTORE PUSH1 0x20 DUP4 ADD MLOAD DUP2 PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x37D6 DUP3 DUP7 ADD DUP3 PUSH2 0x34AA JUMP JUMPDEST SWAP2 POP POP PUSH1 0x40 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x37F0 DUP3 DUP3 PUSH2 0x34AA JUMP JUMPDEST SWAP2 POP POP PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xE0 DUP4 ADD MLOAD PUSH2 0x3835 PUSH1 0xE0 DUP7 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH2 0x100 DUP4 DUP2 ADD MLOAD ISZERO ISZERO SWAP1 DUP6 ADD MSTORE PUSH2 0x120 DUP1 DUP5 ADD MLOAD DUP6 DUP4 SUB DUP3 DUP8 ADD MSTORE PUSH2 0x373C DUP4 DUP3 PUSH2 0x34AA JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x347F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x37B6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3880 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x347F DUP3 PUSH2 0x3502 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x80 DUP1 DUP5 ADD MSTORE PUSH2 0x2849 PUSH1 0xA0 DUP5 ADD DUP3 PUSH2 0x34AA JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x38DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x38F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38FF DUP11 DUP4 DUP12 ADD PUSH2 0x36B0 JUMP JUMPDEST SWAP8 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x3915 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3921 DUP11 DUP4 DUP12 ADD PUSH2 0x36B0 JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD SWAP4 POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x394C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3959 DUP10 DUP3 DUP11 ADD PUSH2 0x36B0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3979 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3982 DUP4 PUSH2 0x3502 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x3997 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x39B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x39C1 DUP6 PUSH2 0x3502 JUMP JUMPDEST SWAP4 POP PUSH2 0x39CF PUSH1 0x20 DUP7 ADD PUSH2 0x3502 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x39F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x3A03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3A12 DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x363A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 DUP7 ADD SWAP2 POP PUSH1 0x40 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD SWAP3 POP DUP4 DUP8 ADD PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3A73 JUMPI PUSH1 0x3F NOT DUP9 DUP7 SUB ADD DUP5 MSTORE PUSH2 0x3A61 DUP6 DUP4 MLOAD PUSH2 0x37B6 JUMP JUMPDEST SWAP5 POP SWAP3 DUP6 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3A45 JUMP JUMPDEST POP SWAP3 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3A93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3A9C DUP4 PUSH2 0x3502 JUMP JUMPDEST SWAP2 POP PUSH2 0x3769 PUSH1 0x20 DUP5 ADD PUSH2 0x3502 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x3ABE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2271 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xFF6 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x3B05 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3B24 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x3B11 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3B46 JUMPI PUSH2 0x3B46 PUSH2 0x3624 JUMP JUMPDEST PUSH2 0x3B5A DUP2 PUSH2 0x3B54 DUP5 SLOAD PUSH2 0x3AAA JUMP JUMPDEST DUP5 PUSH2 0x3ADE JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x3B8F JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x3B77 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x3B24 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3BBE JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x3B9F JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x3BDC JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x3C2A JUMPI PUSH2 0x3C2A PUSH2 0x3C02 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x84D JUMPI PUSH2 0x84D PUSH2 0x3C02 JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x3C57 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x34AA JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE POP PUSH1 0x40 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x84D JUMPI PUSH2 0x84D PUSH2 0x3C02 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH2 0x3C8E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3486 JUMP JUMPDEST SWAP3 SWAP1 SWAP3 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH7 0x697066733A2F2F PUSH1 0xC8 SHL DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x3CBA DUP2 PUSH1 0x7 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x3486 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0x7 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7B PUSH1 0xF8 SHL DUP2 MSTORE PUSH8 0x113730B6B2911D11 PUSH1 0xC1 SHL PUSH1 0x1 DUP3 ADD MSTORE DUP5 MLOAD PUSH1 0x0 SWAP1 PUSH2 0x3CF5 DUP2 PUSH1 0x9 DUP6 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x3486 JUMP JUMPDEST PUSH2 0x2023 PUSH1 0xF0 SHL PUSH1 0x9 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP6 MLOAD PUSH2 0x3D17 DUP2 PUSH1 0xB DUP5 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x3486 JUMP JUMPDEST PUSH2 0x88B PUSH1 0xF2 SHL PUSH1 0xB SWAP3 SWAP1 SWAP2 ADD SWAP2 DUP3 ADD DUP2 SWAP1 MSTORE PUSH15 0x113232B9B1B934B83A34B7B7111D11 PUSH1 0x89 SHL PUSH1 0xD DUP4 ADD MSTORE DUP6 MLOAD PUSH2 0x3D54 DUP2 PUSH1 0x1C DUP6 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x3486 JUMP JUMPDEST PUSH1 0x1C SWAP3 ADD SWAP2 DUP3 ADD MSTORE PUSH16 0x22696D616765223A22697066733A2F2F PUSH1 0x80 SHL PUSH1 0x1E DUP3 ADD MSTORE PUSH2 0x3DA2 PUSH2 0x3D95 PUSH2 0x3D88 PUSH1 0x2E DUP5 ADD DUP8 PUSH2 0x3C7C JUMP JUMPDEST PUSH1 0x11 PUSH1 0xF9 SHL DUP2 MSTORE PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x7D PUSH1 0xF8 SHL DUP2 MSTORE PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x646174613A6170706C69636174696F6E2F6A736F6E3B6261736536342C000000 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x3DE5 DUP2 PUSH1 0x1D DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x3486 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0x1D ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x373C SWAP1 DUP4 ADD DUP5 PUSH2 0x34AA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3E37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x347F DUP2 PUSH2 0x344C JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3E5F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x84D JUMPI PUSH2 0x84D PUSH2 0x3C02 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID COINBASE TIMESTAMP NUMBER PREVRANDAO GASLIMIT CHAINID SELFBALANCE BASEFEE 0x49 0x4A 0x4B 0x4C 0x4D 0x4E 0x4F POP MLOAD MSTORE MSTORE8 SLOAD SSTORE JUMP JUMPI PC MSIZE GAS PUSH2 0x6263 PUSH5 0x6566676869 PUSH11 0x6B6C6D6E6F707172737475 PUSH23 0x7778797A303132333435363738392B2FA2646970667358 0x22 SLT KECCAK256 0x24 0xAE 0xD8 0xDC SWAP12 PUSH20 0x883B97747AD84B4D9DF09649FBCDCFF59D41EF98 0xCE 0xB1 0xF7 ADDMOD 0xDD 0xC1 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"538:12896:16:-:0;;;2113:70;;;;;;;;;;2169:10;1381:113:2;;;;;;;;;;;;;-1:-1:-1;;;1381:113:2;;;;;;;;;;;;;;;;-1:-1:-1;;;1381:113:2;;;1455:5;1447;:13;;;;;;:::i;:::-;-1:-1:-1;1470:7:2;:17;1480:7;1470;:17;:::i;:::-;-1:-1:-1;;;;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;2881:51:18;2854:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;1713:1:10;1917:7;:21;538:12896:16;;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;14:127:18:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:18;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:18;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:18;;;2580:26;2531:89;-1:-1:-1;;1335:1:18;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:18;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:18;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:18;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:18:o;2735:203::-;538:12896:16;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_addTokenToAllTokensEnumeration_1678":{"entryPoint":null,"id":1678,"parameterSlots":1,"returnSlots":0},"@_addTokenToOwnerEnumeration_1658":{"entryPoint":12914,"id":1658,"parameterSlots":2,"returnSlots":0},"@_approve_1096":{"entryPoint":10179,"id":1096,"parameterSlots":3,"returnSlots":0},"@_approve_1162":{"entryPoint":11639,"id":1162,"parameterSlots":4,"returnSlots":0},"@_checkAuthorized_744":{"entryPoint":13095,"id":744,"parameterSlots":3,"returnSlots":0},"@_checkOnERC721Received_1292":{"entryPoint":10843,"id":1292,"parameterSlots":4,"returnSlots":0},"@_checkOwner_84":{"entryPoint":10565,"id":84,"parameterSlots":0,"returnSlots":0},"@_getApproved_671":{"entryPoint":null,"id":671,"parameterSlots":1,"returnSlots":1},"@_isAuthorized_707":{"entryPoint":13195,"id":707,"parameterSlots":3,"returnSlots":1},"@_mint_900":{"entryPoint":12994,"id":900,"parameterSlots":2,"returnSlots":0},"@_msgSender_1931":{"entryPoint":null,"id":1931,"parameterSlots":0,"returnSlots":1},"@_nonReentrantAfter_2006":{"entryPoint":null,"id":2006,"parameterSlots":0,"returnSlots":0},"@_nonReentrantBefore_1998":{"entryPoint":10321,"id":1998,"parameterSlots":0,"returnSlots":0},"@_ownerOf_658":{"entryPoint":null,"id":658,"parameterSlots":1,"returnSlots":1},"@_removeTokenFromAllTokensEnumeration_1786":{"entryPoint":12739,"id":1786,"parameterSlots":1,"returnSlots":0},"@_removeTokenFromOwnerEnumeration_1738":{"entryPoint":12594,"id":1738,"parameterSlots":2,"returnSlots":0},"@_requireOwned_1228":{"entryPoint":10122,"id":1228,"parameterSlots":1,"returnSlots":1},"@_safeMint_915":{"entryPoint":10539,"id":915,"parameterSlots":2,"returnSlots":0},"@_safeMint_941":{"entryPoint":12106,"id":941,"parameterSlots":3,"returnSlots":0},"@_setApprovalForAll_1199":{"entryPoint":10692,"id":1199,"parameterSlots":3,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":10610,"id":146,"parameterSlots":1,"returnSlots":0},"@_transfer_1034":{"entryPoint":10363,"id":1034,"parameterSlots":3,"returnSlots":0},"@_update_1627":{"entryPoint":11901,"id":1627,"parameterSlots":3,"returnSlots":1},"@_update_4561":{"entryPoint":10192,"id":4561,"parameterSlots":3,"returnSlots":1},"@_update_850":{"entryPoint":12345,"id":850,"parameterSlots":3,"returnSlots":1},"@approve_505":{"entryPoint":2318,"id":505,"parameterSlots":2,"returnSlots":0},"@balanceOf_413":{"entryPoint":6828,"id":413,"parameterSlots":1,"returnSlots":1},"@buyListedTicket_3991":{"entryPoint":4207,"id":3991,"parameterSlots":1,"returnSlots":0},"@buyTicket_3813":{"entryPoint":5472,"id":3813,"parameterSlots":1,"returnSlots":1},"@cancelListing_4032":{"entryPoint":3086,"id":4032,"parameterSlots":1,"returnSlots":0},"@createEvent_3691":{"entryPoint":7296,"id":3691,"parameterSlots":6,"returnSlots":1},"@deactivateEvent_4519":{"entryPoint":8007,"id":4519,"parameterSlots":1,"returnSlots":0},"@encode_1918":{"entryPoint":11287,"id":1918,"parameterSlots":1,"returnSlots":1},"@eventIdCounter_3485":{"entryPoint":null,"id":3485,"parameterSlots":0,"returnSlots":0},"@events_3531":{"entryPoint":2333,"id":3531,"parameterSlots":0,"returnSlots":0},"@getActiveListings_4196":{"entryPoint":7039,"id":4196,"parameterSlots":0,"returnSlots":1},"@getAllEvents_4119":{"entryPoint":8094,"id":4119,"parameterSlots":0,"returnSlots":1},"@getApproved_522":{"entryPoint":2277,"id":522,"parameterSlots":1,"returnSlots":1},"@getEvent_4046":{"entryPoint":6253,"id":4046,"parameterSlots":1,"returnSlots":1},"@getMarketplaceListing_4074":{"entryPoint":null,"id":4074,"parameterSlots":1,"returnSlots":1},"@getTicket_4060":{"entryPoint":6920,"id":4060,"parameterSlots":1,"returnSlots":1},"@getTicketsByEventAndOwner_4297":{"entryPoint":5107,"id":4297,"parameterSlots":2,"returnSlots":1},"@isApprovedForAll_555":{"entryPoint":9937,"id":555,"parameterSlots":2,"returnSlots":1},"@listTicket_3884":{"entryPoint":3322,"id":3884,"parameterSlots":2,"returnSlots":0},"@log10_3183":{"entryPoint":12129,"id":3183,"parameterSlots":1,"returnSlots":1},"@marketplaceListings_3541":{"entryPoint":null,"id":3541,"parameterSlots":0,"returnSlots":0},"@name_435":{"entryPoint":2131,"id":435,"parameterSlots":0,"returnSlots":1},"@ownerOf_426":{"entryPoint":5096,"id":426,"parameterSlots":1,"returnSlots":1},"@owner_67":{"entryPoint":null,"id":67,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":6900,"id":98,"parameterSlots":0,"returnSlots":0},"@safeTransferFrom_619":{"entryPoint":4091,"id":619,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_645":{"entryPoint":8071,"id":645,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_538":{"entryPoint":8060,"id":538,"parameterSlots":2,"returnSlots":0},"@supportsInterface_1492":{"entryPoint":2088,"id":1492,"parameterSlots":1,"returnSlots":1},"@supportsInterface_2296":{"entryPoint":null,"id":2296,"parameterSlots":1,"returnSlots":1},"@supportsInterface_385":{"entryPoint":10042,"id":385,"parameterSlots":1,"returnSlots":1},"@symbol_444":{"entryPoint":8045,"id":444,"parameterSlots":0,"returnSlots":1},"@ticketIdCounter_3487":{"entryPoint":null,"id":3487,"parameterSlots":0,"returnSlots":0},"@ticketToEvent_3545":{"entryPoint":null,"id":3545,"parameterSlots":0,"returnSlots":0},"@tickets_3536":{"entryPoint":4917,"id":3536,"parameterSlots":0,"returnSlots":0},"@toString_2086":{"entryPoint":11140,"id":2086,"parameterSlots":1,"returnSlots":1},"@tokenByIndex_1558":{"entryPoint":4118,"id":1558,"parameterSlots":1,"returnSlots":1},"@tokenOfOwnerByIndex_1521":{"entryPoint":2985,"id":1521,"parameterSlots":2,"returnSlots":1},"@tokenURI_4426":{"entryPoint":8823,"id":4426,"parameterSlots":1,"returnSlots":1},"@totalSupply_1531":{"entryPoint":null,"id":1531,"parameterSlots":0,"returnSlots":1},"@transferFrom_601":{"entryPoint":2841,"id":601,"parameterSlots":3,"returnSlots":0},"@transferOwnership_126":{"entryPoint":9983,"id":126,"parameterSlots":1,"returnSlots":0},"@updateTicketMetadata_4334":{"entryPoint":3886,"id":4334,"parameterSlots":2,"returnSlots":0},"abi_decode_address":{"entryPoint":13570,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_available_length_string":{"entryPoint":13882,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_string":{"entryPoint":14000,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":14446,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":14976,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":13766,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":14754,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":14694,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":13593,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":13410,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":15909,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_uint256t_uint256t_string_memory_ptr":{"entryPoint":14530,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_tuple_t_uint256":{"entryPoint":13545,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_address":{"entryPoint":14150,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_string_memory_ptr":{"entryPoint":14032,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_uint256":{"entryPoint":13826,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_string":{"entryPoint":15484,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_memory_ptr":{"entryPoint":13482,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_stringliteral_6e9f":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_8e2f":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_struct_Event":{"entryPoint":14262,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_66f0790b1cbe0dcac007f07341b00cafe2bda254914729058b5209e04b702afe_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":15512,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52_t_stringliteral_51367d69f1c3baff467b722249990cf2b0f92b1e50edd5a778b81ffc7191408f_t_string_memory_ptr_t_stringliteral_21af77cd140717e5867fa5acefcf2fc51f566448915c6d7fd3ac9763b6517a12_t_string_memory_ptr_t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb_t_stringliteral_1f63d9db42efe217d85281c4ef6267f200cbdd8e8d6fd9a3e9d557ed86a373c7_t_string_memory_ptr_t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb_t_stringliteral_1142d87ae89da2e55c57bf6d4d08b8c1cbd98506048166b2165a9963aa8d182d_t_string_memory_ptr_t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0_t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":15559,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":15789,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":15858,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_array$_t_struct$_Event_$3508_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Event_$3508_memory_ptr_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":14878,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":14194,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13526,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_uint256_t_uint256__to_t_string_memory_ptr_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":15428,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_stringliteral_16ac10015506b0c304e629c6c319bead672de9b8b106c75571165551966b3f54__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_29d99e722b1d2b1a4b7548f1dffcb76273ed4117a40f2a30f6e67c7f4c652abc__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3ae7fb330a68ad5753c7017d183456b1108414fdee1f867a00433bcf83d8d2d2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_55ea8240bcdf2c6dc48f419582466fcc0c70b98f7bab9452e47ab9da674d6c3a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_58a81b18967fed51eae4113433412e57ba96309b406034f0f5f9e638a23873d0__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_59af62c861bea9965436e11fa79e23e8590850e875c82ec47c5884384b8b64f9__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_70a6648aa72a1e7168c40902f40c67b1d1a9aad6f898271bd268101fd953f64f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8a9d86df5a17d2e64d94c92a00571bc62c4a629d78187aab72e5203bed12c690__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8d1b93b434e468e73514a2449ae955e822f73dcdf924bb4553be247ebca8755e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8f4f697d6c164424211cc99cb1342d12a336bfb3f142f43476735983dee472b0__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_adeff6f69037e9fb0ef79570477b6867fb6b68d030e2356ab44708f4e12ed2fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b8444a3075f560e820cb6544081238af96f12c1ede1ac53a5afa99682837bcbc__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b9bd71c9f98033f096609c9be16498005116bad6be9c7d3e736232f6b582510f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_bbe9577aa005ed6b6dbddd783648cb01e4144ad5f71e747d0368acc55164e1a3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_dbeddb916c17f69da492a95ffd85b3797c1fe215391bc0a7ff8074f0eff7ba7a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e746a83d03b67c14d7fc4864f916d74d5f0a0ad1594fc5ca3dce5170f9d1643c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f1b4f6f21c9e48a1f15e98eb1404e2b4fac5ff853156638ada62cfc3592c075b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f2db45e8d011e37568f18ada882d7ed451c6dc93308049f733d650ae58859621__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f496d2a6b8c6dfd2fdeb51133639f7cbcc6985234f7207231dd11f4a16998dde__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_Event_$3508_memory_ptr__to_t_struct$_Event_$3508_memory_ptr__fromStack_reversed":{"entryPoint":14427,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_struct$_MarketplaceListing_$3526_memory_ptr__to_t_struct$_MarketplaceListing_$3526_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_struct$_Ticket_$3517_memory_ptr__to_t_struct$_Ticket_$3517_memory_ptr__fromStack_reversed":{"entryPoint":14473,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_address_t_uint256_t_bool__to_t_uint256_t_address_t_uint256_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_uint256_t_address_t_bool_t_string_memory_ptr__to_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_uint256_t_address_t_bool_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13635,"id":null,"parameterSlots":11,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_string_memory_ptr__to_t_uint256_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14103,"id":null,"parameterSlots":5,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":15409,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":15938,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":15972,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":15465,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":15070,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":15148,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":13446,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":15018,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"increment_t_uint256":{"entryPoint":15384,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":15362,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":15995,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":15340,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":13860,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_bytes4":{"entryPoint":13388,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:29516:18","statements":[{"nodeType":"YulBlock","src":"6:3:18","statements":[]},{"body":{"nodeType":"YulBlock","src":"58:87:18","statements":[{"body":{"nodeType":"YulBlock","src":"123:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"132:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"135:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"125:6:18"},"nodeType":"YulFunctionCall","src":"125:12:18"},"nodeType":"YulExpressionStatement","src":"125:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"81:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"92:5:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"108:10:18","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"99:3:18"},"nodeType":"YulFunctionCall","src":"99:20:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"88:3:18"},"nodeType":"YulFunctionCall","src":"88:32:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"78:2:18"},"nodeType":"YulFunctionCall","src":"78:43:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"71:6:18"},"nodeType":"YulFunctionCall","src":"71:51:18"},"nodeType":"YulIf","src":"68:71:18"}]},"name":"validator_revert_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"47:5:18","type":""}],"src":"14:131:18"},{"body":{"nodeType":"YulBlock","src":"219:176:18","statements":[{"body":{"nodeType":"YulBlock","src":"265:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"274:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"277:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"267:6:18"},"nodeType":"YulFunctionCall","src":"267:12:18"},"nodeType":"YulExpressionStatement","src":"267:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"240:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"249:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"236:3:18"},"nodeType":"YulFunctionCall","src":"236:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"261:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"232:3:18"},"nodeType":"YulFunctionCall","src":"232:32:18"},"nodeType":"YulIf","src":"229:52:18"},{"nodeType":"YulVariableDeclaration","src":"290:36:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"316:9:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"303:12:18"},"nodeType":"YulFunctionCall","src":"303:23:18"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"294:5:18","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"359:5:18"}],"functionName":{"name":"validator_revert_bytes4","nodeType":"YulIdentifier","src":"335:23:18"},"nodeType":"YulFunctionCall","src":"335:30:18"},"nodeType":"YulExpressionStatement","src":"335:30:18"},{"nodeType":"YulAssignment","src":"374:15:18","value":{"name":"value","nodeType":"YulIdentifier","src":"384:5:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"374:6:18"}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"185:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"196:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"208:6:18","type":""}],"src":"150:245:18"},{"body":{"nodeType":"YulBlock","src":"441:50:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"458:3:18"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"477:5:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"470:6:18"},"nodeType":"YulFunctionCall","src":"470:13:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"463:6:18"},"nodeType":"YulFunctionCall","src":"463:21:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"451:6:18"},"nodeType":"YulFunctionCall","src":"451:34:18"},"nodeType":"YulExpressionStatement","src":"451:34:18"}]},"name":"abi_encode_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"425:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"432:3:18","type":""}],"src":"400:91:18"},{"body":{"nodeType":"YulBlock","src":"591:92:18","statements":[{"nodeType":"YulAssignment","src":"601:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"613:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"624:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"609:3:18"},"nodeType":"YulFunctionCall","src":"609:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"601:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"643:9:18"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"668:6:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"661:6:18"},"nodeType":"YulFunctionCall","src":"661:14:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"654:6:18"},"nodeType":"YulFunctionCall","src":"654:22:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"636:6:18"},"nodeType":"YulFunctionCall","src":"636:41:18"},"nodeType":"YulExpressionStatement","src":"636:41:18"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"560:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"571:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"582:4:18","type":""}],"src":"496:187:18"},{"body":{"nodeType":"YulBlock","src":"754:184:18","statements":[{"nodeType":"YulVariableDeclaration","src":"764:10:18","value":{"kind":"number","nodeType":"YulLiteral","src":"773:1:18","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"768:1:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"833:63:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"858:3:18"},{"name":"i","nodeType":"YulIdentifier","src":"863:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"854:3:18"},"nodeType":"YulFunctionCall","src":"854:11:18"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"877:3:18"},{"name":"i","nodeType":"YulIdentifier","src":"882:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"873:3:18"},"nodeType":"YulFunctionCall","src":"873:11:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"867:5:18"},"nodeType":"YulFunctionCall","src":"867:18:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"847:6:18"},"nodeType":"YulFunctionCall","src":"847:39:18"},"nodeType":"YulExpressionStatement","src":"847:39:18"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"794:1:18"},{"name":"length","nodeType":"YulIdentifier","src":"797:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"791:2:18"},"nodeType":"YulFunctionCall","src":"791:13:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"805:19:18","statements":[{"nodeType":"YulAssignment","src":"807:15:18","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"816:1:18"},{"kind":"number","nodeType":"YulLiteral","src":"819:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"812:3:18"},"nodeType":"YulFunctionCall","src":"812:10:18"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"807:1:18"}]}]},"pre":{"nodeType":"YulBlock","src":"787:3:18","statements":[]},"src":"783:113:18"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"916:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"921:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"912:3:18"},"nodeType":"YulFunctionCall","src":"912:16:18"},{"kind":"number","nodeType":"YulLiteral","src":"930:1:18","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"905:6:18"},"nodeType":"YulFunctionCall","src":"905:27:18"},"nodeType":"YulExpressionStatement","src":"905:27:18"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"732:3:18","type":""},{"name":"dst","nodeType":"YulTypedName","src":"737:3:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"742:6:18","type":""}],"src":"688:250:18"},{"body":{"nodeType":"YulBlock","src":"1004:221:18","statements":[{"nodeType":"YulVariableDeclaration","src":"1014:26:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1034:5:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1028:5:18"},"nodeType":"YulFunctionCall","src":"1028:12:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1018:6:18","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1056:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"1061:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1049:6:18"},"nodeType":"YulFunctionCall","src":"1049:19:18"},"nodeType":"YulExpressionStatement","src":"1049:19:18"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1116:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"1123:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1112:3:18"},"nodeType":"YulFunctionCall","src":"1112:16:18"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1134:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"1139:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1130:3:18"},"nodeType":"YulFunctionCall","src":"1130:14:18"},{"name":"length","nodeType":"YulIdentifier","src":"1146:6:18"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"1077:34:18"},"nodeType":"YulFunctionCall","src":"1077:76:18"},"nodeType":"YulExpressionStatement","src":"1077:76:18"},{"nodeType":"YulAssignment","src":"1162:57:18","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1177:3:18"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1190:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"1198:2:18","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1186:3:18"},"nodeType":"YulFunctionCall","src":"1186:15:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1207:2:18","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1203:3:18"},"nodeType":"YulFunctionCall","src":"1203:7:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1182:3:18"},"nodeType":"YulFunctionCall","src":"1182:29:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1173:3:18"},"nodeType":"YulFunctionCall","src":"1173:39:18"},{"kind":"number","nodeType":"YulLiteral","src":"1214:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1169:3:18"},"nodeType":"YulFunctionCall","src":"1169:50:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1162:3:18"}]}]},"name":"abi_encode_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"981:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"988:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"996:3:18","type":""}],"src":"943:282:18"},{"body":{"nodeType":"YulBlock","src":"1351:110:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1368:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1379:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1361:6:18"},"nodeType":"YulFunctionCall","src":"1361:21:18"},"nodeType":"YulExpressionStatement","src":"1361:21:18"},{"nodeType":"YulAssignment","src":"1391:64:18","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1428:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1440:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1451:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1436:3:18"},"nodeType":"YulFunctionCall","src":"1436:18:18"}],"functionName":{"name":"abi_encode_string_memory_ptr","nodeType":"YulIdentifier","src":"1399:28:18"},"nodeType":"YulFunctionCall","src":"1399:56:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1391:4:18"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1320:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1331:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1342:4:18","type":""}],"src":"1230:231:18"},{"body":{"nodeType":"YulBlock","src":"1536:110:18","statements":[{"body":{"nodeType":"YulBlock","src":"1582:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1591:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1594:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1584:6:18"},"nodeType":"YulFunctionCall","src":"1584:12:18"},"nodeType":"YulExpressionStatement","src":"1584:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1557:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"1566:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1553:3:18"},"nodeType":"YulFunctionCall","src":"1553:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"1578:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1549:3:18"},"nodeType":"YulFunctionCall","src":"1549:32:18"},"nodeType":"YulIf","src":"1546:52:18"},{"nodeType":"YulAssignment","src":"1607:33:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1630:9:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1617:12:18"},"nodeType":"YulFunctionCall","src":"1617:23:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1607:6:18"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1502:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1513:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1525:6:18","type":""}],"src":"1466:180:18"},{"body":{"nodeType":"YulBlock","src":"1695:60:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1712:3:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1721:5:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1736:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1741:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1732:3:18"},"nodeType":"YulFunctionCall","src":"1732:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"1745:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1728:3:18"},"nodeType":"YulFunctionCall","src":"1728:19:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1717:3:18"},"nodeType":"YulFunctionCall","src":"1717:31:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1705:6:18"},"nodeType":"YulFunctionCall","src":"1705:44:18"},"nodeType":"YulExpressionStatement","src":"1705:44:18"}]},"name":"abi_encode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1679:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1686:3:18","type":""}],"src":"1651:104:18"},{"body":{"nodeType":"YulBlock","src":"1861:102:18","statements":[{"nodeType":"YulAssignment","src":"1871:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1883:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1894:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1879:3:18"},"nodeType":"YulFunctionCall","src":"1879:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1871:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1913:9:18"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1928:6:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1944:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1949:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1940:3:18"},"nodeType":"YulFunctionCall","src":"1940:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"1953:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1936:3:18"},"nodeType":"YulFunctionCall","src":"1936:19:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1924:3:18"},"nodeType":"YulFunctionCall","src":"1924:32:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1906:6:18"},"nodeType":"YulFunctionCall","src":"1906:51:18"},"nodeType":"YulExpressionStatement","src":"1906:51:18"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1830:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1841:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1852:4:18","type":""}],"src":"1760:203:18"},{"body":{"nodeType":"YulBlock","src":"2017:124:18","statements":[{"nodeType":"YulAssignment","src":"2027:29:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2049:6:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2036:12:18"},"nodeType":"YulFunctionCall","src":"2036:20:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2027:5:18"}]},{"body":{"nodeType":"YulBlock","src":"2119:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2128:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2131:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2121:6:18"},"nodeType":"YulFunctionCall","src":"2121:12:18"},"nodeType":"YulExpressionStatement","src":"2121:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2078:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2089:5:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2104:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2109:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2100:3:18"},"nodeType":"YulFunctionCall","src":"2100:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"2113:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2096:3:18"},"nodeType":"YulFunctionCall","src":"2096:19:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2085:3:18"},"nodeType":"YulFunctionCall","src":"2085:31:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2075:2:18"},"nodeType":"YulFunctionCall","src":"2075:42:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2068:6:18"},"nodeType":"YulFunctionCall","src":"2068:50:18"},"nodeType":"YulIf","src":"2065:70:18"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1996:6:18","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2007:5:18","type":""}],"src":"1968:173:18"},{"body":{"nodeType":"YulBlock","src":"2233:167:18","statements":[{"body":{"nodeType":"YulBlock","src":"2279:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2288:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2291:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2281:6:18"},"nodeType":"YulFunctionCall","src":"2281:12:18"},"nodeType":"YulExpressionStatement","src":"2281:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2254:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"2263:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2250:3:18"},"nodeType":"YulFunctionCall","src":"2250:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"2275:2:18","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2246:3:18"},"nodeType":"YulFunctionCall","src":"2246:32:18"},"nodeType":"YulIf","src":"2243:52:18"},{"nodeType":"YulAssignment","src":"2304:39:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2333:9:18"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2314:18:18"},"nodeType":"YulFunctionCall","src":"2314:29:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2304:6:18"}]},{"nodeType":"YulAssignment","src":"2352:42:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2379:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"2390:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2375:3:18"},"nodeType":"YulFunctionCall","src":"2375:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2362:12:18"},"nodeType":"YulFunctionCall","src":"2362:32:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2352:6:18"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2191:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2202:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2214:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2222:6:18","type":""}],"src":"2146:254:18"},{"body":{"nodeType":"YulBlock","src":"2812:733:18","statements":[{"nodeType":"YulVariableDeclaration","src":"2822:13:18","value":{"kind":"number","nodeType":"YulLiteral","src":"2832:3:18","type":"","value":"320"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2826:2:18","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2851:9:18"},{"name":"value0","nodeType":"YulIdentifier","src":"2862:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2844:6:18"},"nodeType":"YulFunctionCall","src":"2844:25:18"},"nodeType":"YulExpressionStatement","src":"2844:25:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2889:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"2900:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2885:3:18"},"nodeType":"YulFunctionCall","src":"2885:18:18"},{"name":"_1","nodeType":"YulIdentifier","src":"2905:2:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2878:6:18"},"nodeType":"YulFunctionCall","src":"2878:30:18"},"nodeType":"YulExpressionStatement","src":"2878:30:18"},{"nodeType":"YulVariableDeclaration","src":"2917:70:18","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"2960:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2972:9:18"},{"name":"_1","nodeType":"YulIdentifier","src":"2983:2:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2968:3:18"},"nodeType":"YulFunctionCall","src":"2968:18:18"}],"functionName":{"name":"abi_encode_string_memory_ptr","nodeType":"YulIdentifier","src":"2931:28:18"},"nodeType":"YulFunctionCall","src":"2931:56:18"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"2921:6:18","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3007:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3018:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3003:3:18"},"nodeType":"YulFunctionCall","src":"3003:18:18"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"3027:6:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"3035:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3023:3:18"},"nodeType":"YulFunctionCall","src":"3023:22:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2996:6:18"},"nodeType":"YulFunctionCall","src":"2996:50:18"},"nodeType":"YulExpressionStatement","src":"2996:50:18"},{"nodeType":"YulVariableDeclaration","src":"3055:58:18","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"3098:6:18"},{"name":"tail_1","nodeType":"YulIdentifier","src":"3106:6:18"}],"functionName":{"name":"abi_encode_string_memory_ptr","nodeType":"YulIdentifier","src":"3069:28:18"},"nodeType":"YulFunctionCall","src":"3069:44:18"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"3059:6:18","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3133:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3144:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3129:3:18"},"nodeType":"YulFunctionCall","src":"3129:18:18"},{"name":"value3","nodeType":"YulIdentifier","src":"3149:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3122:6:18"},"nodeType":"YulFunctionCall","src":"3122:34:18"},"nodeType":"YulExpressionStatement","src":"3122:34:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3176:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3187:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3172:3:18"},"nodeType":"YulFunctionCall","src":"3172:19:18"},{"name":"value4","nodeType":"YulIdentifier","src":"3193:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3165:6:18"},"nodeType":"YulFunctionCall","src":"3165:35:18"},"nodeType":"YulExpressionStatement","src":"3165:35:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3220:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3231:3:18","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3216:3:18"},"nodeType":"YulFunctionCall","src":"3216:19:18"},{"name":"value5","nodeType":"YulIdentifier","src":"3237:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3209:6:18"},"nodeType":"YulFunctionCall","src":"3209:35:18"},"nodeType":"YulExpressionStatement","src":"3209:35:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3264:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3275:3:18","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3260:3:18"},"nodeType":"YulFunctionCall","src":"3260:19:18"},{"name":"value6","nodeType":"YulIdentifier","src":"3281:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3253:6:18"},"nodeType":"YulFunctionCall","src":"3253:35:18"},"nodeType":"YulExpressionStatement","src":"3253:35:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3308:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3319:3:18","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3304:3:18"},"nodeType":"YulFunctionCall","src":"3304:19:18"},{"arguments":[{"name":"value7","nodeType":"YulIdentifier","src":"3329:6:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3345:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3350:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3341:3:18"},"nodeType":"YulFunctionCall","src":"3341:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"3354:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3337:3:18"},"nodeType":"YulFunctionCall","src":"3337:19:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3325:3:18"},"nodeType":"YulFunctionCall","src":"3325:32:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3297:6:18"},"nodeType":"YulFunctionCall","src":"3297:61:18"},"nodeType":"YulExpressionStatement","src":"3297:61:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3378:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3389:3:18","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3374:3:18"},"nodeType":"YulFunctionCall","src":"3374:19:18"},{"arguments":[{"arguments":[{"name":"value8","nodeType":"YulIdentifier","src":"3409:6:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3402:6:18"},"nodeType":"YulFunctionCall","src":"3402:14:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3395:6:18"},"nodeType":"YulFunctionCall","src":"3395:22:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3367:6:18"},"nodeType":"YulFunctionCall","src":"3367:51:18"},"nodeType":"YulExpressionStatement","src":"3367:51:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3438:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3449:3:18","type":"","value":"288"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3434:3:18"},"nodeType":"YulFunctionCall","src":"3434:19:18"},{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"3459:6:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"3467:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3455:3:18"},"nodeType":"YulFunctionCall","src":"3455:22:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3427:6:18"},"nodeType":"YulFunctionCall","src":"3427:51:18"},"nodeType":"YulExpressionStatement","src":"3427:51:18"},{"nodeType":"YulAssignment","src":"3487:52:18","value":{"arguments":[{"name":"value9","nodeType":"YulIdentifier","src":"3524:6:18"},{"name":"tail_2","nodeType":"YulIdentifier","src":"3532:6:18"}],"functionName":{"name":"abi_encode_string_memory_ptr","nodeType":"YulIdentifier","src":"3495:28:18"},"nodeType":"YulFunctionCall","src":"3495:44:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3487:4:18"}]}]},"name":"abi_encode_tuple_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_uint256_t_address_t_bool_t_string_memory_ptr__to_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_uint256_t_address_t_bool_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2709:9:18","type":""},{"name":"value9","nodeType":"YulTypedName","src":"2720:6:18","type":""},{"name":"value8","nodeType":"YulTypedName","src":"2728:6:18","type":""},{"name":"value7","nodeType":"YulTypedName","src":"2736:6:18","type":""},{"name":"value6","nodeType":"YulTypedName","src":"2744:6:18","type":""},{"name":"value5","nodeType":"YulTypedName","src":"2752:6:18","type":""},{"name":"value4","nodeType":"YulTypedName","src":"2760:6:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2768:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2776:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2784:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2792:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2803:4:18","type":""}],"src":"2405:1140:18"},{"body":{"nodeType":"YulBlock","src":"3651:76:18","statements":[{"nodeType":"YulAssignment","src":"3661:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3673:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3684:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3669:3:18"},"nodeType":"YulFunctionCall","src":"3669:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3661:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3703:9:18"},{"name":"value0","nodeType":"YulIdentifier","src":"3714:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3696:6:18"},"nodeType":"YulFunctionCall","src":"3696:25:18"},"nodeType":"YulExpressionStatement","src":"3696:25:18"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3620:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3631:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3642:4:18","type":""}],"src":"3550:177:18"},{"body":{"nodeType":"YulBlock","src":"3836:224:18","statements":[{"body":{"nodeType":"YulBlock","src":"3882:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3891:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3894:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3884:6:18"},"nodeType":"YulFunctionCall","src":"3884:12:18"},"nodeType":"YulExpressionStatement","src":"3884:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3857:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"3866:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3853:3:18"},"nodeType":"YulFunctionCall","src":"3853:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"3878:2:18","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3849:3:18"},"nodeType":"YulFunctionCall","src":"3849:32:18"},"nodeType":"YulIf","src":"3846:52:18"},{"nodeType":"YulAssignment","src":"3907:39:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3936:9:18"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3917:18:18"},"nodeType":"YulFunctionCall","src":"3917:29:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3907:6:18"}]},{"nodeType":"YulAssignment","src":"3955:48:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3988:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3999:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3984:3:18"},"nodeType":"YulFunctionCall","src":"3984:18:18"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3965:18:18"},"nodeType":"YulFunctionCall","src":"3965:38:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3955:6:18"}]},{"nodeType":"YulAssignment","src":"4012:42:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4039:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4050:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4035:3:18"},"nodeType":"YulFunctionCall","src":"4035:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4022:12:18"},"nodeType":"YulFunctionCall","src":"4022:32:18"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4012:6:18"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3786:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3797:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3809:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3817:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3825:6:18","type":""}],"src":"3732:328:18"},{"body":{"nodeType":"YulBlock","src":"4152:161:18","statements":[{"body":{"nodeType":"YulBlock","src":"4198:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4207:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4210:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4200:6:18"},"nodeType":"YulFunctionCall","src":"4200:12:18"},"nodeType":"YulExpressionStatement","src":"4200:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4173:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"4182:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4169:3:18"},"nodeType":"YulFunctionCall","src":"4169:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"4194:2:18","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4165:3:18"},"nodeType":"YulFunctionCall","src":"4165:32:18"},"nodeType":"YulIf","src":"4162:52:18"},{"nodeType":"YulAssignment","src":"4223:33:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4246:9:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4233:12:18"},"nodeType":"YulFunctionCall","src":"4233:23:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4223:6:18"}]},{"nodeType":"YulAssignment","src":"4265:42:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4292:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4303:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4288:3:18"},"nodeType":"YulFunctionCall","src":"4288:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4275:12:18"},"nodeType":"YulFunctionCall","src":"4275:32:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4265:6:18"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4110:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4121:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4133:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4141:6:18","type":""}],"src":"4065:248:18"},{"body":{"nodeType":"YulBlock","src":"4350:95:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4367:1:18","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4374:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"4379:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4370:3:18"},"nodeType":"YulFunctionCall","src":"4370:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4360:6:18"},"nodeType":"YulFunctionCall","src":"4360:31:18"},"nodeType":"YulExpressionStatement","src":"4360:31:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4407:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4410:4:18","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4400:6:18"},"nodeType":"YulFunctionCall","src":"4400:15:18"},"nodeType":"YulExpressionStatement","src":"4400:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4431:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4434:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4424:6:18"},"nodeType":"YulFunctionCall","src":"4424:15:18"},"nodeType":"YulExpressionStatement","src":"4424:15:18"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"4318:127:18"},{"body":{"nodeType":"YulBlock","src":"4525:557:18","statements":[{"nodeType":"YulVariableDeclaration","src":"4535:28:18","value":{"kind":"number","nodeType":"YulLiteral","src":"4545:18:18","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4539:2:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"4590:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4592:16:18"},"nodeType":"YulFunctionCall","src":"4592:18:18"},"nodeType":"YulExpressionStatement","src":"4592:18:18"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4578:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"4586:2:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4575:2:18"},"nodeType":"YulFunctionCall","src":"4575:14:18"},"nodeType":"YulIf","src":"4572:40:18"},{"nodeType":"YulVariableDeclaration","src":"4621:17:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4635:2:18","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4631:3:18"},"nodeType":"YulFunctionCall","src":"4631:7:18"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"4625:2:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4647:23:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4667:2:18","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4661:5:18"},"nodeType":"YulFunctionCall","src":"4661:9:18"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"4651:6:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4679:73:18","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4701:6:18"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4725:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"4733:2:18","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4721:3:18"},"nodeType":"YulFunctionCall","src":"4721:15:18"},{"name":"_2","nodeType":"YulIdentifier","src":"4738:2:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4717:3:18"},"nodeType":"YulFunctionCall","src":"4717:24:18"},{"kind":"number","nodeType":"YulLiteral","src":"4743:2:18","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4713:3:18"},"nodeType":"YulFunctionCall","src":"4713:33:18"},{"name":"_2","nodeType":"YulIdentifier","src":"4748:2:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4709:3:18"},"nodeType":"YulFunctionCall","src":"4709:42:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4697:3:18"},"nodeType":"YulFunctionCall","src":"4697:55:18"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"4683:10:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"4811:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4813:16:18"},"nodeType":"YulFunctionCall","src":"4813:18:18"},"nodeType":"YulExpressionStatement","src":"4813:18:18"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4770:10:18"},{"name":"_1","nodeType":"YulIdentifier","src":"4782:2:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4767:2:18"},"nodeType":"YulFunctionCall","src":"4767:18:18"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4790:10:18"},{"name":"memPtr","nodeType":"YulIdentifier","src":"4802:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4787:2:18"},"nodeType":"YulFunctionCall","src":"4787:22:18"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4764:2:18"},"nodeType":"YulFunctionCall","src":"4764:46:18"},"nodeType":"YulIf","src":"4761:72:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4849:2:18","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4853:10:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4842:6:18"},"nodeType":"YulFunctionCall","src":"4842:22:18"},"nodeType":"YulExpressionStatement","src":"4842:22:18"},{"nodeType":"YulAssignment","src":"4873:15:18","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"4882:6:18"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4873:5:18"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4904:6:18"},{"name":"length","nodeType":"YulIdentifier","src":"4912:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4897:6:18"},"nodeType":"YulFunctionCall","src":"4897:22:18"},"nodeType":"YulExpressionStatement","src":"4897:22:18"},{"body":{"nodeType":"YulBlock","src":"4957:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4966:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4969:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4959:6:18"},"nodeType":"YulFunctionCall","src":"4959:12:18"},"nodeType":"YulExpressionStatement","src":"4959:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4938:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"4943:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4934:3:18"},"nodeType":"YulFunctionCall","src":"4934:16:18"},{"name":"end","nodeType":"YulIdentifier","src":"4952:3:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4931:2:18"},"nodeType":"YulFunctionCall","src":"4931:25:18"},"nodeType":"YulIf","src":"4928:45:18"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4999:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"5007:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4995:3:18"},"nodeType":"YulFunctionCall","src":"4995:17:18"},{"name":"src","nodeType":"YulIdentifier","src":"5014:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"5019:6:18"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"4982:12:18"},"nodeType":"YulFunctionCall","src":"4982:44:18"},"nodeType":"YulExpressionStatement","src":"4982:44:18"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5050:6:18"},{"name":"length","nodeType":"YulIdentifier","src":"5058:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5046:3:18"},"nodeType":"YulFunctionCall","src":"5046:19:18"},{"kind":"number","nodeType":"YulLiteral","src":"5067:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5042:3:18"},"nodeType":"YulFunctionCall","src":"5042:30:18"},{"kind":"number","nodeType":"YulLiteral","src":"5074:1:18","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5035:6:18"},"nodeType":"YulFunctionCall","src":"5035:41:18"},"nodeType":"YulExpressionStatement","src":"5035:41:18"}]},"name":"abi_decode_available_length_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"4494:3:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"4499:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"4507:3:18","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"4515:5:18","type":""}],"src":"4450:632:18"},{"body":{"nodeType":"YulBlock","src":"5140:169:18","statements":[{"body":{"nodeType":"YulBlock","src":"5189:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5198:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5201:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5191:6:18"},"nodeType":"YulFunctionCall","src":"5191:12:18"},"nodeType":"YulExpressionStatement","src":"5191:12:18"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5168:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"5176:4:18","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5164:3:18"},"nodeType":"YulFunctionCall","src":"5164:17:18"},{"name":"end","nodeType":"YulIdentifier","src":"5183:3:18"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5160:3:18"},"nodeType":"YulFunctionCall","src":"5160:27:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5153:6:18"},"nodeType":"YulFunctionCall","src":"5153:35:18"},"nodeType":"YulIf","src":"5150:55:18"},{"nodeType":"YulAssignment","src":"5214:89:18","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5262:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"5270:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5258:3:18"},"nodeType":"YulFunctionCall","src":"5258:17:18"},{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5290:6:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5277:12:18"},"nodeType":"YulFunctionCall","src":"5277:20:18"},{"name":"end","nodeType":"YulIdentifier","src":"5299:3:18"}],"functionName":{"name":"abi_decode_available_length_string","nodeType":"YulIdentifier","src":"5223:34:18"},"nodeType":"YulFunctionCall","src":"5223:80:18"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"5214:5:18"}]}]},"name":"abi_decode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5114:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"5122:3:18","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"5130:5:18","type":""}],"src":"5087:222:18"},{"body":{"nodeType":"YulBlock","src":"5411:293:18","statements":[{"body":{"nodeType":"YulBlock","src":"5457:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5466:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5469:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5459:6:18"},"nodeType":"YulFunctionCall","src":"5459:12:18"},"nodeType":"YulExpressionStatement","src":"5459:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5432:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"5441:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5428:3:18"},"nodeType":"YulFunctionCall","src":"5428:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"5453:2:18","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5424:3:18"},"nodeType":"YulFunctionCall","src":"5424:32:18"},"nodeType":"YulIf","src":"5421:52:18"},{"nodeType":"YulAssignment","src":"5482:33:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5505:9:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5492:12:18"},"nodeType":"YulFunctionCall","src":"5492:23:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5482:6:18"}]},{"nodeType":"YulVariableDeclaration","src":"5524:46:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5555:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5566:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5551:3:18"},"nodeType":"YulFunctionCall","src":"5551:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5538:12:18"},"nodeType":"YulFunctionCall","src":"5538:32:18"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5528:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"5613:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5622:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5625:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5615:6:18"},"nodeType":"YulFunctionCall","src":"5615:12:18"},"nodeType":"YulExpressionStatement","src":"5615:12:18"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5585:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"5593:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5582:2:18"},"nodeType":"YulFunctionCall","src":"5582:30:18"},"nodeType":"YulIf","src":"5579:50:18"},{"nodeType":"YulAssignment","src":"5638:60:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5670:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"5681:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5666:3:18"},"nodeType":"YulFunctionCall","src":"5666:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5690:7:18"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"5648:17:18"},"nodeType":"YulFunctionCall","src":"5648:50:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5638:6:18"}]}]},"name":"abi_decode_tuple_t_uint256t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5369:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5380:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5392:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5400:6:18","type":""}],"src":"5314:390:18"},{"body":{"nodeType":"YulBlock","src":"5888:248:18","statements":[{"nodeType":"YulAssignment","src":"5898:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5910:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5921:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5906:3:18"},"nodeType":"YulFunctionCall","src":"5906:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5898:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5941:9:18"},{"name":"value0","nodeType":"YulIdentifier","src":"5952:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5934:6:18"},"nodeType":"YulFunctionCall","src":"5934:25:18"},"nodeType":"YulExpressionStatement","src":"5934:25:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5979:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5990:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5975:3:18"},"nodeType":"YulFunctionCall","src":"5975:18:18"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"5999:6:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6015:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"6020:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6011:3:18"},"nodeType":"YulFunctionCall","src":"6011:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"6024:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6007:3:18"},"nodeType":"YulFunctionCall","src":"6007:19:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5995:3:18"},"nodeType":"YulFunctionCall","src":"5995:32:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5968:6:18"},"nodeType":"YulFunctionCall","src":"5968:60:18"},"nodeType":"YulExpressionStatement","src":"5968:60:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6048:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"6059:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6044:3:18"},"nodeType":"YulFunctionCall","src":"6044:18:18"},{"name":"value2","nodeType":"YulIdentifier","src":"6064:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6037:6:18"},"nodeType":"YulFunctionCall","src":"6037:34:18"},"nodeType":"YulExpressionStatement","src":"6037:34:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6091:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"6102:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6087:3:18"},"nodeType":"YulFunctionCall","src":"6087:18:18"},{"arguments":[{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"6121:6:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6114:6:18"},"nodeType":"YulFunctionCall","src":"6114:14:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6107:6:18"},"nodeType":"YulFunctionCall","src":"6107:22:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6080:6:18"},"nodeType":"YulFunctionCall","src":"6080:50:18"},"nodeType":"YulExpressionStatement","src":"6080:50:18"}]},"name":"abi_encode_tuple_t_uint256_t_address_t_uint256_t_bool__to_t_uint256_t_address_t_uint256_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5833:9:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"5844:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5852:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5860:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5868:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5879:4:18","type":""}],"src":"5709:427:18"},{"body":{"nodeType":"YulBlock","src":"6346:241:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6363:9:18"},{"name":"value0","nodeType":"YulIdentifier","src":"6374:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6356:6:18"},"nodeType":"YulFunctionCall","src":"6356:25:18"},"nodeType":"YulExpressionStatement","src":"6356:25:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6401:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"6412:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6397:3:18"},"nodeType":"YulFunctionCall","src":"6397:18:18"},{"name":"value1","nodeType":"YulIdentifier","src":"6417:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6390:6:18"},"nodeType":"YulFunctionCall","src":"6390:34:18"},"nodeType":"YulExpressionStatement","src":"6390:34:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6444:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"6455:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6440:3:18"},"nodeType":"YulFunctionCall","src":"6440:18:18"},{"name":"value2","nodeType":"YulIdentifier","src":"6460:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6433:6:18"},"nodeType":"YulFunctionCall","src":"6433:34:18"},"nodeType":"YulExpressionStatement","src":"6433:34:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6487:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"6498:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6483:3:18"},"nodeType":"YulFunctionCall","src":"6483:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"6503:3:18","type":"","value":"128"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6476:6:18"},"nodeType":"YulFunctionCall","src":"6476:31:18"},"nodeType":"YulExpressionStatement","src":"6476:31:18"},{"nodeType":"YulAssignment","src":"6516:65:18","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"6553:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6565:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"6576:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6561:3:18"},"nodeType":"YulFunctionCall","src":"6561:19:18"}],"functionName":{"name":"abi_encode_string_memory_ptr","nodeType":"YulIdentifier","src":"6524:28:18"},"nodeType":"YulFunctionCall","src":"6524:57:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6516:4:18"}]}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_string_memory_ptr__to_t_uint256_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6291:9:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6302:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6310:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6318:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6326:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6337:4:18","type":""}],"src":"6141:446:18"},{"body":{"nodeType":"YulBlock","src":"6679:167:18","statements":[{"body":{"nodeType":"YulBlock","src":"6725:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6734:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6737:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6727:6:18"},"nodeType":"YulFunctionCall","src":"6727:12:18"},"nodeType":"YulExpressionStatement","src":"6727:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6700:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"6709:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6696:3:18"},"nodeType":"YulFunctionCall","src":"6696:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"6721:2:18","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6692:3:18"},"nodeType":"YulFunctionCall","src":"6692:32:18"},"nodeType":"YulIf","src":"6689:52:18"},{"nodeType":"YulAssignment","src":"6750:33:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6773:9:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6760:12:18"},"nodeType":"YulFunctionCall","src":"6760:23:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6750:6:18"}]},{"nodeType":"YulAssignment","src":"6792:48:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6825:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"6836:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6821:3:18"},"nodeType":"YulFunctionCall","src":"6821:18:18"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"6802:18:18"},"nodeType":"YulFunctionCall","src":"6802:38:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6792:6:18"}]}]},"name":"abi_decode_tuple_t_uint256t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6637:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6648:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6660:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6668:6:18","type":""}],"src":"6592:254:18"},{"body":{"nodeType":"YulBlock","src":"7002:481:18","statements":[{"nodeType":"YulVariableDeclaration","src":"7012:12:18","value":{"kind":"number","nodeType":"YulLiteral","src":"7022:2:18","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"7016:2:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7033:32:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7051:9:18"},{"name":"_1","nodeType":"YulIdentifier","src":"7062:2:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7047:3:18"},"nodeType":"YulFunctionCall","src":"7047:18:18"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"7037:6:18","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7081:9:18"},{"name":"_1","nodeType":"YulIdentifier","src":"7092:2:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7074:6:18"},"nodeType":"YulFunctionCall","src":"7074:21:18"},"nodeType":"YulExpressionStatement","src":"7074:21:18"},{"nodeType":"YulVariableDeclaration","src":"7104:17:18","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"7115:6:18"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"7108:3:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7130:27:18","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7150:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7144:5:18"},"nodeType":"YulFunctionCall","src":"7144:13:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7134:6:18","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"7173:6:18"},{"name":"length","nodeType":"YulIdentifier","src":"7181:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7166:6:18"},"nodeType":"YulFunctionCall","src":"7166:22:18"},"nodeType":"YulExpressionStatement","src":"7166:22:18"},{"nodeType":"YulAssignment","src":"7197:25:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7208:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"7219:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7204:3:18"},"nodeType":"YulFunctionCall","src":"7204:18:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7197:3:18"}]},{"nodeType":"YulVariableDeclaration","src":"7231:29:18","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7249:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"7257:2:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7245:3:18"},"nodeType":"YulFunctionCall","src":"7245:15:18"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"7235:6:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7269:10:18","value":{"kind":"number","nodeType":"YulLiteral","src":"7278:1:18","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"7273:1:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"7337:120:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7358:3:18"},{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"7369:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7363:5:18"},"nodeType":"YulFunctionCall","src":"7363:13:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7351:6:18"},"nodeType":"YulFunctionCall","src":"7351:26:18"},"nodeType":"YulExpressionStatement","src":"7351:26:18"},{"nodeType":"YulAssignment","src":"7390:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7401:3:18"},{"name":"_1","nodeType":"YulIdentifier","src":"7406:2:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7397:3:18"},"nodeType":"YulFunctionCall","src":"7397:12:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7390:3:18"}]},{"nodeType":"YulAssignment","src":"7422:25:18","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"7436:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"7444:2:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7432:3:18"},"nodeType":"YulFunctionCall","src":"7432:15:18"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"7422:6:18"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7299:1:18"},{"name":"length","nodeType":"YulIdentifier","src":"7302:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7296:2:18"},"nodeType":"YulFunctionCall","src":"7296:13:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7310:18:18","statements":[{"nodeType":"YulAssignment","src":"7312:14:18","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7321:1:18"},{"kind":"number","nodeType":"YulLiteral","src":"7324:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7317:3:18"},"nodeType":"YulFunctionCall","src":"7317:9:18"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"7312:1:18"}]}]},"pre":{"nodeType":"YulBlock","src":"7292:3:18","statements":[]},"src":"7288:169:18"},{"nodeType":"YulAssignment","src":"7466:11:18","value":{"name":"pos","nodeType":"YulIdentifier","src":"7474:3:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7466:4:18"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6971:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6982:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6993:4:18","type":""}],"src":"6851:632:18"},{"body":{"nodeType":"YulBlock","src":"7544:1064:18","statements":[{"nodeType":"YulVariableDeclaration","src":"7554:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"7564:6:18","type":"","value":"0x0140"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"7558:2:18","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7586:3:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7597:5:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7591:5:18"},"nodeType":"YulFunctionCall","src":"7591:12:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7579:6:18"},"nodeType":"YulFunctionCall","src":"7579:25:18"},"nodeType":"YulExpressionStatement","src":"7579:25:18"},{"nodeType":"YulVariableDeclaration","src":"7613:43:18","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7643:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"7650:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7639:3:18"},"nodeType":"YulFunctionCall","src":"7639:16:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7633:5:18"},"nodeType":"YulFunctionCall","src":"7633:23:18"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"7617:12:18","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7676:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"7681:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7672:3:18"},"nodeType":"YulFunctionCall","src":"7672:14:18"},{"name":"_1","nodeType":"YulIdentifier","src":"7688:2:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7665:6:18"},"nodeType":"YulFunctionCall","src":"7665:26:18"},"nodeType":"YulExpressionStatement","src":"7665:26:18"},{"nodeType":"YulVariableDeclaration","src":"7700:68:18","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"7741:12:18"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7759:3:18"},{"name":"_1","nodeType":"YulIdentifier","src":"7764:2:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7755:3:18"},"nodeType":"YulFunctionCall","src":"7755:12:18"}],"functionName":{"name":"abi_encode_string_memory_ptr","nodeType":"YulIdentifier","src":"7712:28:18"},"nodeType":"YulFunctionCall","src":"7712:56:18"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"7704:4:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7777:45:18","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7809:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"7816:4:18","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7805:3:18"},"nodeType":"YulFunctionCall","src":"7805:16:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7799:5:18"},"nodeType":"YulFunctionCall","src":"7799:23:18"},"variables":[{"name":"memberValue0_1","nodeType":"YulTypedName","src":"7781:14:18","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7842:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"7847:4:18","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7838:3:18"},"nodeType":"YulFunctionCall","src":"7838:14:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7858:4:18"},{"name":"pos","nodeType":"YulIdentifier","src":"7864:3:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7854:3:18"},"nodeType":"YulFunctionCall","src":"7854:14:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7831:6:18"},"nodeType":"YulFunctionCall","src":"7831:38:18"},"nodeType":"YulExpressionStatement","src":"7831:38:18"},{"nodeType":"YulVariableDeclaration","src":"7878:64:18","value":{"arguments":[{"name":"memberValue0_1","nodeType":"YulIdentifier","src":"7921:14:18"},{"name":"tail","nodeType":"YulIdentifier","src":"7937:4:18"}],"functionName":{"name":"abi_encode_string_memory_ptr","nodeType":"YulIdentifier","src":"7892:28:18"},"nodeType":"YulFunctionCall","src":"7892:50:18"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"7882:6:18","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7962:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"7967:4:18","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7958:3:18"},"nodeType":"YulFunctionCall","src":"7958:14:18"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7984:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"7991:4:18","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7980:3:18"},"nodeType":"YulFunctionCall","src":"7980:16:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7974:5:18"},"nodeType":"YulFunctionCall","src":"7974:23:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7951:6:18"},"nodeType":"YulFunctionCall","src":"7951:47:18"},"nodeType":"YulExpressionStatement","src":"7951:47:18"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8018:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"8023:4:18","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8014:3:18"},"nodeType":"YulFunctionCall","src":"8014:14:18"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8040:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"8047:4:18","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8036:3:18"},"nodeType":"YulFunctionCall","src":"8036:16:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8030:5:18"},"nodeType":"YulFunctionCall","src":"8030:23:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8007:6:18"},"nodeType":"YulFunctionCall","src":"8007:47:18"},"nodeType":"YulExpressionStatement","src":"8007:47:18"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8074:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"8079:4:18","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8070:3:18"},"nodeType":"YulFunctionCall","src":"8070:14:18"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8096:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"8103:4:18","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8092:3:18"},"nodeType":"YulFunctionCall","src":"8092:16:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8086:5:18"},"nodeType":"YulFunctionCall","src":"8086:23:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8063:6:18"},"nodeType":"YulFunctionCall","src":"8063:47:18"},"nodeType":"YulExpressionStatement","src":"8063:47:18"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8130:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"8135:4:18","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8126:3:18"},"nodeType":"YulFunctionCall","src":"8126:14:18"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8152:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"8159:4:18","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8148:3:18"},"nodeType":"YulFunctionCall","src":"8148:16:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8142:5:18"},"nodeType":"YulFunctionCall","src":"8142:23:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8119:6:18"},"nodeType":"YulFunctionCall","src":"8119:47:18"},"nodeType":"YulExpressionStatement","src":"8119:47:18"},{"nodeType":"YulVariableDeclaration","src":"8175:45:18","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8207:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"8214:4:18","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8203:3:18"},"nodeType":"YulFunctionCall","src":"8203:16:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8197:5:18"},"nodeType":"YulFunctionCall","src":"8197:23:18"},"variables":[{"name":"memberValue0_2","nodeType":"YulTypedName","src":"8179:14:18","type":""}]},{"expression":{"arguments":[{"name":"memberValue0_2","nodeType":"YulIdentifier","src":"8248:14:18"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8268:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"8273:4:18","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8264:3:18"},"nodeType":"YulFunctionCall","src":"8264:14:18"}],"functionName":{"name":"abi_encode_address","nodeType":"YulIdentifier","src":"8229:18:18"},"nodeType":"YulFunctionCall","src":"8229:50:18"},"nodeType":"YulExpressionStatement","src":"8229:50:18"},{"nodeType":"YulVariableDeclaration","src":"8288:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"8298:6:18","type":"","value":"0x0100"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"8292:2:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8313:43:18","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8345:5:18"},{"name":"_2","nodeType":"YulIdentifier","src":"8352:2:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8341:3:18"},"nodeType":"YulFunctionCall","src":"8341:14:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8335:5:18"},"nodeType":"YulFunctionCall","src":"8335:21:18"},"variables":[{"name":"memberValue0_3","nodeType":"YulTypedName","src":"8317:14:18","type":""}]},{"expression":{"arguments":[{"name":"memberValue0_3","nodeType":"YulIdentifier","src":"8381:14:18"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8401:3:18"},{"name":"_2","nodeType":"YulIdentifier","src":"8406:2:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8397:3:18"},"nodeType":"YulFunctionCall","src":"8397:12:18"}],"functionName":{"name":"abi_encode_bool","nodeType":"YulIdentifier","src":"8365:15:18"},"nodeType":"YulFunctionCall","src":"8365:45:18"},"nodeType":"YulExpressionStatement","src":"8365:45:18"},{"nodeType":"YulVariableDeclaration","src":"8419:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"8429:6:18","type":"","value":"0x0120"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"8423:2:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8444:43:18","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8476:5:18"},{"name":"_3","nodeType":"YulIdentifier","src":"8483:2:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8472:3:18"},"nodeType":"YulFunctionCall","src":"8472:14:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8466:5:18"},"nodeType":"YulFunctionCall","src":"8466:21:18"},"variables":[{"name":"memberValue0_4","nodeType":"YulTypedName","src":"8448:14:18","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8507:3:18"},{"name":"_3","nodeType":"YulIdentifier","src":"8512:2:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8503:3:18"},"nodeType":"YulFunctionCall","src":"8503:12:18"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"8521:6:18"},{"name":"pos","nodeType":"YulIdentifier","src":"8529:3:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8517:3:18"},"nodeType":"YulFunctionCall","src":"8517:16:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8496:6:18"},"nodeType":"YulFunctionCall","src":"8496:38:18"},"nodeType":"YulExpressionStatement","src":"8496:38:18"},{"nodeType":"YulAssignment","src":"8543:59:18","value":{"arguments":[{"name":"memberValue0_4","nodeType":"YulIdentifier","src":"8579:14:18"},{"name":"tail_1","nodeType":"YulIdentifier","src":"8595:6:18"}],"functionName":{"name":"abi_encode_string_memory_ptr","nodeType":"YulIdentifier","src":"8550:28:18"},"nodeType":"YulFunctionCall","src":"8550:52:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8543:3:18"}]}]},"name":"abi_encode_struct_Event","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7521:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7528:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7536:3:18","type":""}],"src":"7488:1120:18"},{"body":{"nodeType":"YulBlock","src":"8760:105:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8777:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"8788:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8770:6:18"},"nodeType":"YulFunctionCall","src":"8770:21:18"},"nodeType":"YulExpressionStatement","src":"8770:21:18"},{"nodeType":"YulAssignment","src":"8800:59:18","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8832:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8844:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"8855:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8840:3:18"},"nodeType":"YulFunctionCall","src":"8840:18:18"}],"functionName":{"name":"abi_encode_struct_Event","nodeType":"YulIdentifier","src":"8808:23:18"},"nodeType":"YulFunctionCall","src":"8808:51:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8800:4:18"}]}]},"name":"abi_encode_tuple_t_struct$_Event_$3508_memory_ptr__to_t_struct$_Event_$3508_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8729:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8740:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8751:4:18","type":""}],"src":"8613:252:18"},{"body":{"nodeType":"YulBlock","src":"8940:116:18","statements":[{"body":{"nodeType":"YulBlock","src":"8986:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8995:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8998:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8988:6:18"},"nodeType":"YulFunctionCall","src":"8988:12:18"},"nodeType":"YulExpressionStatement","src":"8988:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8961:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"8970:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8957:3:18"},"nodeType":"YulFunctionCall","src":"8957:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"8982:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8953:3:18"},"nodeType":"YulFunctionCall","src":"8953:32:18"},"nodeType":"YulIf","src":"8950:52:18"},{"nodeType":"YulAssignment","src":"9011:39:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9040:9:18"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"9021:18:18"},"nodeType":"YulFunctionCall","src":"9021:29:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9011:6:18"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8906:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8917:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8929:6:18","type":""}],"src":"8870:186:18"},{"body":{"nodeType":"YulBlock","src":"9210:379:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9227:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"9238:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9220:6:18"},"nodeType":"YulFunctionCall","src":"9220:21:18"},"nodeType":"YulExpressionStatement","src":"9220:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9261:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"9272:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9257:3:18"},"nodeType":"YulFunctionCall","src":"9257:18:18"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9283:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9277:5:18"},"nodeType":"YulFunctionCall","src":"9277:13:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9250:6:18"},"nodeType":"YulFunctionCall","src":"9250:41:18"},"nodeType":"YulExpressionStatement","src":"9250:41:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9311:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"9322:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9307:3:18"},"nodeType":"YulFunctionCall","src":"9307:18:18"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9337:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"9345:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9333:3:18"},"nodeType":"YulFunctionCall","src":"9333:15:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9327:5:18"},"nodeType":"YulFunctionCall","src":"9327:22:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9300:6:18"},"nodeType":"YulFunctionCall","src":"9300:50:18"},"nodeType":"YulExpressionStatement","src":"9300:50:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9370:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"9381:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9366:3:18"},"nodeType":"YulFunctionCall","src":"9366:18:18"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9396:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"9404:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9392:3:18"},"nodeType":"YulFunctionCall","src":"9392:15:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9386:5:18"},"nodeType":"YulFunctionCall","src":"9386:22:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9359:6:18"},"nodeType":"YulFunctionCall","src":"9359:50:18"},"nodeType":"YulExpressionStatement","src":"9359:50:18"},{"nodeType":"YulVariableDeclaration","src":"9418:42:18","value":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9448:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"9456:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9444:3:18"},"nodeType":"YulFunctionCall","src":"9444:15:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9438:5:18"},"nodeType":"YulFunctionCall","src":"9438:22:18"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"9422:12:18","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9480:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"9491:4:18","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9476:3:18"},"nodeType":"YulFunctionCall","src":"9476:20:18"},{"kind":"number","nodeType":"YulLiteral","src":"9498:4:18","type":"","value":"0x80"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9469:6:18"},"nodeType":"YulFunctionCall","src":"9469:34:18"},"nodeType":"YulExpressionStatement","src":"9469:34:18"},{"nodeType":"YulAssignment","src":"9512:71:18","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"9549:12:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9567:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"9578:3:18","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9563:3:18"},"nodeType":"YulFunctionCall","src":"9563:19:18"}],"functionName":{"name":"abi_encode_string_memory_ptr","nodeType":"YulIdentifier","src":"9520:28:18"},"nodeType":"YulFunctionCall","src":"9520:63:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9512:4:18"}]}]},"name":"abi_encode_tuple_t_struct$_Ticket_$3517_memory_ptr__to_t_struct$_Ticket_$3517_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9179:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9190:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9201:4:18","type":""}],"src":"9061:528:18"},{"body":{"nodeType":"YulBlock","src":"9779:765:18","statements":[{"body":{"nodeType":"YulBlock","src":"9826:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9835:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9838:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9828:6:18"},"nodeType":"YulFunctionCall","src":"9828:12:18"},"nodeType":"YulExpressionStatement","src":"9828:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9800:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"9809:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9796:3:18"},"nodeType":"YulFunctionCall","src":"9796:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"9821:3:18","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9792:3:18"},"nodeType":"YulFunctionCall","src":"9792:33:18"},"nodeType":"YulIf","src":"9789:53:18"},{"nodeType":"YulVariableDeclaration","src":"9851:37:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9878:9:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9865:12:18"},"nodeType":"YulFunctionCall","src":"9865:23:18"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9855:6:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9897:28:18","value":{"kind":"number","nodeType":"YulLiteral","src":"9907:18:18","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"9901:2:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"9952:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9961:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9964:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9954:6:18"},"nodeType":"YulFunctionCall","src":"9954:12:18"},"nodeType":"YulExpressionStatement","src":"9954:12:18"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9940:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"9948:2:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9937:2:18"},"nodeType":"YulFunctionCall","src":"9937:14:18"},"nodeType":"YulIf","src":"9934:34:18"},{"nodeType":"YulAssignment","src":"9977:60:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10009:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"10020:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10005:3:18"},"nodeType":"YulFunctionCall","src":"10005:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10029:7:18"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"9987:17:18"},"nodeType":"YulFunctionCall","src":"9987:50:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9977:6:18"}]},{"nodeType":"YulVariableDeclaration","src":"10046:48:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10079:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"10090:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10075:3:18"},"nodeType":"YulFunctionCall","src":"10075:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10062:12:18"},"nodeType":"YulFunctionCall","src":"10062:32:18"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"10050:8:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"10123:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10132:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10135:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10125:6:18"},"nodeType":"YulFunctionCall","src":"10125:12:18"},"nodeType":"YulExpressionStatement","src":"10125:12:18"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"10109:8:18"},{"name":"_1","nodeType":"YulIdentifier","src":"10119:2:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10106:2:18"},"nodeType":"YulFunctionCall","src":"10106:16:18"},"nodeType":"YulIf","src":"10103:36:18"},{"nodeType":"YulAssignment","src":"10148:62:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10180:9:18"},{"name":"offset_1","nodeType":"YulIdentifier","src":"10191:8:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10176:3:18"},"nodeType":"YulFunctionCall","src":"10176:24:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10202:7:18"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"10158:17:18"},"nodeType":"YulFunctionCall","src":"10158:52:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10148:6:18"}]},{"nodeType":"YulAssignment","src":"10219:42:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10246:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"10257:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10242:3:18"},"nodeType":"YulFunctionCall","src":"10242:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10229:12:18"},"nodeType":"YulFunctionCall","src":"10229:32:18"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"10219:6:18"}]},{"nodeType":"YulAssignment","src":"10270:42:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10297:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"10308:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10293:3:18"},"nodeType":"YulFunctionCall","src":"10293:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10280:12:18"},"nodeType":"YulFunctionCall","src":"10280:32:18"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"10270:6:18"}]},{"nodeType":"YulAssignment","src":"10321:43:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10348:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"10359:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10344:3:18"},"nodeType":"YulFunctionCall","src":"10344:19:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10331:12:18"},"nodeType":"YulFunctionCall","src":"10331:33:18"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"10321:6:18"}]},{"nodeType":"YulVariableDeclaration","src":"10373:49:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10406:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"10417:3:18","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10402:3:18"},"nodeType":"YulFunctionCall","src":"10402:19:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10389:12:18"},"nodeType":"YulFunctionCall","src":"10389:33:18"},"variables":[{"name":"offset_2","nodeType":"YulTypedName","src":"10377:8:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"10451:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10460:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10463:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10453:6:18"},"nodeType":"YulFunctionCall","src":"10453:12:18"},"nodeType":"YulExpressionStatement","src":"10453:12:18"}]},"condition":{"arguments":[{"name":"offset_2","nodeType":"YulIdentifier","src":"10437:8:18"},{"name":"_1","nodeType":"YulIdentifier","src":"10447:2:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10434:2:18"},"nodeType":"YulFunctionCall","src":"10434:16:18"},"nodeType":"YulIf","src":"10431:36:18"},{"nodeType":"YulAssignment","src":"10476:62:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10508:9:18"},{"name":"offset_2","nodeType":"YulIdentifier","src":"10519:8:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10504:3:18"},"nodeType":"YulFunctionCall","src":"10504:24:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10530:7:18"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"10486:17:18"},"nodeType":"YulFunctionCall","src":"10486:52:18"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"10476:6:18"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_uint256t_uint256t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9705:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9716:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9728:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9736:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9744:6:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9752:6:18","type":""},{"name":"value4","nodeType":"YulTypedName","src":"9760:6:18","type":""},{"name":"value5","nodeType":"YulTypedName","src":"9768:6:18","type":""}],"src":"9594:950:18"},{"body":{"nodeType":"YulBlock","src":"10633:263:18","statements":[{"body":{"nodeType":"YulBlock","src":"10679:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10688:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10691:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10681:6:18"},"nodeType":"YulFunctionCall","src":"10681:12:18"},"nodeType":"YulExpressionStatement","src":"10681:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10654:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"10663:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10650:3:18"},"nodeType":"YulFunctionCall","src":"10650:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"10675:2:18","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10646:3:18"},"nodeType":"YulFunctionCall","src":"10646:32:18"},"nodeType":"YulIf","src":"10643:52:18"},{"nodeType":"YulAssignment","src":"10704:39:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10733:9:18"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"10714:18:18"},"nodeType":"YulFunctionCall","src":"10714:29:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10704:6:18"}]},{"nodeType":"YulVariableDeclaration","src":"10752:45:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10782:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"10793:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10778:3:18"},"nodeType":"YulFunctionCall","src":"10778:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10765:12:18"},"nodeType":"YulFunctionCall","src":"10765:32:18"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"10756:5:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"10850:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10859:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10862:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10852:6:18"},"nodeType":"YulFunctionCall","src":"10852:12:18"},"nodeType":"YulExpressionStatement","src":"10852:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10819:5:18"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10840:5:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10833:6:18"},"nodeType":"YulFunctionCall","src":"10833:13:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10826:6:18"},"nodeType":"YulFunctionCall","src":"10826:21:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10816:2:18"},"nodeType":"YulFunctionCall","src":"10816:32:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10809:6:18"},"nodeType":"YulFunctionCall","src":"10809:40:18"},"nodeType":"YulIf","src":"10806:60:18"},{"nodeType":"YulAssignment","src":"10875:15:18","value":{"name":"value","nodeType":"YulIdentifier","src":"10885:5:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10875:6:18"}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10591:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10602:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10614:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10622:6:18","type":""}],"src":"10549:347:18"},{"body":{"nodeType":"YulBlock","src":"11031:537:18","statements":[{"body":{"nodeType":"YulBlock","src":"11078:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11087:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11090:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11080:6:18"},"nodeType":"YulFunctionCall","src":"11080:12:18"},"nodeType":"YulExpressionStatement","src":"11080:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11052:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"11061:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11048:3:18"},"nodeType":"YulFunctionCall","src":"11048:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"11073:3:18","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11044:3:18"},"nodeType":"YulFunctionCall","src":"11044:33:18"},"nodeType":"YulIf","src":"11041:53:18"},{"nodeType":"YulAssignment","src":"11103:39:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11132:9:18"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"11113:18:18"},"nodeType":"YulFunctionCall","src":"11113:29:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11103:6:18"}]},{"nodeType":"YulAssignment","src":"11151:48:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11184:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"11195:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11180:3:18"},"nodeType":"YulFunctionCall","src":"11180:18:18"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"11161:18:18"},"nodeType":"YulFunctionCall","src":"11161:38:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"11151:6:18"}]},{"nodeType":"YulAssignment","src":"11208:42:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11235:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"11246:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11231:3:18"},"nodeType":"YulFunctionCall","src":"11231:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11218:12:18"},"nodeType":"YulFunctionCall","src":"11218:32:18"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"11208:6:18"}]},{"nodeType":"YulVariableDeclaration","src":"11259:46:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11290:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"11301:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11286:3:18"},"nodeType":"YulFunctionCall","src":"11286:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11273:12:18"},"nodeType":"YulFunctionCall","src":"11273:32:18"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11263:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"11348:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11357:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11360:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11350:6:18"},"nodeType":"YulFunctionCall","src":"11350:12:18"},"nodeType":"YulExpressionStatement","src":"11350:12:18"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11320:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"11328:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11317:2:18"},"nodeType":"YulFunctionCall","src":"11317:30:18"},"nodeType":"YulIf","src":"11314:50:18"},{"nodeType":"YulVariableDeclaration","src":"11373:32:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11387:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"11398:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11383:3:18"},"nodeType":"YulFunctionCall","src":"11383:22:18"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"11377:2:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"11453:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11462:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11465:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11455:6:18"},"nodeType":"YulFunctionCall","src":"11455:12:18"},"nodeType":"YulExpressionStatement","src":"11455:12:18"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"11432:2:18"},{"kind":"number","nodeType":"YulLiteral","src":"11436:4:18","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11428:3:18"},"nodeType":"YulFunctionCall","src":"11428:13:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11443:7:18"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11424:3:18"},"nodeType":"YulFunctionCall","src":"11424:27:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11417:6:18"},"nodeType":"YulFunctionCall","src":"11417:35:18"},"nodeType":"YulIf","src":"11414:55:18"},{"nodeType":"YulAssignment","src":"11478:84:18","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"11527:2:18"},{"kind":"number","nodeType":"YulLiteral","src":"11531:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11523:3:18"},"nodeType":"YulFunctionCall","src":"11523:11:18"},{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"11549:2:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11536:12:18"},"nodeType":"YulFunctionCall","src":"11536:16:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11554:7:18"}],"functionName":{"name":"abi_decode_available_length_string","nodeType":"YulIdentifier","src":"11488:34:18"},"nodeType":"YulFunctionCall","src":"11488:74:18"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"11478:6:18"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10973:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10984:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10996:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11004:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11012:6:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"11020:6:18","type":""}],"src":"10901:667:18"},{"body":{"nodeType":"YulBlock","src":"11770:638:18","statements":[{"nodeType":"YulVariableDeclaration","src":"11780:12:18","value":{"kind":"number","nodeType":"YulLiteral","src":"11790:2:18","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"11784:2:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11801:32:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11819:9:18"},{"name":"_1","nodeType":"YulIdentifier","src":"11830:2:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11815:3:18"},"nodeType":"YulFunctionCall","src":"11815:18:18"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"11805:6:18","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11849:9:18"},{"name":"_1","nodeType":"YulIdentifier","src":"11860:2:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11842:6:18"},"nodeType":"YulFunctionCall","src":"11842:21:18"},"nodeType":"YulExpressionStatement","src":"11842:21:18"},{"nodeType":"YulVariableDeclaration","src":"11872:17:18","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"11883:6:18"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"11876:3:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11898:27:18","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11918:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11912:5:18"},"nodeType":"YulFunctionCall","src":"11912:13:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"11902:6:18","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"11941:6:18"},{"name":"length","nodeType":"YulIdentifier","src":"11949:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11934:6:18"},"nodeType":"YulFunctionCall","src":"11934:22:18"},"nodeType":"YulExpressionStatement","src":"11934:22:18"},{"nodeType":"YulAssignment","src":"11965:25:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11976:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"11987:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11972:3:18"},"nodeType":"YulFunctionCall","src":"11972:18:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11965:3:18"}]},{"nodeType":"YulVariableDeclaration","src":"11999:53:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12021:9:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12036:1:18","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"12039:6:18"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"12032:3:18"},"nodeType":"YulFunctionCall","src":"12032:14:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12017:3:18"},"nodeType":"YulFunctionCall","src":"12017:30:18"},{"kind":"number","nodeType":"YulLiteral","src":"12049:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12013:3:18"},"nodeType":"YulFunctionCall","src":"12013:39:18"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"12003:6:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12061:29:18","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12079:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"12087:2:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12075:3:18"},"nodeType":"YulFunctionCall","src":"12075:15:18"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"12065:6:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12099:10:18","value":{"kind":"number","nodeType":"YulLiteral","src":"12108:1:18","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"12103:1:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"12167:212:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12188:3:18"},{"arguments":[{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"12201:6:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"12209:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12197:3:18"},"nodeType":"YulFunctionCall","src":"12197:22:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12225:2:18","type":"","value":"63"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"12221:3:18"},"nodeType":"YulFunctionCall","src":"12221:7:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12193:3:18"},"nodeType":"YulFunctionCall","src":"12193:36:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12181:6:18"},"nodeType":"YulFunctionCall","src":"12181:49:18"},"nodeType":"YulExpressionStatement","src":"12181:49:18"},{"nodeType":"YulAssignment","src":"12243:56:18","value":{"arguments":[{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"12283:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12277:5:18"},"nodeType":"YulFunctionCall","src":"12277:13:18"},{"name":"tail_2","nodeType":"YulIdentifier","src":"12292:6:18"}],"functionName":{"name":"abi_encode_struct_Event","nodeType":"YulIdentifier","src":"12253:23:18"},"nodeType":"YulFunctionCall","src":"12253:46:18"},"variableNames":[{"name":"tail_2","nodeType":"YulIdentifier","src":"12243:6:18"}]},{"nodeType":"YulAssignment","src":"12312:25:18","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"12326:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"12334:2:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12322:3:18"},"nodeType":"YulFunctionCall","src":"12322:15:18"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"12312:6:18"}]},{"nodeType":"YulAssignment","src":"12350:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12361:3:18"},{"name":"_1","nodeType":"YulIdentifier","src":"12366:2:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12357:3:18"},"nodeType":"YulFunctionCall","src":"12357:12:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12350:3:18"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"12129:1:18"},{"name":"length","nodeType":"YulIdentifier","src":"12132:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12126:2:18"},"nodeType":"YulFunctionCall","src":"12126:13:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"12140:18:18","statements":[{"nodeType":"YulAssignment","src":"12142:14:18","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"12151:1:18"},{"kind":"number","nodeType":"YulLiteral","src":"12154:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12147:3:18"},"nodeType":"YulFunctionCall","src":"12147:9:18"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"12142:1:18"}]}]},"pre":{"nodeType":"YulBlock","src":"12122:3:18","statements":[]},"src":"12118:261:18"},{"nodeType":"YulAssignment","src":"12388:14:18","value":{"name":"tail_2","nodeType":"YulIdentifier","src":"12396:6:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12388:4:18"}]}]},"name":"abi_encode_tuple_t_array$_t_struct$_Event_$3508_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Event_$3508_memory_ptr_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11739:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11750:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11761:4:18","type":""}],"src":"11573:835:18"},{"body":{"nodeType":"YulBlock","src":"12586:315:18","statements":[{"nodeType":"YulAssignment","src":"12596:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12608:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"12619:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12604:3:18"},"nodeType":"YulFunctionCall","src":"12604:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12596:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12639:9:18"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12656:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12650:5:18"},"nodeType":"YulFunctionCall","src":"12650:13:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12632:6:18"},"nodeType":"YulFunctionCall","src":"12632:32:18"},"nodeType":"YulExpressionStatement","src":"12632:32:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12684:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"12695:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12680:3:18"},"nodeType":"YulFunctionCall","src":"12680:20:18"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12716:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"12724:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12712:3:18"},"nodeType":"YulFunctionCall","src":"12712:17:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12706:5:18"},"nodeType":"YulFunctionCall","src":"12706:24:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12740:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"12745:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"12736:3:18"},"nodeType":"YulFunctionCall","src":"12736:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"12749:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12732:3:18"},"nodeType":"YulFunctionCall","src":"12732:19:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12702:3:18"},"nodeType":"YulFunctionCall","src":"12702:50:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12673:6:18"},"nodeType":"YulFunctionCall","src":"12673:80:18"},"nodeType":"YulExpressionStatement","src":"12673:80:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12773:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"12784:4:18","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12769:3:18"},"nodeType":"YulFunctionCall","src":"12769:20:18"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12801:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"12809:4:18","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12797:3:18"},"nodeType":"YulFunctionCall","src":"12797:17:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12791:5:18"},"nodeType":"YulFunctionCall","src":"12791:24:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12762:6:18"},"nodeType":"YulFunctionCall","src":"12762:54:18"},"nodeType":"YulExpressionStatement","src":"12762:54:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12836:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"12847:4:18","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12832:3:18"},"nodeType":"YulFunctionCall","src":"12832:20:18"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12878:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"12886:4:18","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12874:3:18"},"nodeType":"YulFunctionCall","src":"12874:17:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12868:5:18"},"nodeType":"YulFunctionCall","src":"12868:24:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12861:6:18"},"nodeType":"YulFunctionCall","src":"12861:32:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12854:6:18"},"nodeType":"YulFunctionCall","src":"12854:40:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12825:6:18"},"nodeType":"YulFunctionCall","src":"12825:70:18"},"nodeType":"YulExpressionStatement","src":"12825:70:18"}]},"name":"abi_encode_tuple_t_struct$_MarketplaceListing_$3526_memory_ptr__to_t_struct$_MarketplaceListing_$3526_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12555:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12566:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12577:4:18","type":""}],"src":"12413:488:18"},{"body":{"nodeType":"YulBlock","src":"12993:173:18","statements":[{"body":{"nodeType":"YulBlock","src":"13039:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13048:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13051:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13041:6:18"},"nodeType":"YulFunctionCall","src":"13041:12:18"},"nodeType":"YulExpressionStatement","src":"13041:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13014:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"13023:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13010:3:18"},"nodeType":"YulFunctionCall","src":"13010:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"13035:2:18","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13006:3:18"},"nodeType":"YulFunctionCall","src":"13006:32:18"},"nodeType":"YulIf","src":"13003:52:18"},{"nodeType":"YulAssignment","src":"13064:39:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13093:9:18"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"13074:18:18"},"nodeType":"YulFunctionCall","src":"13074:29:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13064:6:18"}]},{"nodeType":"YulAssignment","src":"13112:48:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13145:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"13156:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13141:3:18"},"nodeType":"YulFunctionCall","src":"13141:18:18"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"13122:18:18"},"nodeType":"YulFunctionCall","src":"13122:38:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"13112:6:18"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12951:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12962:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12974:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12982:6:18","type":""}],"src":"12906:260:18"},{"body":{"nodeType":"YulBlock","src":"13226:325:18","statements":[{"nodeType":"YulAssignment","src":"13236:22:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13250:1:18","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"13253:4:18"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"13246:3:18"},"nodeType":"YulFunctionCall","src":"13246:12:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"13236:6:18"}]},{"nodeType":"YulVariableDeclaration","src":"13267:38:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"13297:4:18"},{"kind":"number","nodeType":"YulLiteral","src":"13303:1:18","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13293:3:18"},"nodeType":"YulFunctionCall","src":"13293:12:18"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"13271:18:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"13344:31:18","statements":[{"nodeType":"YulAssignment","src":"13346:27:18","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13360:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"13368:4:18","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13356:3:18"},"nodeType":"YulFunctionCall","src":"13356:17:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"13346:6:18"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"13324:18:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13317:6:18"},"nodeType":"YulFunctionCall","src":"13317:26:18"},"nodeType":"YulIf","src":"13314:61:18"},{"body":{"nodeType":"YulBlock","src":"13434:111:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13455:1:18","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13462:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"13467:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"13458:3:18"},"nodeType":"YulFunctionCall","src":"13458:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13448:6:18"},"nodeType":"YulFunctionCall","src":"13448:31:18"},"nodeType":"YulExpressionStatement","src":"13448:31:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13499:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"13502:4:18","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13492:6:18"},"nodeType":"YulFunctionCall","src":"13492:15:18"},"nodeType":"YulExpressionStatement","src":"13492:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13527:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13530:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13520:6:18"},"nodeType":"YulFunctionCall","src":"13520:15:18"},"nodeType":"YulExpressionStatement","src":"13520:15:18"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"13390:18:18"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13413:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"13421:2:18","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13410:2:18"},"nodeType":"YulFunctionCall","src":"13410:14:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"13387:2:18"},"nodeType":"YulFunctionCall","src":"13387:38:18"},"nodeType":"YulIf","src":"13384:161:18"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"13206:4:18","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"13215:6:18","type":""}],"src":"13171:380:18"},{"body":{"nodeType":"YulBlock","src":"13713:218:18","statements":[{"nodeType":"YulAssignment","src":"13723:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13735:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"13746:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13731:3:18"},"nodeType":"YulFunctionCall","src":"13731:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13723:4:18"}]},{"nodeType":"YulVariableDeclaration","src":"13758:29:18","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13776:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"13781:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"13772:3:18"},"nodeType":"YulFunctionCall","src":"13772:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"13785:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13768:3:18"},"nodeType":"YulFunctionCall","src":"13768:19:18"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"13762:2:18","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13803:9:18"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13818:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"13826:2:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13814:3:18"},"nodeType":"YulFunctionCall","src":"13814:15:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13796:6:18"},"nodeType":"YulFunctionCall","src":"13796:34:18"},"nodeType":"YulExpressionStatement","src":"13796:34:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13850:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"13861:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13846:3:18"},"nodeType":"YulFunctionCall","src":"13846:18:18"},{"name":"value1","nodeType":"YulIdentifier","src":"13866:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13839:6:18"},"nodeType":"YulFunctionCall","src":"13839:34:18"},"nodeType":"YulExpressionStatement","src":"13839:34:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13893:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"13904:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13889:3:18"},"nodeType":"YulFunctionCall","src":"13889:18:18"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"13913:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"13921:2:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13909:3:18"},"nodeType":"YulFunctionCall","src":"13909:15:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13882:6:18"},"nodeType":"YulFunctionCall","src":"13882:43:18"},"nodeType":"YulExpressionStatement","src":"13882:43:18"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13666:9:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"13677:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13685:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13693:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13704:4:18","type":""}],"src":"13556:375:18"},{"body":{"nodeType":"YulBlock","src":"14065:145:18","statements":[{"nodeType":"YulAssignment","src":"14075:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14087:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"14098:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14083:3:18"},"nodeType":"YulFunctionCall","src":"14083:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14075:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14117:9:18"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14132:6:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14148:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"14153:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"14144:3:18"},"nodeType":"YulFunctionCall","src":"14144:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"14157:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14140:3:18"},"nodeType":"YulFunctionCall","src":"14140:19:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14128:3:18"},"nodeType":"YulFunctionCall","src":"14128:32:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14110:6:18"},"nodeType":"YulFunctionCall","src":"14110:51:18"},"nodeType":"YulExpressionStatement","src":"14110:51:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14181:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"14192:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14177:3:18"},"nodeType":"YulFunctionCall","src":"14177:18:18"},{"name":"value1","nodeType":"YulIdentifier","src":"14197:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14170:6:18"},"nodeType":"YulFunctionCall","src":"14170:34:18"},"nodeType":"YulExpressionStatement","src":"14170:34:18"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14026:9:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14037:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14045:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14056:4:18","type":""}],"src":"13936:274:18"},{"body":{"nodeType":"YulBlock","src":"14389:172:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14406:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"14417:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14399:6:18"},"nodeType":"YulFunctionCall","src":"14399:21:18"},"nodeType":"YulExpressionStatement","src":"14399:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14440:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"14451:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14436:3:18"},"nodeType":"YulFunctionCall","src":"14436:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"14456:2:18","type":"","value":"22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14429:6:18"},"nodeType":"YulFunctionCall","src":"14429:30:18"},"nodeType":"YulExpressionStatement","src":"14429:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14479:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"14490:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14475:3:18"},"nodeType":"YulFunctionCall","src":"14475:18:18"},{"hexValue":"596f7520617265206e6f74207468652073656c6c6572","kind":"string","nodeType":"YulLiteral","src":"14495:24:18","type":"","value":"You are not the seller"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14468:6:18"},"nodeType":"YulFunctionCall","src":"14468:52:18"},"nodeType":"YulExpressionStatement","src":"14468:52:18"},{"nodeType":"YulAssignment","src":"14529:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14541:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"14552:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14537:3:18"},"nodeType":"YulFunctionCall","src":"14537:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14529:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_e746a83d03b67c14d7fc4864f916d74d5f0a0ad1594fc5ca3dce5170f9d1643c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14366:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14380:4:18","type":""}],"src":"14215:346:18"},{"body":{"nodeType":"YulBlock","src":"14740:171:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14757:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"14768:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14750:6:18"},"nodeType":"YulFunctionCall","src":"14750:21:18"},"nodeType":"YulExpressionStatement","src":"14750:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14791:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"14802:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14787:3:18"},"nodeType":"YulFunctionCall","src":"14787:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"14807:2:18","type":"","value":"21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14780:6:18"},"nodeType":"YulFunctionCall","src":"14780:30:18"},"nodeType":"YulExpressionStatement","src":"14780:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14830:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"14841:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14826:3:18"},"nodeType":"YulFunctionCall","src":"14826:18:18"},{"hexValue":"4c697374696e67206973206e6f7420616374697665","kind":"string","nodeType":"YulLiteral","src":"14846:23:18","type":"","value":"Listing is not active"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14819:6:18"},"nodeType":"YulFunctionCall","src":"14819:51:18"},"nodeType":"YulExpressionStatement","src":"14819:51:18"},{"nodeType":"YulAssignment","src":"14879:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14891:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"14902:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14887:3:18"},"nodeType":"YulFunctionCall","src":"14887:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14879:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_8a9d86df5a17d2e64d94c92a00571bc62c4a629d78187aab72e5203bed12c690__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14717:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14731:4:18","type":""}],"src":"14566:345:18"},{"body":{"nodeType":"YulBlock","src":"15090:175:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15107:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"15118:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15100:6:18"},"nodeType":"YulFunctionCall","src":"15100:21:18"},"nodeType":"YulExpressionStatement","src":"15100:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15141:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"15152:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15137:3:18"},"nodeType":"YulFunctionCall","src":"15137:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"15157:2:18","type":"","value":"25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15130:6:18"},"nodeType":"YulFunctionCall","src":"15130:30:18"},"nodeType":"YulExpressionStatement","src":"15130:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15180:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"15191:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15176:3:18"},"nodeType":"YulFunctionCall","src":"15176:18:18"},{"hexValue":"596f7520646f6e2774206f776e2074686973207469636b6574","kind":"string","nodeType":"YulLiteral","src":"15196:27:18","type":"","value":"You don't own this ticket"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15169:6:18"},"nodeType":"YulFunctionCall","src":"15169:55:18"},"nodeType":"YulExpressionStatement","src":"15169:55:18"},{"nodeType":"YulAssignment","src":"15233:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15245:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"15256:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15241:3:18"},"nodeType":"YulFunctionCall","src":"15241:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15233:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_55ea8240bcdf2c6dc48f419582466fcc0c70b98f7bab9452e47ab9da674d6c3a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15067:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15081:4:18","type":""}],"src":"14916:349:18"},{"body":{"nodeType":"YulBlock","src":"15444:178:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15461:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"15472:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15454:6:18"},"nodeType":"YulFunctionCall","src":"15454:21:18"},"nodeType":"YulExpressionStatement","src":"15454:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15495:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"15506:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15491:3:18"},"nodeType":"YulFunctionCall","src":"15491:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"15511:2:18","type":"","value":"28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15484:6:18"},"nodeType":"YulFunctionCall","src":"15484:30:18"},"nodeType":"YulExpressionStatement","src":"15484:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15534:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"15545:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15530:3:18"},"nodeType":"YulFunctionCall","src":"15530:18:18"},{"hexValue":"5072696365206d7573742062652067726561746572207468616e2030","kind":"string","nodeType":"YulLiteral","src":"15550:30:18","type":"","value":"Price must be greater than 0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15523:6:18"},"nodeType":"YulFunctionCall","src":"15523:58:18"},"nodeType":"YulExpressionStatement","src":"15523:58:18"},{"nodeType":"YulAssignment","src":"15590:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15602:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"15613:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15598:3:18"},"nodeType":"YulFunctionCall","src":"15598:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15590:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_f496d2a6b8c6dfd2fdeb51133639f7cbcc6985234f7207231dd11f4a16998dde__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15421:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15435:4:18","type":""}],"src":"15270:352:18"},{"body":{"nodeType":"YulBlock","src":"15801:174:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15818:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"15829:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15811:6:18"},"nodeType":"YulFunctionCall","src":"15811:21:18"},"nodeType":"YulExpressionStatement","src":"15811:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15852:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"15863:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15848:3:18"},"nodeType":"YulFunctionCall","src":"15848:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"15868:2:18","type":"","value":"24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15841:6:18"},"nodeType":"YulFunctionCall","src":"15841:30:18"},"nodeType":"YulExpressionStatement","src":"15841:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15891:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"15902:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15887:3:18"},"nodeType":"YulFunctionCall","src":"15887:18:18"},{"hexValue":"5469636b657420697320616c7265616479206c6973746564","kind":"string","nodeType":"YulLiteral","src":"15907:26:18","type":"","value":"Ticket is already listed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15880:6:18"},"nodeType":"YulFunctionCall","src":"15880:54:18"},"nodeType":"YulExpressionStatement","src":"15880:54:18"},{"nodeType":"YulAssignment","src":"15943:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15955:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"15966:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15951:3:18"},"nodeType":"YulFunctionCall","src":"15951:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15943:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_16ac10015506b0c304e629c6c319bead672de9b8b106c75571165551966b3f54__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15778:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15792:4:18","type":""}],"src":"15627:348:18"},{"body":{"nodeType":"YulBlock","src":"16154:225:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16171:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"16182:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16164:6:18"},"nodeType":"YulFunctionCall","src":"16164:21:18"},"nodeType":"YulExpressionStatement","src":"16164:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16205:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"16216:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16201:3:18"},"nodeType":"YulFunctionCall","src":"16201:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"16221:2:18","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16194:6:18"},"nodeType":"YulFunctionCall","src":"16194:30:18"},"nodeType":"YulExpressionStatement","src":"16194:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16244:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"16255:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16240:3:18"},"nodeType":"YulFunctionCall","src":"16240:18:18"},{"hexValue":"43616e6e6f742073656c6c207469636b65747320666f72207061737420657665","kind":"string","nodeType":"YulLiteral","src":"16260:34:18","type":"","value":"Cannot sell tickets for past eve"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16233:6:18"},"nodeType":"YulFunctionCall","src":"16233:62:18"},"nodeType":"YulExpressionStatement","src":"16233:62:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16315:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"16326:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16311:3:18"},"nodeType":"YulFunctionCall","src":"16311:18:18"},{"hexValue":"6e7473","kind":"string","nodeType":"YulLiteral","src":"16331:5:18","type":"","value":"nts"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16304:6:18"},"nodeType":"YulFunctionCall","src":"16304:33:18"},"nodeType":"YulExpressionStatement","src":"16304:33:18"},{"nodeType":"YulAssignment","src":"16346:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16358:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"16369:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16354:3:18"},"nodeType":"YulFunctionCall","src":"16354:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16346:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_3ae7fb330a68ad5753c7017d183456b1108414fdee1f867a00433bcf83d8d2d2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16131:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16145:4:18","type":""}],"src":"15980:399:18"},{"body":{"nodeType":"YulBlock","src":"16558:178:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16575:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"16586:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16568:6:18"},"nodeType":"YulFunctionCall","src":"16568:21:18"},"nodeType":"YulExpressionStatement","src":"16568:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16609:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"16620:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16605:3:18"},"nodeType":"YulFunctionCall","src":"16605:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"16625:2:18","type":"","value":"28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16598:6:18"},"nodeType":"YulFunctionCall","src":"16598:30:18"},"nodeType":"YulExpressionStatement","src":"16598:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16648:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"16659:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16644:3:18"},"nodeType":"YulFunctionCall","src":"16644:18:18"},{"hexValue":"4d65746164617461205552492063616e6e6f7420626520656d707479","kind":"string","nodeType":"YulLiteral","src":"16664:30:18","type":"","value":"Metadata URI cannot be empty"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16637:6:18"},"nodeType":"YulFunctionCall","src":"16637:58:18"},"nodeType":"YulExpressionStatement","src":"16637:58:18"},{"nodeType":"YulAssignment","src":"16704:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16716:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"16727:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16712:3:18"},"nodeType":"YulFunctionCall","src":"16712:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16704:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_59af62c861bea9965436e11fa79e23e8590850e875c82ec47c5884384b8b64f9__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16535:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16549:4:18","type":""}],"src":"16384:352:18"},{"body":{"nodeType":"YulBlock","src":"16797:65:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16814:1:18","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"16817:3:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16807:6:18"},"nodeType":"YulFunctionCall","src":"16807:14:18"},"nodeType":"YulExpressionStatement","src":"16807:14:18"},{"nodeType":"YulAssignment","src":"16830:26:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16848:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16851:4:18","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"16838:9:18"},"nodeType":"YulFunctionCall","src":"16838:18:18"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"16830:4:18"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"16780:3:18","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"16788:4:18","type":""}],"src":"16741:121:18"},{"body":{"nodeType":"YulBlock","src":"16948:464:18","statements":[{"body":{"nodeType":"YulBlock","src":"16981:425:18","statements":[{"nodeType":"YulVariableDeclaration","src":"16995:11:18","value":{"kind":"number","nodeType":"YulLiteral","src":"17005:1:18","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"16999:2:18","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"17026:2:18"},{"name":"array","nodeType":"YulIdentifier","src":"17030:5:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17019:6:18"},"nodeType":"YulFunctionCall","src":"17019:17:18"},"nodeType":"YulExpressionStatement","src":"17019:17:18"},{"nodeType":"YulVariableDeclaration","src":"17049:31:18","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"17071:2:18"},{"kind":"number","nodeType":"YulLiteral","src":"17075:4:18","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"17061:9:18"},"nodeType":"YulFunctionCall","src":"17061:19:18"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"17053:4:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"17093:57:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"17116:4:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17126:1:18","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"17133:10:18"},{"kind":"number","nodeType":"YulLiteral","src":"17145:2:18","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17129:3:18"},"nodeType":"YulFunctionCall","src":"17129:19:18"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"17122:3:18"},"nodeType":"YulFunctionCall","src":"17122:27:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17112:3:18"},"nodeType":"YulFunctionCall","src":"17112:38:18"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"17097:11:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"17187:23:18","statements":[{"nodeType":"YulAssignment","src":"17189:19:18","value":{"name":"data","nodeType":"YulIdentifier","src":"17204:4:18"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"17189:11:18"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"17169:10:18"},{"kind":"number","nodeType":"YulLiteral","src":"17181:4:18","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"17166:2:18"},"nodeType":"YulFunctionCall","src":"17166:20:18"},"nodeType":"YulIf","src":"17163:47:18"},{"nodeType":"YulVariableDeclaration","src":"17223:41:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"17237:4:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17247:1:18","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"17254:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"17259:2:18","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17250:3:18"},"nodeType":"YulFunctionCall","src":"17250:12:18"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"17243:3:18"},"nodeType":"YulFunctionCall","src":"17243:20:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17233:3:18"},"nodeType":"YulFunctionCall","src":"17233:31:18"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"17227:2:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"17277:24:18","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"17290:11:18"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"17281:5:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"17375:21:18","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"17384:5:18"},{"name":"_1","nodeType":"YulIdentifier","src":"17391:2:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"17377:6:18"},"nodeType":"YulFunctionCall","src":"17377:17:18"},"nodeType":"YulExpressionStatement","src":"17377:17:18"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"17325:5:18"},{"name":"_2","nodeType":"YulIdentifier","src":"17332:2:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"17322:2:18"},"nodeType":"YulFunctionCall","src":"17322:13:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"17336:26:18","statements":[{"nodeType":"YulAssignment","src":"17338:22:18","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"17351:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"17358:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17347:3:18"},"nodeType":"YulFunctionCall","src":"17347:13:18"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"17338:5:18"}]}]},"pre":{"nodeType":"YulBlock","src":"17318:3:18","statements":[]},"src":"17314:82:18"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"16964:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"16969:2:18","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16961:2:18"},"nodeType":"YulFunctionCall","src":"16961:11:18"},"nodeType":"YulIf","src":"16958:448:18"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"16920:5:18","type":""},{"name":"len","nodeType":"YulTypedName","src":"16927:3:18","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"16932:10:18","type":""}],"src":"16867:545:18"},{"body":{"nodeType":"YulBlock","src":"17502:81:18","statements":[{"nodeType":"YulAssignment","src":"17512:65:18","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"17527:4:18"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17545:1:18","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"17548:3:18"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"17541:3:18"},"nodeType":"YulFunctionCall","src":"17541:11:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17558:1:18","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"17554:3:18"},"nodeType":"YulFunctionCall","src":"17554:6:18"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"17537:3:18"},"nodeType":"YulFunctionCall","src":"17537:24:18"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"17533:3:18"},"nodeType":"YulFunctionCall","src":"17533:29:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17523:3:18"},"nodeType":"YulFunctionCall","src":"17523:40:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17569:1:18","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"17572:3:18"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"17565:3:18"},"nodeType":"YulFunctionCall","src":"17565:11:18"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"17520:2:18"},"nodeType":"YulFunctionCall","src":"17520:57:18"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"17512:4:18"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"17479:4:18","type":""},{"name":"len","nodeType":"YulTypedName","src":"17485:3:18","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"17493:4:18","type":""}],"src":"17417:166:18"},{"body":{"nodeType":"YulBlock","src":"17684:1256:18","statements":[{"nodeType":"YulVariableDeclaration","src":"17694:24:18","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"17714:3:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17708:5:18"},"nodeType":"YulFunctionCall","src":"17708:10:18"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"17698:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"17761:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"17763:16:18"},"nodeType":"YulFunctionCall","src":"17763:18:18"},"nodeType":"YulExpressionStatement","src":"17763:18:18"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"17733:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"17741:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17730:2:18"},"nodeType":"YulFunctionCall","src":"17730:30:18"},"nodeType":"YulIf","src":"17727:56:18"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"17836:4:18"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"17874:4:18"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"17868:5:18"},"nodeType":"YulFunctionCall","src":"17868:11:18"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"17842:25:18"},"nodeType":"YulFunctionCall","src":"17842:38:18"},{"name":"newLen","nodeType":"YulIdentifier","src":"17882:6:18"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"17792:43:18"},"nodeType":"YulFunctionCall","src":"17792:97:18"},"nodeType":"YulExpressionStatement","src":"17792:97:18"},{"nodeType":"YulVariableDeclaration","src":"17898:18:18","value":{"kind":"number","nodeType":"YulLiteral","src":"17915:1:18","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"17902:9:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"17925:23:18","value":{"kind":"number","nodeType":"YulLiteral","src":"17944:4:18","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"17929:11:18","type":""}]},{"nodeType":"YulAssignment","src":"17957:24:18","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"17970:11:18"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"17957:9:18"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"18027:656:18","statements":[{"nodeType":"YulVariableDeclaration","src":"18041:35:18","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"18060:6:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18072:2:18","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"18068:3:18"},"nodeType":"YulFunctionCall","src":"18068:7:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18056:3:18"},"nodeType":"YulFunctionCall","src":"18056:20:18"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"18045:7:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"18089:49:18","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"18133:4:18"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"18103:29:18"},"nodeType":"YulFunctionCall","src":"18103:35:18"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"18093:6:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"18151:10:18","value":{"kind":"number","nodeType":"YulLiteral","src":"18160:1:18","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"18155:1:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"18238:172:18","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"18263:6:18"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"18281:3:18"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"18286:9:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18277:3:18"},"nodeType":"YulFunctionCall","src":"18277:19:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18271:5:18"},"nodeType":"YulFunctionCall","src":"18271:26:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"18256:6:18"},"nodeType":"YulFunctionCall","src":"18256:42:18"},"nodeType":"YulExpressionStatement","src":"18256:42:18"},{"nodeType":"YulAssignment","src":"18315:24:18","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"18329:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"18337:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18325:3:18"},"nodeType":"YulFunctionCall","src":"18325:14:18"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"18315:6:18"}]},{"nodeType":"YulAssignment","src":"18356:40:18","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"18373:9:18"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"18384:11:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18369:3:18"},"nodeType":"YulFunctionCall","src":"18369:27:18"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"18356:9:18"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"18185:1:18"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"18188:7:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18182:2:18"},"nodeType":"YulFunctionCall","src":"18182:14:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"18197:28:18","statements":[{"nodeType":"YulAssignment","src":"18199:24:18","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"18208:1:18"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"18211:11:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18204:3:18"},"nodeType":"YulFunctionCall","src":"18204:19:18"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"18199:1:18"}]}]},"pre":{"nodeType":"YulBlock","src":"18178:3:18","statements":[]},"src":"18174:236:18"},{"body":{"nodeType":"YulBlock","src":"18458:166:18","statements":[{"nodeType":"YulVariableDeclaration","src":"18476:43:18","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"18503:3:18"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"18508:9:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18499:3:18"},"nodeType":"YulFunctionCall","src":"18499:19:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18493:5:18"},"nodeType":"YulFunctionCall","src":"18493:26:18"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"18480:9:18","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"18543:6:18"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"18555:9:18"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18582:1:18","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"18585:6:18"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"18578:3:18"},"nodeType":"YulFunctionCall","src":"18578:14:18"},{"kind":"number","nodeType":"YulLiteral","src":"18594:3:18","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18574:3:18"},"nodeType":"YulFunctionCall","src":"18574:24:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18604:1:18","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"18600:3:18"},"nodeType":"YulFunctionCall","src":"18600:6:18"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"18570:3:18"},"nodeType":"YulFunctionCall","src":"18570:37:18"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"18566:3:18"},"nodeType":"YulFunctionCall","src":"18566:42:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18551:3:18"},"nodeType":"YulFunctionCall","src":"18551:58:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"18536:6:18"},"nodeType":"YulFunctionCall","src":"18536:74:18"},"nodeType":"YulExpressionStatement","src":"18536:74:18"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"18429:7:18"},{"name":"newLen","nodeType":"YulIdentifier","src":"18438:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18426:2:18"},"nodeType":"YulFunctionCall","src":"18426:19:18"},"nodeType":"YulIf","src":"18423:201:18"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"18644:4:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18658:1:18","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"18661:6:18"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"18654:3:18"},"nodeType":"YulFunctionCall","src":"18654:14:18"},{"kind":"number","nodeType":"YulLiteral","src":"18670:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18650:3:18"},"nodeType":"YulFunctionCall","src":"18650:22:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"18637:6:18"},"nodeType":"YulFunctionCall","src":"18637:36:18"},"nodeType":"YulExpressionStatement","src":"18637:36:18"}]},"nodeType":"YulCase","src":"18020:663:18","value":{"kind":"number","nodeType":"YulLiteral","src":"18025:1:18","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"18700:234:18","statements":[{"nodeType":"YulVariableDeclaration","src":"18714:14:18","value":{"kind":"number","nodeType":"YulLiteral","src":"18727:1:18","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"18718:5:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"18763:67:18","statements":[{"nodeType":"YulAssignment","src":"18781:35:18","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"18800:3:18"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"18805:9:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18796:3:18"},"nodeType":"YulFunctionCall","src":"18796:19:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18790:5:18"},"nodeType":"YulFunctionCall","src":"18790:26:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"18781:5:18"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"18744:6:18"},"nodeType":"YulIf","src":"18741:89:18"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"18850:4:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18909:5:18"},{"name":"newLen","nodeType":"YulIdentifier","src":"18916:6:18"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"18856:52:18"},"nodeType":"YulFunctionCall","src":"18856:67:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"18843:6:18"},"nodeType":"YulFunctionCall","src":"18843:81:18"},"nodeType":"YulExpressionStatement","src":"18843:81:18"}]},"nodeType":"YulCase","src":"18692:242:18","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"18000:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"18008:2:18","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17997:2:18"},"nodeType":"YulFunctionCall","src":"17997:14:18"},"nodeType":"YulSwitch","src":"17990:944:18"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"17669:4:18","type":""},{"name":"src","nodeType":"YulTypedName","src":"17675:3:18","type":""}],"src":"17588:1352:18"},{"body":{"nodeType":"YulBlock","src":"18977:95:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18994:1:18","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19001:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"19006:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"18997:3:18"},"nodeType":"YulFunctionCall","src":"18997:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18987:6:18"},"nodeType":"YulFunctionCall","src":"18987:31:18"},"nodeType":"YulExpressionStatement","src":"18987:31:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19034:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"19037:4:18","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19027:6:18"},"nodeType":"YulFunctionCall","src":"19027:15:18"},"nodeType":"YulExpressionStatement","src":"19027:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19058:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19061:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19051:6:18"},"nodeType":"YulFunctionCall","src":"19051:15:18"},"nodeType":"YulExpressionStatement","src":"19051:15:18"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"18945:127:18"},{"body":{"nodeType":"YulBlock","src":"19251:179:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19268:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"19279:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19261:6:18"},"nodeType":"YulFunctionCall","src":"19261:21:18"},"nodeType":"YulExpressionStatement","src":"19261:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19302:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"19313:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19298:3:18"},"nodeType":"YulFunctionCall","src":"19298:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"19318:2:18","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19291:6:18"},"nodeType":"YulFunctionCall","src":"19291:30:18"},"nodeType":"YulExpressionStatement","src":"19291:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19341:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"19352:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19337:3:18"},"nodeType":"YulFunctionCall","src":"19337:18:18"},{"hexValue":"5469636b6574206973206e6f74206c697374656420666f722073616c65","kind":"string","nodeType":"YulLiteral","src":"19357:31:18","type":"","value":"Ticket is not listed for sale"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19330:6:18"},"nodeType":"YulFunctionCall","src":"19330:59:18"},"nodeType":"YulExpressionStatement","src":"19330:59:18"},{"nodeType":"YulAssignment","src":"19398:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19410:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"19421:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19406:3:18"},"nodeType":"YulFunctionCall","src":"19406:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19398:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_bbe9577aa005ed6b6dbddd783648cb01e4144ad5f71e747d0368acc55164e1a3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19228:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19242:4:18","type":""}],"src":"19077:353:18"},{"body":{"nodeType":"YulBlock","src":"19609:170:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19626:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"19637:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19619:6:18"},"nodeType":"YulFunctionCall","src":"19619:21:18"},"nodeType":"YulExpressionStatement","src":"19619:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19660:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"19671:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19656:3:18"},"nodeType":"YulFunctionCall","src":"19656:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"19676:2:18","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19649:6:18"},"nodeType":"YulFunctionCall","src":"19649:30:18"},"nodeType":"YulExpressionStatement","src":"19649:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19699:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"19710:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19695:3:18"},"nodeType":"YulFunctionCall","src":"19695:18:18"},{"hexValue":"496e73756666696369656e74207061796d656e74","kind":"string","nodeType":"YulLiteral","src":"19715:22:18","type":"","value":"Insufficient payment"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19688:6:18"},"nodeType":"YulFunctionCall","src":"19688:50:18"},"nodeType":"YulExpressionStatement","src":"19688:50:18"},{"nodeType":"YulAssignment","src":"19747:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19759:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"19770:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19755:3:18"},"nodeType":"YulFunctionCall","src":"19755:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19747:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_8d1b93b434e468e73514a2449ae955e822f73dcdf924bb4553be247ebca8755e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19586:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19600:4:18","type":""}],"src":"19435:344:18"},{"body":{"nodeType":"YulBlock","src":"19958:182:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19975:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"19986:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19968:6:18"},"nodeType":"YulFunctionCall","src":"19968:21:18"},"nodeType":"YulExpressionStatement","src":"19968:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20009:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"20020:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20005:3:18"},"nodeType":"YulFunctionCall","src":"20005:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"20025:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19998:6:18"},"nodeType":"YulFunctionCall","src":"19998:30:18"},"nodeType":"YulExpressionStatement","src":"19998:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20048:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"20059:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20044:3:18"},"nodeType":"YulFunctionCall","src":"20044:18:18"},{"hexValue":"53656c6c6572206e6f206c6f6e676572206f776e7320746865207469636b6574","kind":"string","nodeType":"YulLiteral","src":"20064:34:18","type":"","value":"Seller no longer owns the ticket"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20037:6:18"},"nodeType":"YulFunctionCall","src":"20037:62:18"},"nodeType":"YulExpressionStatement","src":"20037:62:18"},{"nodeType":"YulAssignment","src":"20108:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20120:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"20131:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20116:3:18"},"nodeType":"YulFunctionCall","src":"20116:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20108:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_b9bd71c9f98033f096609c9be16498005116bad6be9c7d3e736232f6b582510f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19935:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19949:4:18","type":""}],"src":"19784:356:18"},{"body":{"nodeType":"YulBlock","src":"20319:224:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20336:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"20347:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20329:6:18"},"nodeType":"YulFunctionCall","src":"20329:21:18"},"nodeType":"YulExpressionStatement","src":"20329:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20370:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"20381:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20366:3:18"},"nodeType":"YulFunctionCall","src":"20366:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"20386:2:18","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20359:6:18"},"nodeType":"YulFunctionCall","src":"20359:30:18"},"nodeType":"YulExpressionStatement","src":"20359:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20409:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"20420:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20405:3:18"},"nodeType":"YulFunctionCall","src":"20405:18:18"},{"hexValue":"43616e6e6f7420627579207469636b65747320666f722070617374206576656e","kind":"string","nodeType":"YulLiteral","src":"20425:34:18","type":"","value":"Cannot buy tickets for past even"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20398:6:18"},"nodeType":"YulFunctionCall","src":"20398:62:18"},"nodeType":"YulExpressionStatement","src":"20398:62:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20480:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"20491:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20476:3:18"},"nodeType":"YulFunctionCall","src":"20476:18:18"},{"hexValue":"7473","kind":"string","nodeType":"YulLiteral","src":"20496:4:18","type":"","value":"ts"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20469:6:18"},"nodeType":"YulFunctionCall","src":"20469:32:18"},"nodeType":"YulExpressionStatement","src":"20469:32:18"},{"nodeType":"YulAssignment","src":"20510:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20522:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"20533:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20518:3:18"},"nodeType":"YulFunctionCall","src":"20518:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20510:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_29d99e722b1d2b1a4b7548f1dffcb76273ed4117a40f2a30f6e67c7f4c652abc__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20296:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20310:4:18","type":""}],"src":"20145:398:18"},{"body":{"nodeType":"YulBlock","src":"20739:14:18","statements":[{"nodeType":"YulAssignment","src":"20741:10:18","value":{"name":"pos","nodeType":"YulIdentifier","src":"20748:3:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20741:3:18"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20723:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20731:3:18","type":""}],"src":"20548:205:18"},{"body":{"nodeType":"YulBlock","src":"20932:173:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20949:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"20960:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20942:6:18"},"nodeType":"YulFunctionCall","src":"20942:21:18"},"nodeType":"YulExpressionStatement","src":"20942:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20983:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"20994:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20979:3:18"},"nodeType":"YulFunctionCall","src":"20979:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"20999:2:18","type":"","value":"23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20972:6:18"},"nodeType":"YulFunctionCall","src":"20972:30:18"},"nodeType":"YulExpressionStatement","src":"20972:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21022:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"21033:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21018:3:18"},"nodeType":"YulFunctionCall","src":"21018:18:18"},{"hexValue":"5061796d656e74207472616e73666572206661696c6564","kind":"string","nodeType":"YulLiteral","src":"21038:25:18","type":"","value":"Payment transfer failed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21011:6:18"},"nodeType":"YulFunctionCall","src":"21011:53:18"},"nodeType":"YulExpressionStatement","src":"21011:53:18"},{"nodeType":"YulAssignment","src":"21073:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21085:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"21096:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21081:3:18"},"nodeType":"YulFunctionCall","src":"21081:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21073:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_adeff6f69037e9fb0ef79570477b6867fb6b68d030e2356ab44708f4e12ed2fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20909:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20923:4:18","type":""}],"src":"20758:347:18"},{"body":{"nodeType":"YulBlock","src":"21142:95:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21159:1:18","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21166:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"21171:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"21162:3:18"},"nodeType":"YulFunctionCall","src":"21162:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21152:6:18"},"nodeType":"YulFunctionCall","src":"21152:31:18"},"nodeType":"YulExpressionStatement","src":"21152:31:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21199:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"21202:4:18","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21192:6:18"},"nodeType":"YulFunctionCall","src":"21192:15:18"},"nodeType":"YulExpressionStatement","src":"21192:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21223:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21226:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21216:6:18"},"nodeType":"YulFunctionCall","src":"21216:15:18"},"nodeType":"YulExpressionStatement","src":"21216:15:18"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"21110:127:18"},{"body":{"nodeType":"YulBlock","src":"21289:88:18","statements":[{"body":{"nodeType":"YulBlock","src":"21320:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"21322:16:18"},"nodeType":"YulFunctionCall","src":"21322:18:18"},"nodeType":"YulExpressionStatement","src":"21322:18:18"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21305:5:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21316:1:18","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"21312:3:18"},"nodeType":"YulFunctionCall","src":"21312:6:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"21302:2:18"},"nodeType":"YulFunctionCall","src":"21302:17:18"},"nodeType":"YulIf","src":"21299:43:18"},{"nodeType":"YulAssignment","src":"21351:20:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21362:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"21369:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21358:3:18"},"nodeType":"YulFunctionCall","src":"21358:13:18"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"21351:3:18"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21271:5:18","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"21281:3:18","type":""}],"src":"21242:135:18"},{"body":{"nodeType":"YulBlock","src":"21556:169:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21573:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"21584:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21566:6:18"},"nodeType":"YulFunctionCall","src":"21566:21:18"},"nodeType":"YulExpressionStatement","src":"21566:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21607:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"21618:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21603:3:18"},"nodeType":"YulFunctionCall","src":"21603:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"21623:2:18","type":"","value":"19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21596:6:18"},"nodeType":"YulFunctionCall","src":"21596:30:18"},"nodeType":"YulExpressionStatement","src":"21596:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21646:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"21657:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21642:3:18"},"nodeType":"YulFunctionCall","src":"21642:18:18"},{"hexValue":"4576656e74206973206e6f7420616374697665","kind":"string","nodeType":"YulLiteral","src":"21662:21:18","type":"","value":"Event is not active"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21635:6:18"},"nodeType":"YulFunctionCall","src":"21635:49:18"},"nodeType":"YulExpressionStatement","src":"21635:49:18"},{"nodeType":"YulAssignment","src":"21693:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21705:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"21716:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21701:3:18"},"nodeType":"YulFunctionCall","src":"21701:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21693:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_b8444a3075f560e820cb6544081238af96f12c1ede1ac53a5afa99682837bcbc__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21533:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21547:4:18","type":""}],"src":"21382:343:18"},{"body":{"nodeType":"YulBlock","src":"21904:167:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21921:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"21932:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21914:6:18"},"nodeType":"YulFunctionCall","src":"21914:21:18"},"nodeType":"YulExpressionStatement","src":"21914:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21955:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"21966:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21951:3:18"},"nodeType":"YulFunctionCall","src":"21951:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"21971:2:18","type":"","value":"17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21944:6:18"},"nodeType":"YulFunctionCall","src":"21944:30:18"},"nodeType":"YulExpressionStatement","src":"21944:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21994:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"22005:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21990:3:18"},"nodeType":"YulFunctionCall","src":"21990:18:18"},{"hexValue":"4576656e7420697320736f6c64206f7574","kind":"string","nodeType":"YulLiteral","src":"22010:19:18","type":"","value":"Event is sold out"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21983:6:18"},"nodeType":"YulFunctionCall","src":"21983:47:18"},"nodeType":"YulExpressionStatement","src":"21983:47:18"},{"nodeType":"YulAssignment","src":"22039:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22051:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"22062:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22047:3:18"},"nodeType":"YulFunctionCall","src":"22047:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22039:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_f2db45e8d011e37568f18ada882d7ed451c6dc93308049f733d650ae58859621__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21881:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21895:4:18","type":""}],"src":"21730:341:18"},{"body":{"nodeType":"YulBlock","src":"22250:174:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22267:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"22278:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22260:6:18"},"nodeType":"YulFunctionCall","src":"22260:21:18"},"nodeType":"YulExpressionStatement","src":"22260:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22301:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"22312:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22297:3:18"},"nodeType":"YulFunctionCall","src":"22297:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"22317:2:18","type":"","value":"24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22290:6:18"},"nodeType":"YulFunctionCall","src":"22290:30:18"},"nodeType":"YulExpressionStatement","src":"22290:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22340:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"22351:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22336:3:18"},"nodeType":"YulFunctionCall","src":"22336:18:18"},{"hexValue":"4576656e742068617320616c726561647920706173736564","kind":"string","nodeType":"YulLiteral","src":"22356:26:18","type":"","value":"Event has already passed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22329:6:18"},"nodeType":"YulFunctionCall","src":"22329:54:18"},"nodeType":"YulExpressionStatement","src":"22329:54:18"},{"nodeType":"YulAssignment","src":"22392:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22404:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"22415:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22400:3:18"},"nodeType":"YulFunctionCall","src":"22400:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22392:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_8f4f697d6c164424211cc99cb1342d12a336bfb3f142f43476735983dee472b0__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22227:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22241:4:18","type":""}],"src":"22076:348:18"},{"body":{"nodeType":"YulBlock","src":"22477:77:18","statements":[{"nodeType":"YulAssignment","src":"22487:16:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"22498:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"22501:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22494:3:18"},"nodeType":"YulFunctionCall","src":"22494:9:18"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"22487:3:18"}]},{"body":{"nodeType":"YulBlock","src":"22526:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"22528:16:18"},"nodeType":"YulFunctionCall","src":"22528:18:18"},"nodeType":"YulExpressionStatement","src":"22528:18:18"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"22518:1:18"},{"name":"sum","nodeType":"YulIdentifier","src":"22521:3:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22515:2:18"},"nodeType":"YulFunctionCall","src":"22515:10:18"},"nodeType":"YulIf","src":"22512:36:18"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"22460:1:18","type":""},{"name":"y","nodeType":"YulTypedName","src":"22463:1:18","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"22469:3:18","type":""}],"src":"22429:125:18"},{"body":{"nodeType":"YulBlock","src":"22733:182:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22750:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"22761:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22743:6:18"},"nodeType":"YulFunctionCall","src":"22743:21:18"},"nodeType":"YulExpressionStatement","src":"22743:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22784:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"22795:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22780:3:18"},"nodeType":"YulFunctionCall","src":"22780:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"22800:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22773:6:18"},"nodeType":"YulFunctionCall","src":"22773:30:18"},"nodeType":"YulExpressionStatement","src":"22773:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22823:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"22834:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22819:3:18"},"nodeType":"YulFunctionCall","src":"22819:18:18"},{"hexValue":"4576656e742064617465206d75737420626520696e2074686520667574757265","kind":"string","nodeType":"YulLiteral","src":"22839:34:18","type":"","value":"Event date must be in the future"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22812:6:18"},"nodeType":"YulFunctionCall","src":"22812:62:18"},"nodeType":"YulExpressionStatement","src":"22812:62:18"},{"nodeType":"YulAssignment","src":"22883:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22895:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"22906:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22891:3:18"},"nodeType":"YulFunctionCall","src":"22891:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22883:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_58a81b18967fed51eae4113433412e57ba96309b406034f0f5f9e638a23873d0__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22710:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22724:4:18","type":""}],"src":"22559:356:18"},{"body":{"nodeType":"YulBlock","src":"23094:225:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23111:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"23122:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23104:6:18"},"nodeType":"YulFunctionCall","src":"23104:21:18"},"nodeType":"YulExpressionStatement","src":"23104:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23145:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"23156:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23141:3:18"},"nodeType":"YulFunctionCall","src":"23141:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"23161:2:18","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23134:6:18"},"nodeType":"YulFunctionCall","src":"23134:30:18"},"nodeType":"YulExpressionStatement","src":"23134:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23184:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"23195:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23180:3:18"},"nodeType":"YulFunctionCall","src":"23180:18:18"},{"hexValue":"5469636b6574207072696365206d757374206265206772656174657220746861","kind":"string","nodeType":"YulLiteral","src":"23200:34:18","type":"","value":"Ticket price must be greater tha"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23173:6:18"},"nodeType":"YulFunctionCall","src":"23173:62:18"},"nodeType":"YulExpressionStatement","src":"23173:62:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23255:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"23266:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23251:3:18"},"nodeType":"YulFunctionCall","src":"23251:18:18"},{"hexValue":"6e2030","kind":"string","nodeType":"YulLiteral","src":"23271:5:18","type":"","value":"n 0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23244:6:18"},"nodeType":"YulFunctionCall","src":"23244:33:18"},"nodeType":"YulExpressionStatement","src":"23244:33:18"},{"nodeType":"YulAssignment","src":"23286:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23298:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"23309:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23294:3:18"},"nodeType":"YulFunctionCall","src":"23294:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23286:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_dbeddb916c17f69da492a95ffd85b3797c1fe215391bc0a7ff8074f0eff7ba7a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23071:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23085:4:18","type":""}],"src":"22920:399:18"},{"body":{"nodeType":"YulBlock","src":"23498:223:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23515:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"23526:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23508:6:18"},"nodeType":"YulFunctionCall","src":"23508:21:18"},"nodeType":"YulExpressionStatement","src":"23508:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23549:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"23560:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23545:3:18"},"nodeType":"YulFunctionCall","src":"23545:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"23565:2:18","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23538:6:18"},"nodeType":"YulFunctionCall","src":"23538:30:18"},"nodeType":"YulExpressionStatement","src":"23538:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23588:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"23599:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23584:3:18"},"nodeType":"YulFunctionCall","src":"23584:18:18"},{"hexValue":"4d617820737570706c79206d7573742062652067726561746572207468616e20","kind":"string","nodeType":"YulLiteral","src":"23604:34:18","type":"","value":"Max supply must be greater than "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23577:6:18"},"nodeType":"YulFunctionCall","src":"23577:62:18"},"nodeType":"YulExpressionStatement","src":"23577:62:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23659:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"23670:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23655:3:18"},"nodeType":"YulFunctionCall","src":"23655:18:18"},{"hexValue":"30","kind":"string","nodeType":"YulLiteral","src":"23675:3:18","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23648:6:18"},"nodeType":"YulFunctionCall","src":"23648:31:18"},"nodeType":"YulExpressionStatement","src":"23648:31:18"},{"nodeType":"YulAssignment","src":"23688:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23700:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"23711:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23696:3:18"},"nodeType":"YulFunctionCall","src":"23696:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23688:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_70a6648aa72a1e7168c40902f40c67b1d1a9aad6f898271bd268101fd953f64f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23475:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23489:4:18","type":""}],"src":"23324:397:18"},{"body":{"nodeType":"YulBlock","src":"23900:176:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23917:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"23928:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23910:6:18"},"nodeType":"YulFunctionCall","src":"23910:21:18"},"nodeType":"YulExpressionStatement","src":"23910:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23951:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"23962:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23947:3:18"},"nodeType":"YulFunctionCall","src":"23947:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"23967:2:18","type":"","value":"26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23940:6:18"},"nodeType":"YulFunctionCall","src":"23940:30:18"},"nodeType":"YulExpressionStatement","src":"23940:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23990:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"24001:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23986:3:18"},"nodeType":"YulFunctionCall","src":"23986:18:18"},{"hexValue":"4576656e74206e616d652063616e6e6f7420626520656d707479","kind":"string","nodeType":"YulLiteral","src":"24006:28:18","type":"","value":"Event name cannot be empty"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23979:6:18"},"nodeType":"YulFunctionCall","src":"23979:56:18"},"nodeType":"YulExpressionStatement","src":"23979:56:18"},{"nodeType":"YulAssignment","src":"24044:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24056:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"24067:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24052:3:18"},"nodeType":"YulFunctionCall","src":"24052:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24044:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_f1b4f6f21c9e48a1f15e98eb1404e2b4fac5ff853156638ada62cfc3592c075b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23877:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23891:4:18","type":""}],"src":"23726:350:18"},{"body":{"nodeType":"YulBlock","src":"24258:196:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24275:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"24286:2:18","type":"","value":"96"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24268:6:18"},"nodeType":"YulFunctionCall","src":"24268:21:18"},"nodeType":"YulExpressionStatement","src":"24268:21:18"},{"nodeType":"YulAssignment","src":"24298:64:18","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24335:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24347:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"24358:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24343:3:18"},"nodeType":"YulFunctionCall","src":"24343:18:18"}],"functionName":{"name":"abi_encode_string_memory_ptr","nodeType":"YulIdentifier","src":"24306:28:18"},"nodeType":"YulFunctionCall","src":"24306:56:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24298:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24382:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"24393:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24378:3:18"},"nodeType":"YulFunctionCall","src":"24378:18:18"},{"name":"value1","nodeType":"YulIdentifier","src":"24398:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24371:6:18"},"nodeType":"YulFunctionCall","src":"24371:34:18"},"nodeType":"YulExpressionStatement","src":"24371:34:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24425:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"24436:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24421:3:18"},"nodeType":"YulFunctionCall","src":"24421:18:18"},{"name":"value2","nodeType":"YulIdentifier","src":"24441:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24414:6:18"},"nodeType":"YulFunctionCall","src":"24414:34:18"},"nodeType":"YulExpressionStatement","src":"24414:34:18"}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_uint256_t_uint256__to_t_string_memory_ptr_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24211:9:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"24222:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"24230:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"24238:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24249:4:18","type":""}],"src":"24081:373:18"},{"body":{"nodeType":"YulBlock","src":"24508:79:18","statements":[{"nodeType":"YulAssignment","src":"24518:17:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24530:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"24533:1:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24526:3:18"},"nodeType":"YulFunctionCall","src":"24526:9:18"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"24518:4:18"}]},{"body":{"nodeType":"YulBlock","src":"24559:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"24561:16:18"},"nodeType":"YulFunctionCall","src":"24561:18:18"},"nodeType":"YulExpressionStatement","src":"24561:18:18"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"24550:4:18"},{"name":"x","nodeType":"YulIdentifier","src":"24556:1:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"24547:2:18"},"nodeType":"YulFunctionCall","src":"24547:11:18"},"nodeType":"YulIf","src":"24544:37:18"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"24490:1:18","type":""},{"name":"y","nodeType":"YulTypedName","src":"24493:1:18","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"24499:4:18","type":""}],"src":"24459:128:18"},{"body":{"nodeType":"YulBlock","src":"24642:148:18","statements":[{"nodeType":"YulVariableDeclaration","src":"24652:26:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24672:5:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"24666:5:18"},"nodeType":"YulFunctionCall","src":"24666:12:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"24656:6:18","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24726:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"24733:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24722:3:18"},"nodeType":"YulFunctionCall","src":"24722:16:18"},{"name":"pos","nodeType":"YulIdentifier","src":"24740:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"24745:6:18"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"24687:34:18"},"nodeType":"YulFunctionCall","src":"24687:65:18"},"nodeType":"YulExpressionStatement","src":"24687:65:18"},{"nodeType":"YulAssignment","src":"24761:23:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24772:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"24777:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24768:3:18"},"nodeType":"YulFunctionCall","src":"24768:16:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"24761:3:18"}]}]},"name":"abi_encode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24619:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"24626:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"24634:3:18","type":""}],"src":"24592:198:18"},{"body":{"nodeType":"YulBlock","src":"25035:197:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25052:3:18"},{"hexValue":"697066733a2f2f","kind":"string","nodeType":"YulLiteral","src":"25057:9:18","type":"","value":"ipfs://"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25045:6:18"},"nodeType":"YulFunctionCall","src":"25045:22:18"},"nodeType":"YulExpressionStatement","src":"25045:22:18"},{"nodeType":"YulVariableDeclaration","src":"25076:27:18","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"25096:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"25090:5:18"},"nodeType":"YulFunctionCall","src":"25090:13:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"25080:6:18","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"25151:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"25159:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25147:3:18"},"nodeType":"YulFunctionCall","src":"25147:17:18"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25170:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"25175:1:18","type":"","value":"7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25166:3:18"},"nodeType":"YulFunctionCall","src":"25166:11:18"},{"name":"length","nodeType":"YulIdentifier","src":"25179:6:18"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"25112:34:18"},"nodeType":"YulFunctionCall","src":"25112:74:18"},"nodeType":"YulExpressionStatement","src":"25112:74:18"},{"nodeType":"YulAssignment","src":"25195:31:18","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25210:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"25215:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25206:3:18"},"nodeType":"YulFunctionCall","src":"25206:16:18"},{"kind":"number","nodeType":"YulLiteral","src":"25224:1:18","type":"","value":"7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25202:3:18"},"nodeType":"YulFunctionCall","src":"25202:24:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"25195:3:18"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_66f0790b1cbe0dcac007f07341b00cafe2bda254914729058b5209e04b702afe_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25011:3:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"25016:6:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25027:3:18","type":""}],"src":"24795:437:18"},{"body":{"nodeType":"YulBlock","src":"25292:68:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25309:3:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25318:3:18","type":"","value":"249"},{"kind":"number","nodeType":"YulLiteral","src":"25323:2:18","type":"","value":"17"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"25314:3:18"},"nodeType":"YulFunctionCall","src":"25314:12:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25302:6:18"},"nodeType":"YulFunctionCall","src":"25302:25:18"},"nodeType":"YulExpressionStatement","src":"25302:25:18"},{"nodeType":"YulAssignment","src":"25336:18:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25347:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"25352:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25343:3:18"},"nodeType":"YulFunctionCall","src":"25343:11:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"25336:3:18"}]}]},"name":"abi_encode_stringliteral_6e9f","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25276:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25284:3:18","type":""}],"src":"25237:123:18"},{"body":{"nodeType":"YulBlock","src":"25420:59:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25437:3:18"},{"hexValue":"7d","kind":"string","nodeType":"YulLiteral","src":"25442:3:18","type":"","value":"}"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25430:6:18"},"nodeType":"YulFunctionCall","src":"25430:16:18"},"nodeType":"YulExpressionStatement","src":"25430:16:18"},{"nodeType":"YulAssignment","src":"25455:18:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25466:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"25471:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25462:3:18"},"nodeType":"YulFunctionCall","src":"25462:11:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"25455:3:18"}]}]},"name":"abi_encode_stringliteral_8e2f","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25404:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25412:3:18","type":""}],"src":"25365:114:18"},{"body":{"nodeType":"YulBlock","src":"26676:954:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26693:3:18"},{"hexValue":"7b","kind":"string","nodeType":"YulLiteral","src":"26698:3:18","type":"","value":"{"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26686:6:18"},"nodeType":"YulFunctionCall","src":"26686:16:18"},"nodeType":"YulExpressionStatement","src":"26686:16:18"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26722:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"26727:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26718:3:18"},"nodeType":"YulFunctionCall","src":"26718:11:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26735:3:18","type":"","value":"193"},{"kind":"number","nodeType":"YulLiteral","src":"26740:18:18","type":"","value":"0x113730b6b2911d11"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"26731:3:18"},"nodeType":"YulFunctionCall","src":"26731:28:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26711:6:18"},"nodeType":"YulFunctionCall","src":"26711:49:18"},"nodeType":"YulExpressionStatement","src":"26711:49:18"},{"nodeType":"YulVariableDeclaration","src":"26769:27:18","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"26789:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"26783:5:18"},"nodeType":"YulFunctionCall","src":"26783:13:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"26773:6:18","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"26844:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"26852:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26840:3:18"},"nodeType":"YulFunctionCall","src":"26840:17:18"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26863:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"26868:1:18","type":"","value":"9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26859:3:18"},"nodeType":"YulFunctionCall","src":"26859:11:18"},{"name":"length","nodeType":"YulIdentifier","src":"26872:6:18"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"26805:34:18"},"nodeType":"YulFunctionCall","src":"26805:74:18"},"nodeType":"YulExpressionStatement","src":"26805:74:18"},{"nodeType":"YulVariableDeclaration","src":"26888:26:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26902:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"26907:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26898:3:18"},"nodeType":"YulFunctionCall","src":"26898:16:18"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"26892:2:18","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"26934:2:18"},{"kind":"number","nodeType":"YulLiteral","src":"26938:1:18","type":"","value":"9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26930:3:18"},"nodeType":"YulFunctionCall","src":"26930:10:18"},{"hexValue":"2023","kind":"string","nodeType":"YulLiteral","src":"26942:4:18","type":"","value":" #"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26923:6:18"},"nodeType":"YulFunctionCall","src":"26923:24:18"},"nodeType":"YulExpressionStatement","src":"26923:24:18"},{"nodeType":"YulVariableDeclaration","src":"26956:29:18","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"26978:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"26972:5:18"},"nodeType":"YulFunctionCall","src":"26972:13:18"},"variables":[{"name":"length_1","nodeType":"YulTypedName","src":"26960:8:18","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"27033:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"27041:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27029:3:18"},"nodeType":"YulFunctionCall","src":"27029:17:18"},{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"27052:2:18"},{"kind":"number","nodeType":"YulLiteral","src":"27056:2:18","type":"","value":"11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27048:3:18"},"nodeType":"YulFunctionCall","src":"27048:11:18"},{"name":"length_1","nodeType":"YulIdentifier","src":"27061:8:18"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"26994:34:18"},"nodeType":"YulFunctionCall","src":"26994:76:18"},"nodeType":"YulExpressionStatement","src":"26994:76:18"},{"nodeType":"YulVariableDeclaration","src":"27079:27:18","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"27093:2:18"},{"name":"length_1","nodeType":"YulIdentifier","src":"27097:8:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27089:3:18"},"nodeType":"YulFunctionCall","src":"27089:17:18"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"27083:2:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"27115:24:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27129:3:18","type":"","value":"242"},{"kind":"number","nodeType":"YulLiteral","src":"27134:4:18","type":"","value":"2187"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"27125:3:18"},"nodeType":"YulFunctionCall","src":"27125:14:18"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"27119:2:18","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"27159:2:18"},{"kind":"number","nodeType":"YulLiteral","src":"27163:2:18","type":"","value":"11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27155:3:18"},"nodeType":"YulFunctionCall","src":"27155:11:18"},{"name":"_3","nodeType":"YulIdentifier","src":"27168:2:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27148:6:18"},"nodeType":"YulFunctionCall","src":"27148:23:18"},"nodeType":"YulExpressionStatement","src":"27148:23:18"},{"expression":{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"27191:2:18"},{"kind":"number","nodeType":"YulLiteral","src":"27195:2:18","type":"","value":"13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27187:3:18"},"nodeType":"YulFunctionCall","src":"27187:11:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27204:3:18","type":"","value":"137"},{"kind":"number","nodeType":"YulLiteral","src":"27209:32:18","type":"","value":"0x113232b9b1b934b83a34b7b7111d11"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"27200:3:18"},"nodeType":"YulFunctionCall","src":"27200:42:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27180:6:18"},"nodeType":"YulFunctionCall","src":"27180:63:18"},"nodeType":"YulExpressionStatement","src":"27180:63:18"},{"nodeType":"YulVariableDeclaration","src":"27252:29:18","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"27274:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"27268:5:18"},"nodeType":"YulFunctionCall","src":"27268:13:18"},"variables":[{"name":"length_2","nodeType":"YulTypedName","src":"27256:8:18","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"27329:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"27337:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27325:3:18"},"nodeType":"YulFunctionCall","src":"27325:17:18"},{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"27348:2:18"},{"kind":"number","nodeType":"YulLiteral","src":"27352:2:18","type":"","value":"28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27344:3:18"},"nodeType":"YulFunctionCall","src":"27344:11:18"},{"name":"length_2","nodeType":"YulIdentifier","src":"27357:8:18"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"27290:34:18"},"nodeType":"YulFunctionCall","src":"27290:76:18"},"nodeType":"YulExpressionStatement","src":"27290:76:18"},{"nodeType":"YulVariableDeclaration","src":"27375:27:18","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"27389:2:18"},{"name":"length_2","nodeType":"YulIdentifier","src":"27393:8:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27385:3:18"},"nodeType":"YulFunctionCall","src":"27385:17:18"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"27379:2:18","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"_4","nodeType":"YulIdentifier","src":"27422:2:18"},{"kind":"number","nodeType":"YulLiteral","src":"27426:2:18","type":"","value":"28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27418:3:18"},"nodeType":"YulFunctionCall","src":"27418:11:18"},{"name":"_3","nodeType":"YulIdentifier","src":"27431:2:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27411:6:18"},"nodeType":"YulFunctionCall","src":"27411:23:18"},"nodeType":"YulExpressionStatement","src":"27411:23:18"},{"expression":{"arguments":[{"arguments":[{"name":"_4","nodeType":"YulIdentifier","src":"27454:2:18"},{"kind":"number","nodeType":"YulLiteral","src":"27458:2:18","type":"","value":"30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27450:3:18"},"nodeType":"YulFunctionCall","src":"27450:11:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27467:3:18","type":"","value":"128"},{"kind":"number","nodeType":"YulLiteral","src":"27472:34:18","type":"","value":"0x22696d616765223a22697066733a2f2f"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"27463:3:18"},"nodeType":"YulFunctionCall","src":"27463:44:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27443:6:18"},"nodeType":"YulFunctionCall","src":"27443:65:18"},"nodeType":"YulExpressionStatement","src":"27443:65:18"},{"nodeType":"YulAssignment","src":"27517:107:18","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"27602:6:18"},{"arguments":[{"name":"_4","nodeType":"YulIdentifier","src":"27614:2:18"},{"kind":"number","nodeType":"YulLiteral","src":"27618:2:18","type":"","value":"46"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27610:3:18"},"nodeType":"YulFunctionCall","src":"27610:11:18"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"27584:17:18"},"nodeType":"YulFunctionCall","src":"27584:38:18"}],"functionName":{"name":"abi_encode_stringliteral_6e9f","nodeType":"YulIdentifier","src":"27554:29:18"},"nodeType":"YulFunctionCall","src":"27554:69:18"}],"functionName":{"name":"abi_encode_stringliteral_8e2f","nodeType":"YulIdentifier","src":"27524:29:18"},"nodeType":"YulFunctionCall","src":"27524:100:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"27517:3:18"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52_t_stringliteral_51367d69f1c3baff467b722249990cf2b0f92b1e50edd5a778b81ffc7191408f_t_string_memory_ptr_t_stringliteral_21af77cd140717e5867fa5acefcf2fc51f566448915c6d7fd3ac9763b6517a12_t_string_memory_ptr_t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb_t_stringliteral_1f63d9db42efe217d85281c4ef6267f200cbdd8e8d6fd9a3e9d557ed86a373c7_t_string_memory_ptr_t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb_t_stringliteral_1142d87ae89da2e55c57bf6d4d08b8c1cbd98506048166b2165a9963aa8d182d_t_string_memory_ptr_t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0_t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"26628:3:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"26633:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"26641:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"26649:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"26657:6:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"26668:3:18","type":""}],"src":"25484:2146:18"},{"body":{"nodeType":"YulBlock","src":"27875:221:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27892:3:18"},{"hexValue":"646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c","kind":"string","nodeType":"YulLiteral","src":"27897:31:18","type":"","value":"data:application/json;base64,"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27885:6:18"},"nodeType":"YulFunctionCall","src":"27885:44:18"},"nodeType":"YulExpressionStatement","src":"27885:44:18"},{"nodeType":"YulVariableDeclaration","src":"27938:27:18","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"27958:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"27952:5:18"},"nodeType":"YulFunctionCall","src":"27952:13:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"27942:6:18","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"28013:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"28021:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28009:3:18"},"nodeType":"YulFunctionCall","src":"28009:17:18"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28032:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"28037:2:18","type":"","value":"29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28028:3:18"},"nodeType":"YulFunctionCall","src":"28028:12:18"},{"name":"length","nodeType":"YulIdentifier","src":"28042:6:18"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"27974:34:18"},"nodeType":"YulFunctionCall","src":"27974:75:18"},"nodeType":"YulExpressionStatement","src":"27974:75:18"},{"nodeType":"YulAssignment","src":"28058:32:18","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28073:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"28078:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28069:3:18"},"nodeType":"YulFunctionCall","src":"28069:16:18"},{"kind":"number","nodeType":"YulLiteral","src":"28087:2:18","type":"","value":"29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28065:3:18"},"nodeType":"YulFunctionCall","src":"28065:25:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"28058:3:18"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"27851:3:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"27856:6:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"27867:3:18","type":""}],"src":"27635:461:18"},{"body":{"nodeType":"YulBlock","src":"28304:297:18","statements":[{"nodeType":"YulVariableDeclaration","src":"28314:29:18","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28332:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"28337:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"28328:3:18"},"nodeType":"YulFunctionCall","src":"28328:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"28341:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28324:3:18"},"nodeType":"YulFunctionCall","src":"28324:19:18"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"28318:2:18","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28359:9:18"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"28374:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"28382:2:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"28370:3:18"},"nodeType":"YulFunctionCall","src":"28370:15:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28352:6:18"},"nodeType":"YulFunctionCall","src":"28352:34:18"},"nodeType":"YulExpressionStatement","src":"28352:34:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28406:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"28417:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28402:3:18"},"nodeType":"YulFunctionCall","src":"28402:18:18"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"28426:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"28434:2:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"28422:3:18"},"nodeType":"YulFunctionCall","src":"28422:15:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28395:6:18"},"nodeType":"YulFunctionCall","src":"28395:43:18"},"nodeType":"YulExpressionStatement","src":"28395:43:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28458:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"28469:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28454:3:18"},"nodeType":"YulFunctionCall","src":"28454:18:18"},{"name":"value2","nodeType":"YulIdentifier","src":"28474:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28447:6:18"},"nodeType":"YulFunctionCall","src":"28447:34:18"},"nodeType":"YulExpressionStatement","src":"28447:34:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28501:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"28512:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28497:3:18"},"nodeType":"YulFunctionCall","src":"28497:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"28517:3:18","type":"","value":"128"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28490:6:18"},"nodeType":"YulFunctionCall","src":"28490:31:18"},"nodeType":"YulExpressionStatement","src":"28490:31:18"},{"nodeType":"YulAssignment","src":"28530:65:18","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"28567:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28579:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"28590:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28575:3:18"},"nodeType":"YulFunctionCall","src":"28575:19:18"}],"functionName":{"name":"abi_encode_string_memory_ptr","nodeType":"YulIdentifier","src":"28538:28:18"},"nodeType":"YulFunctionCall","src":"28538:57:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28530:4:18"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28249:9:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"28260:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"28268:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"28276:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"28284:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28295:4:18","type":""}],"src":"28101:500:18"},{"body":{"nodeType":"YulBlock","src":"28686:169:18","statements":[{"body":{"nodeType":"YulBlock","src":"28732:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28741:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"28744:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"28734:6:18"},"nodeType":"YulFunctionCall","src":"28734:12:18"},"nodeType":"YulExpressionStatement","src":"28734:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"28707:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"28716:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28703:3:18"},"nodeType":"YulFunctionCall","src":"28703:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"28728:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"28699:3:18"},"nodeType":"YulFunctionCall","src":"28699:32:18"},"nodeType":"YulIf","src":"28696:52:18"},{"nodeType":"YulVariableDeclaration","src":"28757:29:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28776:9:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"28770:5:18"},"nodeType":"YulFunctionCall","src":"28770:16:18"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"28761:5:18","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"28819:5:18"}],"functionName":{"name":"validator_revert_bytes4","nodeType":"YulIdentifier","src":"28795:23:18"},"nodeType":"YulFunctionCall","src":"28795:30:18"},"nodeType":"YulExpressionStatement","src":"28795:30:18"},{"nodeType":"YulAssignment","src":"28834:15:18","value":{"name":"value","nodeType":"YulIdentifier","src":"28844:5:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"28834:6:18"}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28652:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"28663:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"28675:6:18","type":""}],"src":"28606:249:18"},{"body":{"nodeType":"YulBlock","src":"28892:95:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28909:1:18","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28916:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"28921:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"28912:3:18"},"nodeType":"YulFunctionCall","src":"28912:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28902:6:18"},"nodeType":"YulFunctionCall","src":"28902:31:18"},"nodeType":"YulExpressionStatement","src":"28902:31:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28949:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"28952:4:18","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28942:6:18"},"nodeType":"YulFunctionCall","src":"28942:15:18"},"nodeType":"YulExpressionStatement","src":"28942:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28973:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"28976:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"28966:6:18"},"nodeType":"YulFunctionCall","src":"28966:15:18"},"nodeType":"YulExpressionStatement","src":"28966:15:18"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"28860:127:18"},{"body":{"nodeType":"YulBlock","src":"29038:171:18","statements":[{"body":{"nodeType":"YulBlock","src":"29069:111:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29090:1:18","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29097:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"29102:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"29093:3:18"},"nodeType":"YulFunctionCall","src":"29093:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29083:6:18"},"nodeType":"YulFunctionCall","src":"29083:31:18"},"nodeType":"YulExpressionStatement","src":"29083:31:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29134:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"29137:4:18","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29127:6:18"},"nodeType":"YulFunctionCall","src":"29127:15:18"},"nodeType":"YulExpressionStatement","src":"29127:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29162:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"29165:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"29155:6:18"},"nodeType":"YulFunctionCall","src":"29155:15:18"},"nodeType":"YulExpressionStatement","src":"29155:15:18"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"29058:1:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"29051:6:18"},"nodeType":"YulFunctionCall","src":"29051:9:18"},"nodeType":"YulIf","src":"29048:132:18"},{"nodeType":"YulAssignment","src":"29189:14:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"29198:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"29201:1:18"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"29194:3:18"},"nodeType":"YulFunctionCall","src":"29194:9:18"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"29189:1:18"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"29023:1:18","type":""},{"name":"y","nodeType":"YulTypedName","src":"29026:1:18","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"29032:1:18","type":""}],"src":"28992:217:18"},{"body":{"nodeType":"YulBlock","src":"29266:116:18","statements":[{"nodeType":"YulAssignment","src":"29276:20:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"29291:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"29294:1:18"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"29287:3:18"},"nodeType":"YulFunctionCall","src":"29287:9:18"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"29276:7:18"}]},{"body":{"nodeType":"YulBlock","src":"29354:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"29356:16:18"},"nodeType":"YulFunctionCall","src":"29356:18:18"},"nodeType":"YulExpressionStatement","src":"29356:18:18"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"29325:1:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"29318:6:18"},"nodeType":"YulFunctionCall","src":"29318:9:18"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"29332:1:18"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"29339:7:18"},{"name":"x","nodeType":"YulIdentifier","src":"29348:1:18"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"29335:3:18"},"nodeType":"YulFunctionCall","src":"29335:15:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"29329:2:18"},"nodeType":"YulFunctionCall","src":"29329:22:18"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"29315:2:18"},"nodeType":"YulFunctionCall","src":"29315:37:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"29308:6:18"},"nodeType":"YulFunctionCall","src":"29308:45:18"},"nodeType":"YulIf","src":"29305:71:18"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"29245:1:18","type":""},{"name":"y","nodeType":"YulTypedName","src":"29248:1:18","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"29254:7:18","type":""}],"src":"29214:168:18"},{"body":{"nodeType":"YulBlock","src":"29419:95:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29436:1:18","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29443:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"29448:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"29439:3:18"},"nodeType":"YulFunctionCall","src":"29439:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29429:6:18"},"nodeType":"YulFunctionCall","src":"29429:31:18"},"nodeType":"YulExpressionStatement","src":"29429:31:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29476:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"29479:4:18","type":"","value":"0x31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29469:6:18"},"nodeType":"YulFunctionCall","src":"29469:15:18"},"nodeType":"YulExpressionStatement","src":"29469:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29500:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"29503:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"29493:6:18"},"nodeType":"YulFunctionCall","src":"29493:15:18"},"nodeType":"YulExpressionStatement","src":"29493:15:18"}]},"name":"panic_error_0x31","nodeType":"YulFunctionDefinition","src":"29387:127:18"}]},"contents":"{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_bool(value, pos)\n    {\n        mstore(pos, iszero(iszero(value)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string_memory_ptr(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string_memory_ptr(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_address(value, pos)\n    {\n        mstore(pos, and(value, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_uint256_t_address_t_bool_t_string_memory_ptr__to_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_uint256_t_address_t_bool_t_string_memory_ptr__fromStack_reversed(headStart, value9, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 320\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), _1)\n        let tail_1 := abi_encode_string_memory_ptr(value1, add(headStart, _1))\n        mstore(add(headStart, 64), sub(tail_1, headStart))\n        let tail_2 := abi_encode_string_memory_ptr(value2, tail_1)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), value6)\n        mstore(add(headStart, 224), and(value7, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 256), iszero(iszero(value8)))\n        mstore(add(headStart, 288), sub(tail_2, headStart))\n        tail := abi_encode_string_memory_ptr(value9, tail_2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_available_length_string(src, length, end) -> array\n    {\n        let _1 := 0xffffffffffffffff\n        if gt(length, _1) { panic_error_0x41() }\n        let _2 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 31), _2), 63), _2))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        array := memPtr\n        mstore(memPtr, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), src, length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        array := abi_decode_available_length_string(add(offset, 0x20), calldataload(offset), end)\n    }\n    function abi_decode_tuple_t_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_uint256_t_address_t_uint256_t_bool__to_t_uint256_t_address_t_uint256_t_bool__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), iszero(iszero(value3)))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_string_memory_ptr__to_t_uint256_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string_memory_ptr(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_struct_Event(value, pos) -> end\n    {\n        let _1 := 0x0140\n        mstore(pos, mload(value))\n        let memberValue0 := mload(add(value, 0x20))\n        mstore(add(pos, 0x20), _1)\n        let tail := abi_encode_string_memory_ptr(memberValue0, add(pos, _1))\n        let memberValue0_1 := mload(add(value, 0x40))\n        mstore(add(pos, 0x40), sub(tail, pos))\n        let tail_1 := abi_encode_string_memory_ptr(memberValue0_1, tail)\n        mstore(add(pos, 0x60), mload(add(value, 0x60)))\n        mstore(add(pos, 0x80), mload(add(value, 0x80)))\n        mstore(add(pos, 0xa0), mload(add(value, 0xa0)))\n        mstore(add(pos, 0xc0), mload(add(value, 0xc0)))\n        let memberValue0_2 := mload(add(value, 0xe0))\n        abi_encode_address(memberValue0_2, add(pos, 0xe0))\n        let _2 := 0x0100\n        let memberValue0_3 := mload(add(value, _2))\n        abi_encode_bool(memberValue0_3, add(pos, _2))\n        let _3 := 0x0120\n        let memberValue0_4 := mload(add(value, _3))\n        mstore(add(pos, _3), sub(tail_1, pos))\n        end := abi_encode_string_memory_ptr(memberValue0_4, tail_1)\n    }\n    function abi_encode_tuple_t_struct$_Event_$3508_memory_ptr__to_t_struct$_Event_$3508_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_struct_Event(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_struct$_Ticket_$3517_memory_ptr__to_t_struct$_Ticket_$3517_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), mload(value0))\n        mstore(add(headStart, 64), mload(add(value0, 32)))\n        mstore(add(headStart, 96), mload(add(value0, 64)))\n        let memberValue0 := mload(add(value0, 96))\n        mstore(add(headStart, 0x80), 0x80)\n        tail := abi_encode_string_memory_ptr(memberValue0, add(headStart, 160))\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_uint256t_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset_1), dataEnd)\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n        let offset_2 := calldataload(add(headStart, 160))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value5 := abi_decode_string(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value3 := abi_decode_available_length_string(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_encode_tuple_t_array$_t_struct$_Event_$3508_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Event_$3508_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let tail_2 := add(add(headStart, shl(5, length)), 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, add(sub(tail_2, headStart), not(63)))\n            tail_2 := abi_encode_struct_Event(mload(srcPtr), tail_2)\n            srcPtr := add(srcPtr, _1)\n            pos := add(pos, _1)\n        }\n        tail := tail_2\n    }\n    function abi_encode_tuple_t_struct$_MarketplaceListing_$3526_memory_ptr__to_t_struct$_MarketplaceListing_$3526_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, mload(value0))\n        mstore(add(headStart, 0x20), and(mload(add(value0, 0x20)), sub(shl(160, 1), 1)))\n        mstore(add(headStart, 0x40), mload(add(value0, 0x40)))\n        mstore(add(headStart, 0x60), iszero(iszero(mload(add(value0, 0x60)))))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, _1))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_e746a83d03b67c14d7fc4864f916d74d5f0a0ad1594fc5ca3dce5170f9d1643c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"You are not the seller\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8a9d86df5a17d2e64d94c92a00571bc62c4a629d78187aab72e5203bed12c690__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Listing is not active\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_55ea8240bcdf2c6dc48f419582466fcc0c70b98f7bab9452e47ab9da674d6c3a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"You don't own this ticket\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f496d2a6b8c6dfd2fdeb51133639f7cbcc6985234f7207231dd11f4a16998dde__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Price must be greater than 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_16ac10015506b0c304e629c6c319bead672de9b8b106c75571165551966b3f54__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Ticket is already listed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3ae7fb330a68ad5753c7017d183456b1108414fdee1f867a00433bcf83d8d2d2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"Cannot sell tickets for past eve\")\n        mstore(add(headStart, 96), \"nts\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_59af62c861bea9965436e11fa79e23e8590850e875c82ec47c5884384b8b64f9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Metadata URI cannot be empty\")\n        tail := add(headStart, 96)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_bbe9577aa005ed6b6dbddd783648cb01e4144ad5f71e747d0368acc55164e1a3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Ticket is not listed for sale\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8d1b93b434e468e73514a2449ae955e822f73dcdf924bb4553be247ebca8755e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Insufficient payment\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b9bd71c9f98033f096609c9be16498005116bad6be9c7d3e736232f6b582510f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Seller no longer owns the ticket\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_29d99e722b1d2b1a4b7548f1dffcb76273ed4117a40f2a30f6e67c7f4c652abc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Cannot buy tickets for past even\")\n        mstore(add(headStart, 96), \"ts\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_stringliteral_adeff6f69037e9fb0ef79570477b6867fb6b68d030e2356ab44708f4e12ed2fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Payment transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_b8444a3075f560e820cb6544081238af96f12c1ede1ac53a5afa99682837bcbc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Event is not active\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f2db45e8d011e37568f18ada882d7ed451c6dc93308049f733d650ae58859621__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Event is sold out\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8f4f697d6c164424211cc99cb1342d12a336bfb3f142f43476735983dee472b0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Event has already passed\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_58a81b18967fed51eae4113433412e57ba96309b406034f0f5f9e638a23873d0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Event date must be in the future\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_dbeddb916c17f69da492a95ffd85b3797c1fe215391bc0a7ff8074f0eff7ba7a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"Ticket price must be greater tha\")\n        mstore(add(headStart, 96), \"n 0\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_70a6648aa72a1e7168c40902f40c67b1d1a9aad6f898271bd268101fd953f64f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Max supply must be greater than \")\n        mstore(add(headStart, 96), \"0\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f1b4f6f21c9e48a1f15e98eb1404e2b4fac5ff853156638ada62cfc3592c075b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Event name cannot be empty\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_uint256_t_uint256__to_t_string_memory_ptr_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 96)\n        tail := abi_encode_string_memory_ptr(value0, add(headStart, 96))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_66f0790b1cbe0dcac007f07341b00cafe2bda254914729058b5209e04b702afe_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, \"ipfs://\")\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), add(pos, 7), length)\n        end := add(add(pos, length), 7)\n    }\n    function abi_encode_stringliteral_6e9f(pos) -> end\n    {\n        mstore(pos, shl(249, 17))\n        end := add(pos, 1)\n    }\n    function abi_encode_stringliteral_8e2f(pos) -> end\n    {\n        mstore(pos, \"}\")\n        end := add(pos, 1)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52_t_stringliteral_51367d69f1c3baff467b722249990cf2b0f92b1e50edd5a778b81ffc7191408f_t_string_memory_ptr_t_stringliteral_21af77cd140717e5867fa5acefcf2fc51f566448915c6d7fd3ac9763b6517a12_t_string_memory_ptr_t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb_t_stringliteral_1f63d9db42efe217d85281c4ef6267f200cbdd8e8d6fd9a3e9d557ed86a373c7_t_string_memory_ptr_t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb_t_stringliteral_1142d87ae89da2e55c57bf6d4d08b8c1cbd98506048166b2165a9963aa8d182d_t_string_memory_ptr_t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0_t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value3, value2, value1, value0) -> end\n    {\n        mstore(pos, \"{\")\n        mstore(add(pos, 1), shl(193, 0x113730b6b2911d11))\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), add(pos, 9), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 9), \" #\")\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), add(_1, 11), length_1)\n        let _2 := add(_1, length_1)\n        let _3 := shl(242, 2187)\n        mstore(add(_2, 11), _3)\n        mstore(add(_2, 13), shl(137, 0x113232b9b1b934b83a34b7b7111d11))\n        let length_2 := mload(value2)\n        copy_memory_to_memory_with_cleanup(add(value2, 0x20), add(_2, 28), length_2)\n        let _4 := add(_2, length_2)\n        mstore(add(_4, 28), _3)\n        mstore(add(_4, 30), shl(128, 0x22696d616765223a22697066733a2f2f))\n        end := abi_encode_stringliteral_8e2f(abi_encode_stringliteral_6e9f(abi_encode_string(value3, add(_4, 46))))\n    }\n    function abi_encode_tuple_packed_t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, \"data:application/json;base64,\")\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), add(pos, 29), length)\n        end := add(add(pos, length), 29)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string_memory_ptr(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n}","id":18,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436106102255760003560e01c80636d1884e01161012357806395d89b41116100ab578063d5a87ecb1161006f578063d5a87ecb146106db578063e01a0ebe146107a5578063e985e9c5146107bb578063f2fde38b146107db578063f6ac04da146107fb57600080fd5b806395d89b4114610644578063a22cb46514610659578063b88d4fde14610679578063c27a500d14610699578063c87b56dd146106bb57600080fd5b806387c35bc0116100f257806387c35bc0146105bb5780638802255f146105d05780638da5cb5b146105e657806394816f8314610604578063957a632e1461062457600080fd5b80636d1884e01461052c57806370a0823114610559578063715018a6146105795780637dc379fa1461058e57600080fd5b8063305a905a116101b15780635024885311610175578063502488531461048957806350b447121461049c5780636352211e146104cc57806365ec74b0146104ec57806367dd74ca1461051957600080fd5b8063305a905a1461039057806333a03d22146103b057806342842e0e146103d057806348c32093146103f05780634f6ccce71461046957600080fd5b80630b791430116101f85780630b791430146102db57806318160ddd1461031157806323b872dd146103305780632f745c5914610350578063305a67a81461037057600080fd5b806301ffc9a71461022a57806306fdde031461025f578063081812fc14610281578063095ea7b3146102b9575b600080fd5b34801561023657600080fd5b5061024a610245366004613462565b610828565b60405190151581526020015b60405180910390f35b34801561026b57600080fd5b50610274610853565b60405161025691906134d6565b34801561028d57600080fd5b506102a161029c3660046134e9565b6108e5565b6040516001600160a01b039091168152602001610256565b3480156102c557600080fd5b506102d96102d4366004613519565b61090e565b005b3480156102e757600080fd5b506102fb6102f63660046134e9565b61091d565b6040516102569a99989796959493929190613543565b34801561031d57600080fd5b506008545b604051908152602001610256565b34801561033c57600080fd5b506102d961034b3660046135c6565b610b19565b34801561035c57600080fd5b5061032261036b366004613519565b610ba9565b34801561037c57600080fd5b506102d961038b3660046134e9565b610c0e565b34801561039c57600080fd5b506102d96103ab366004613602565b610cfa565b3480156103bc57600080fd5b506102d96103cb3660046136d0565b610f2e565b3480156103dc57600080fd5b506102d96103eb3660046135c6565b610ffb565b3480156103fc57600080fd5b5061043f61040b3660046134e9565b601060205260009081526040902080546001820154600283015460039093015491926001600160a01b039091169160ff1684565b604080519485526001600160a01b0390931660208501529183015215156060820152608001610256565b34801561047557600080fd5b506103226104843660046134e9565b611016565b6102d96104973660046134e9565b61106f565b3480156104a857600080fd5b506104bc6104b73660046134e9565b611335565b6040516102569493929190613717565b3480156104d857600080fd5b506102a16104e73660046134e9565b6113e8565b3480156104f857600080fd5b5061050c610507366004613746565b6113f3565b6040516102569190613772565b6103226105273660046134e9565b611560565b34801561053857600080fd5b5061054c6105473660046134e9565b61186d565b604051610256919061385b565b34801561056557600080fd5b5061032261057436600461386e565b611aac565b34801561058557600080fd5b506102d9611af4565b34801561059a57600080fd5b506105ae6105a93660046134e9565b611b08565b6040516102569190613889565b3480156105c757600080fd5b5061050c611b7f565b3480156105dc57600080fd5b50610322600d5481565b3480156105f257600080fd5b50600a546001600160a01b03166102a1565b34801561061057600080fd5b5061032261061f3660046138c2565b611c80565b34801561063057600080fd5b506102d961063f3660046134e9565b611f47565b34801561065057600080fd5b50610274611f6d565b34801561066557600080fd5b506102d9610674366004613966565b611f7c565b34801561068557600080fd5b506102d96106943660046139a2565b611f87565b3480156106a557600080fd5b506106ae611f9e565b6040516102569190613a1e565b3480156106c757600080fd5b506102746106d63660046134e9565b612277565b3480156106e757600080fd5b506107676106f63660046134e9565b604080516080808201835260008083526020808401829052838501829052606093840182905294815260108552839020835191820184528054825260018101546001600160a01b03169482019490945260028401549281019290925260039092015460ff1615159181019190915290565b6040516102569190815181526020808301516001600160a01b0316908201526040808301519082015260609182015115159181019190915260800190565b3480156107b157600080fd5b50610322600c5481565b3480156107c757600080fd5b5061024a6107d6366004613a80565b6126d1565b3480156107e757600080fd5b506102d96107f636600461386e565b6126ff565b34801561080757600080fd5b506103226108163660046134e9565b60116020526000908152604090205481565b60006001600160e01b0319821663780e9d6360e01b148061084d575061084d8261273a565b92915050565b60606000805461086290613aaa565b80601f016020809104026020016040519081016040528092919081815260200182805461088e90613aaa565b80156108db5780601f106108b0576101008083540402835291602001916108db565b820191906000526020600020905b8154815290600101906020018083116108be57829003601f168201915b5050505050905090565b60006108f08261278a565b506000828152600460205260409020546001600160a01b031661084d565b6109198282336127c3565b5050565b600e602052600090815260409020805460018201805491929161093f90613aaa565b80601f016020809104026020016040519081016040528092919081815260200182805461096b90613aaa565b80156109b85780601f1061098d576101008083540402835291602001916109b8565b820191906000526020600020905b81548152906001019060200180831161099b57829003601f168201915b5050505050908060020180546109cd90613aaa565b80601f01602080910402602001604051908101604052809291908181526020018280546109f990613aaa565b8015610a465780601f10610a1b57610100808354040283529160200191610a46565b820191906000526020600020905b815481529060010190602001808311610a2957829003601f168201915b505050506003830154600484015460058501546006860154600787015460088801805497989597949650929491936001600160a01b03821693600160a01b90920460ff16929190610a9690613aaa565b80601f0160208091040260200160405190810160405280929190818152602001828054610ac290613aaa565b8015610b0f5780601f10610ae457610100808354040283529160200191610b0f565b820191906000526020600020905b815481529060010190602001808311610af257829003601f168201915b505050505090508a565b6001600160a01b038216610b4857604051633250574960e11b8152600060048201526024015b60405180910390fd5b6000610b558383336127d0565b9050836001600160a01b0316816001600160a01b031614610ba3576040516364283d7b60e01b81526001600160a01b0380861660048301526024820184905282166044820152606401610b3f565b50505050565b6000610bb483611aac565b8210610be55760405163295f44f760e21b81526001600160a01b038416600482015260248101839052604401610b3f565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b600081815260106020526040902060018101546001600160a01b03163314610c715760405162461bcd60e51b81526020600482015260166024820152752cb7ba9030b932903737ba103a34329039b2b63632b960511b6044820152606401610b3f565b600381015460ff16610cbd5760405162461bcd60e51b81526020600482015260156024820152744c697374696e67206973206e6f742061637469766560581b6044820152606401610b3f565b60038101805460ff19169055604051339083907f76c5d8a17d0bee8bd0e004133353cd78ede70ac9ace2aa18bf839e748caff29090600090a35050565b33610d04836113e8565b6001600160a01b031614610d565760405162461bcd60e51b8152602060048201526019602482015278165bdd48191bdb89dd081bdddb881d1a1a5cc81d1a58dad95d603a1b6044820152606401610b3f565b60008111610da65760405162461bcd60e51b815260206004820152601c60248201527f5072696365206d7573742062652067726561746572207468616e2030000000006044820152606401610b3f565b60008281526010602052604090206003015460ff1615610e085760405162461bcd60e51b815260206004820152601860248201527f5469636b657420697320616c7265616479206c697374656400000000000000006044820152606401610b3f565b600082815260116020908152604080832054808452600e909252909120600301544210610e835760405162461bcd60e51b815260206004820152602360248201527f43616e6e6f742073656c6c207469636b65747320666f722070617374206576656044820152626e747360e81b6064820152608401610b3f565b6040805160808101825284815233602080830182815283850187815260016060860181815260008b81526010865288902096518755925190860180546001600160a01b0319166001600160a01b03909216919091179055516002850155516003909301805460ff191693151593909317909255915184815285917f22968ec3be3687b180f3544163a034b88d57b48159d9a7e9a1b610fdb2d05f8091015b60405180910390a3505050565b33610f38836113e8565b6001600160a01b031614610f8a5760405162461bcd60e51b8152602060048201526019602482015278165bdd48191bdb89dd081bdddb881d1a1a5cc81d1a58dad95d603a1b6044820152606401610b3f565b6000815111610fdb5760405162461bcd60e51b815260206004820152601c60248201527f4d65746164617461205552492063616e6e6f7420626520656d707479000000006044820152606401610b3f565b6000828152600f60205260409020600301610ff68282613b2c565b505050565b610ff683838360405180602001604052806000815250611f87565b600061102160085490565b821061104a5760405163295f44f760e21b81526000600482015260248101839052604401610b3f565b6008828154811061105d5761105d613bec565b90600052602060002001549050919050565b611077612851565b6000818152601060205260409020600381015460ff166110d95760405162461bcd60e51b815260206004820152601d60248201527f5469636b6574206973206e6f74206c697374656420666f722073616c650000006044820152606401610b3f565b80600201543410156111245760405162461bcd60e51b8152602060048201526014602482015273125b9cdd59999a58da595b9d081c185e5b595b9d60621b6044820152606401610b3f565b60018101546001600160a01b031661113b836113e8565b6001600160a01b0316146111915760405162461bcd60e51b815260206004820181905260248201527f53656c6c6572206e6f206c6f6e676572206f776e7320746865207469636b65746044820152606401610b3f565b600082815260116020908152604080832054808452600e90925290912060030154421061120b5760405162461bcd60e51b815260206004820152602260248201527f43616e6e6f7420627579207469636b65747320666f722070617374206576656e604482015261747360f01b6064820152608401610b3f565b6001820154600283015460038401805460ff191690556001600160a01b039091169061123882338761287b565b6000826001600160a01b03163460405160006040518083038185875af1925050503d8060008114611285576040519150601f19603f3d011682016040523d82523d6000602084013e61128a565b606091505b50509050806112d55760405162461bcd60e51b815260206004820152601760248201527614185e5b595b9d081d1c985b9cd9995c8819985a5b1959604a1b6044820152606401610b3f565b336001600160a01b0316836001600160a01b0316877f2bbc64d6afd28a753f6c5e4aaa894f1d684c44a0e080167eae104ac8505cfebd8560405161131b91815260200190565b60405180910390a450505050506113326001600b55565b50565b600f6020526000908152604090208054600182015460028301546003840180549394929391929161136590613aaa565b80601f016020809104026020016040519081016040528092919081815260200182805461139190613aaa565b80156113de5780601f106113b3576101008083540402835291602001916113de565b820191906000526020600020905b8154815290600101906020018083116113c157829003601f168201915b5050505050905084565b600061084d8261278a565b6060600061140083611aac565b905060008167ffffffffffffffff81111561141d5761141d613624565b604051908082528060200260200182016040528015611446578160200160208202803683370190505b5090506000805b838110156114b95760006114618783610ba9565b6000818152601160205260409020549091508890036114a6578084848151811061148d5761148d613bec565b6020908102919091010152826114a281613c18565b9350505b50806114b181613c18565b91505061144d565b5060008167ffffffffffffffff8111156114d5576114d5613624565b6040519080825280602002602001820160405280156114fe578160200160208202803683370190505b50905060005b828110156115555783818151811061151e5761151e613bec565b602002602001015182828151811061153857611538613bec565b60209081029190910101528061154d81613c18565b915050611504565b509695505050505050565b600061156a612851565b6000828152600e602052604090206007810154600160a01b900460ff166115c95760405162461bcd60e51b81526020600482015260136024820152724576656e74206973206e6f742061637469766560681b6044820152606401610b3f565b80600501548160060154106116145760405162461bcd60e51b8152602060048201526011602482015270115d995b9d081a5cc81cdbdb19081bdd5d607a1b6044820152606401610b3f565b806004015434101561165f5760405162461bcd60e51b8152602060048201526014602482015273125b9cdd59999a58da595b9d081c185e5b595b9d60621b6044820152606401610b3f565b806003015442106116b25760405162461bcd60e51b815260206004820152601860248201527f4576656e742068617320616c72656164792070617373656400000000000000006044820152606401610b3f565b600d80549060006116c283613c18565b9091555050600d5460068201546000906116dd906001613c31565b60068401805491925060006116f183613c18565b909155505060408051608081018252838152602080820188815282840185815284518084018652600080825260608601918252888152600f90945294909220835181559051600182015590516002820155915190919060038201906117569082613b2c565b5050506000828152601160205260409020859055611774338361292b565b60078301546040516000916001600160a01b03169034908381818185875af1925050503d80600081146117c3576040519150601f19603f3d011682016040523d82523d6000602084013e6117c8565b606091505b50509050806118135760405162461bcd60e51b815260206004820152601760248201527614185e5b595b9d081d1c985b9cd9995c8819985a5b1959604a1b6044820152606401610b3f565b336001600160a01b031686847f4fe0f5bb11eb6ab81c428fb83261719e5b22f84b3e1942cd491c3777504bb8518560405161185091815260200190565b60405180910390a45090925050506118686001600b55565b919050565b6118756133ee565b600e600083815260200190815260200160002060405180610140016040529081600082015481526020016001820180546118ae90613aaa565b80601f01602080910402602001604051908101604052809291908181526020018280546118da90613aaa565b80156119275780601f106118fc57610100808354040283529160200191611927565b820191906000526020600020905b81548152906001019060200180831161190a57829003601f168201915b5050505050815260200160028201805461194090613aaa565b80601f016020809104026020016040519081016040528092919081815260200182805461196c90613aaa565b80156119b95780601f1061198e576101008083540402835291602001916119b9565b820191906000526020600020905b81548152906001019060200180831161199c57829003601f168201915b50505091835250506003820154602082015260048201546040820152600582015460608201526006820154608082015260078201546001600160a01b03811660a0830152600160a01b900460ff16151560c082015260088201805460e090920191611a2390613aaa565b80601f0160208091040260200160405190810160405280929190818152602001828054611a4f90613aaa565b8015611a9c5780601f10611a7157610100808354040283529160200191611a9c565b820191906000526020600020905b815481529060010190602001808311611a7f57829003601f168201915b5050505050815250509050919050565b60006001600160a01b038216611ad8576040516322718ad960e21b815260006004820152602401610b3f565b506001600160a01b031660009081526003602052604090205490565b611afc612945565b611b066000612972565b565b611b336040518060800160405280600081526020016000815260200160008152602001606081525090565b600f6000838152602001908152602001600020604051806080016040529081600082015481526020016001820154815260200160028201548152602001600382018054611a2390613aaa565b6060600060015b600d548111611bc95760008181526010602052604090206003015460ff1615611bb75781611bb381613c18565b9250505b80611bc181613c18565b915050611b86565b5060008167ffffffffffffffff811115611be557611be5613624565b604051908082528060200260200182016040528015611c0e578160200160208202803683370190505b509050600060015b600d548111611c775760008181526010602052604090206003015460ff1615611c655780838381518110611c4c57611c4c613bec565b602090810291909101015281611c6181613c18565b9250505b80611c6f81613c18565b915050611c16565b50909392505050565b6000428511611cd15760405162461bcd60e51b815260206004820181905260248201527f4576656e742064617465206d75737420626520696e20746865206675747572656044820152606401610b3f565b60008411611d2d5760405162461bcd60e51b815260206004820152602360248201527f5469636b6574207072696365206d75737420626520677265617465722074686160448201526206e20360ec1b6064820152608401610b3f565b60008311611d875760405162461bcd60e51b815260206004820152602160248201527f4d617820737570706c79206d7573742062652067726561746572207468616e206044820152600360fc1b6064820152608401610b3f565b6000875111611dd85760405162461bcd60e51b815260206004820152601a60248201527f4576656e74206e616d652063616e6e6f7420626520656d7074790000000000006044820152606401610b3f565b600c8054906000611de883613c18565b9091555050600c54604080516101408101825282815260208082018b81528284018b9052606083018a90526080830189905260a08301889052600060c084018190523360e0850152600161010085018190526101208501899052868252600e9093529390932082518155925191929190820190611e659082613b2c565b5060408201516002820190611e7a9082613b2c565b50606082015160038201556080820151600482015560a0820151600582015560c0820151600682015560e08201516007820180546101008501511515600160a01b026001600160a81b03199091166001600160a01b03909316929092179190911790556101208201516008820190611ef29082613b2c565b50905050336001600160a01b0316817f81f945738beff591c3eab232e9f3265ce3f12263a2ec7acf84db8dc0fce26a278a8888604051611f3493929190613c44565b60405180910390a3979650505050505050565b611f4f612945565b6000908152600e60205260409020600701805460ff60a01b19169055565b60606001805461086290613aaa565b6109193383836129c4565b611f92848484610b19565b610ba384848484612a5b565b60606000600c5467ffffffffffffffff811115611fbd57611fbd613624565b604051908082528060200260200182016040528015611ff657816020015b611fe36133ee565b815260200190600190039081611fdb5790505b50905060015b600c54811161227157600e6000828152602001908152602001600020604051806101400160405290816000820154815260200160018201805461203e90613aaa565b80601f016020809104026020016040519081016040528092919081815260200182805461206a90613aaa565b80156120b75780601f1061208c576101008083540402835291602001916120b7565b820191906000526020600020905b81548152906001019060200180831161209a57829003601f168201915b505050505081526020016002820180546120d090613aaa565b80601f01602080910402602001604051908101604052809291908181526020018280546120fc90613aaa565b80156121495780601f1061211e57610100808354040283529160200191612149565b820191906000526020600020905b81548152906001019060200180831161212c57829003601f168201915b50505091835250506003820154602082015260048201546040820152600582015460608201526006820154608082015260078201546001600160a01b03811660a0830152600160a01b900460ff16151560c082015260088201805460e0909201916121b390613aaa565b80601f01602080910402602001604051908101604052809291908181526020018280546121df90613aaa565b801561222c5780601f106122015761010080835404028352916020019161222c565b820191906000526020600020905b81548152906001019060200180831161220f57829003601f168201915b505050505081525050826001836122439190613c69565b8151811061225357612253613bec565b6020026020010181905250808061226990613c18565b915050611ffc565b50919050565b60606122828261278a565b506000828152600f60205260408120600301805461229f90613aaa565b80601f01602080910402602001604051908101604052809291908181526020018280546122cb90613aaa565b80156123185780601f106122ed57610100808354040283529160200191612318565b820191906000526020600020905b8154815290600101906020018083116122fb57829003601f168201915b50505050509050600081511115612351578060405160200161233a9190613c98565b604051602081830303815290604052915050919050565b6000600f600085815260200190815260200160002060405180608001604052908160008201548152602001600182015481526020016002820154815260200160038201805461239f90613aaa565b80601f01602080910402602001604051908101604052809291908181526020018280546123cb90613aaa565b80156124185780601f106123ed57610100808354040283529160200191612418565b820191906000526020600020905b8154815290600101906020018083116123fb57829003601f168201915b50505050508152505090506000600e600083602001518152602001908152602001600020604051806101400160405290816000820154815260200160018201805461246290613aaa565b80601f016020809104026020016040519081016040528092919081815260200182805461248e90613aaa565b80156124db5780601f106124b0576101008083540402835291602001916124db565b820191906000526020600020905b8154815290600101906020018083116124be57829003601f168201915b505050505081526020016002820180546124f490613aaa565b80601f016020809104026020016040519081016040528092919081815260200182805461252090613aaa565b801561256d5780601f106125425761010080835404028352916020019161256d565b820191906000526020600020905b81548152906001019060200180831161255057829003601f168201915b50505091835250506003820154602082015260048201546040820152600582015460608201526006820154608082015260078201546001600160a01b03811660a0830152600160a01b900460ff16151560c082015260088201805460e0909201916125d790613aaa565b80601f016020809104026020016040519081016040528092919081815260200182805461260390613aaa565b80156126505780601f1061262557610100808354040283529160200191612650565b820191906000526020600020905b81548152906001019060200180831161263357829003601f168201915b50505050508152505090506000816020015161266f8460400151612b84565b836040015184610120015160405160200161268d9493929190613cc7565b60405160208183030381529060405290506126a781612c17565b6040516020016126b79190613dad565b604051602081830303815290604052945050505050919050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b612707612945565b6001600160a01b03811661273157604051631e4fbdf760e01b815260006004820152602401610b3f565b61133281612972565b60006001600160e01b031982166380ac58cd60e01b148061276b57506001600160e01b03198216635b5e139f60e01b145b8061084d57506301ffc9a760e01b6001600160e01b031983161461084d565b6000818152600260205260408120546001600160a01b03168061084d57604051637e27328960e01b815260048101849052602401610b3f565b610ff68383836001612d77565b60008281526010602052604081206003015460ff161561283e5760008381526010602052604080822060038101805460ff191690556001015490516001600160a01b039091169185917f76c5d8a17d0bee8bd0e004133353cd78ede70ac9ace2aa18bf839e748caff2909190a35b612849848484612e7d565b949350505050565b6002600b540361287457604051633ee5aeb560e01b815260040160405180910390fd5b6002600b55565b6001600160a01b0382166128a557604051633250574960e11b815260006004820152602401610b3f565b60006128b3838360006127d0565b90506001600160a01b0381166128df57604051637e27328960e01b815260048101839052602401610b3f565b836001600160a01b0316816001600160a01b031614610ba3576040516364283d7b60e01b81526001600160a01b0380861660048301526024820184905282166044820152606401610b3f565b610919828260405180602001604052806000815250612f4a565b600a546001600160a01b03163314611b065760405163118cdaa760e01b8152336004820152602401610b3f565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166129f657604051630b61174360e31b81526001600160a01b0383166004820152602401610b3f565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319101610f21565b6001600160a01b0383163b15610ba357604051630a85bd0160e11b81526001600160a01b0384169063150b7a0290612a9d903390889087908790600401613df2565b6020604051808303816000875af1925050508015612ad8575060408051601f3d908101601f19168201909252612ad591810190613e25565b60015b612b41573d808015612b06576040519150601f19603f3d011682016040523d82523d6000602084013e612b0b565b606091505b508051600003612b3957604051633250574960e11b81526001600160a01b0385166004820152602401610b3f565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b14612b7d57604051633250574960e11b81526001600160a01b0385166004820152602401610b3f565b5050505050565b60606000612b9183612f61565b600101905060008167ffffffffffffffff811115612bb157612bb1613624565b6040519080825280601f01601f191660200182016040528015612bdb576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084612be557509392505050565b60608151600003612c3657505060408051602081019091526000815290565b6000604051806060016040528060408152602001613e926040913990506000600384516002612c659190613c31565b612c6f9190613e42565b612c7a906004613e64565b67ffffffffffffffff811115612c9257612c92613624565b6040519080825280601f01601f191660200182016040528015612cbc576020820181803683370190505b50905060018201602082018586518701602081018051600082525b82841015612d32576003840193508351603f8160121c168701518653600186019550603f81600c1c168701518653600186019550603f8160061c168701518653600186019550603f8116870151865350600185019450612cd7565b9052505085516003900660018114612d515760028114612d6457612d6c565b603d6001830353603d6002830353612d6c565b603d60018303535b509195945050505050565b8080612d8b57506001600160a01b03821615155b15612e4d576000612d9b8461278a565b90506001600160a01b03831615801590612dc75750826001600160a01b0316816001600160a01b031614155b8015612dda5750612dd881846126d1565b155b15612e035760405163a9fbf51f60e01b81526001600160a01b0384166004820152602401610b3f565b8115612e4b5783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5050600090815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b600080612e8b858585613039565b90506001600160a01b038116612ee857612ee384600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b612f0b565b846001600160a01b0316816001600160a01b031614612f0b57612f0b8185613132565b6001600160a01b038516612f2757612f22846131c3565b612849565b846001600160a01b0316816001600160a01b031614612849576128498585613272565b612f5483836132c2565b610ff66000848484612a5b565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310612fa05772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310612fcc576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310612fea57662386f26fc10000830492506010015b6305f5e1008310613002576305f5e100830492506008015b612710831061301657612710830492506004015b60648310613028576064830492506002015b600a831061084d5760010192915050565b6000828152600260205260408120546001600160a01b039081169083161561306657613066818486613327565b6001600160a01b038116156130a457613083600085600080612d77565b6001600160a01b038116600090815260036020526040902080546000190190555b6001600160a01b038516156130d3576001600160a01b0385166000908152600360205260409020805460010190555b60008481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b600061313d83611aac565b600083815260076020526040902054909150808214613190576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b6008546000906131d590600190613c69565b600083815260096020526040812054600880549394509092849081106131fd576131fd613bec565b90600052602060002001549050806008838154811061321e5761321e613bec565b600091825260208083209091019290925582815260099091526040808220849055858252812055600880548061325657613256613e7b565b6001900381819060005260206000200160009055905550505050565b6000600161327f84611aac565b6132899190613c69565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b6001600160a01b0382166132ec57604051633250574960e11b815260006004820152602401610b3f565b60006132fa838360006127d0565b90506001600160a01b03811615610ff6576040516339e3563760e11b815260006004820152602401610b3f565b61333283838361338b565b610ff6576001600160a01b03831661336057604051637e27328960e01b815260048101829052602401610b3f565b60405163177e802f60e01b81526001600160a01b038316600482015260248101829052604401610b3f565b60006001600160a01b038316158015906128495750826001600160a01b0316846001600160a01b031614806133c557506133c584846126d1565b806128495750506000908152600460205260409020546001600160a01b03908116911614919050565b6040518061014001604052806000815260200160608152602001606081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b03168152602001600015158152602001606081525090565b6001600160e01b03198116811461133257600080fd5b60006020828403121561347457600080fd5b813561347f8161344c565b9392505050565b60005b838110156134a1578181015183820152602001613489565b50506000910152565b600081518084526134c2816020860160208601613486565b601f01601f19169290920160200192915050565b60208152600061347f60208301846134aa565b6000602082840312156134fb57600080fd5b5035919050565b80356001600160a01b038116811461186857600080fd5b6000806040838503121561352c57600080fd5b61353583613502565b946020939093013593505050565b60006101408c835280602084015261355d8184018d6134aa565b90508281036040840152613571818c6134aa565b90508960608401528860808401528760a08401528660c084015260018060a01b03861660e08401528415156101008401528281036101208401526135b581856134aa565b9d9c50505050505050505050505050565b6000806000606084860312156135db57600080fd5b6135e484613502565b92506135f260208501613502565b9150604084013590509250925092565b6000806040838503121561361557600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561365557613655613624565b604051601f8501601f19908116603f0116810190828211818310171561367d5761367d613624565b8160405280935085815286868601111561369657600080fd5b858560208301376000602087830101525050509392505050565b600082601f8301126136c157600080fd5b61347f8383356020850161363a565b600080604083850312156136e357600080fd5b82359150602083013567ffffffffffffffff81111561370157600080fd5b61370d858286016136b0565b9150509250929050565b84815283602082015282604082015260806060820152600061373c60808301846134aa565b9695505050505050565b6000806040838503121561375957600080fd5b8235915061376960208401613502565b90509250929050565b6020808252825182820181905260009190848201906040850190845b818110156137aa5783518352928401929184019160010161378e565b50909695505050505050565b60006101408251845260208301518160208601526137d6828601826134aa565b915050604083015184820360408601526137f082826134aa565b915050606083015160608501526080830151608085015260a083015160a085015260c083015160c085015260e083015161383560e08601826001600160a01b03169052565b5061010083810151151590850152610120808401518583038287015261373c83826134aa565b60208152600061347f60208301846137b6565b60006020828403121561388057600080fd5b61347f82613502565b602081528151602082015260208201516040820152604082015160608201526000606083015160808084015261284960a08401826134aa565b60008060008060008060c087890312156138db57600080fd5b863567ffffffffffffffff808211156138f357600080fd5b6138ff8a838b016136b0565b9750602089013591508082111561391557600080fd5b6139218a838b016136b0565b965060408901359550606089013594506080890135935060a089013591508082111561394c57600080fd5b5061395989828a016136b0565b9150509295509295509295565b6000806040838503121561397957600080fd5b61398283613502565b91506020830135801515811461399757600080fd5b809150509250929050565b600080600080608085870312156139b857600080fd5b6139c185613502565b93506139cf60208601613502565b925060408501359150606085013567ffffffffffffffff8111156139f257600080fd5b8501601f81018713613a0357600080fd5b613a128782356020840161363a565b91505092959194509250565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015613a7357603f19888603018452613a618583516137b6565b94509285019290850190600101613a45565b5092979650505050505050565b60008060408385031215613a9357600080fd5b613a9c83613502565b915061376960208401613502565b600181811c90821680613abe57607f821691505b60208210810361227157634e487b7160e01b600052602260045260246000fd5b601f821115610ff657600081815260208120601f850160051c81016020861015613b055750805b601f850160051c820191505b81811015613b2457828155600101613b11565b505050505050565b815167ffffffffffffffff811115613b4657613b46613624565b613b5a81613b548454613aaa565b84613ade565b602080601f831160018114613b8f5760008415613b775750858301515b600019600386901b1c1916600185901b178555613b24565b600085815260208120601f198616915b82811015613bbe57888601518255948401946001909101908401613b9f565b5085821015613bdc5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201613c2a57613c2a613c02565b5060010190565b8082018082111561084d5761084d613c02565b606081526000613c5760608301866134aa565b60208301949094525060400152919050565b8181038181111561084d5761084d613c02565b60008151613c8e818560208601613486565b9290920192915050565b66697066733a2f2f60c81b815260008251613cba816007850160208701613486565b9190910160070192915050565b607b60f81b815267113730b6b2911d1160c11b60018201528451600090613cf5816009850160208a01613486565b61202360f01b6009918401918201528551613d1781600b840160208a01613486565b61088b60f21b600b929091019182018190526e113232b9b1b934b83a34b7b7111d1160891b600d8301528551613d5481601c850160208a01613486565b601c9201918201526f22696d616765223a22697066733a2f2f60801b601e820152613da2613d95613d88602e840187613c7c565b601160f91b815260010190565b607d60f81b815260010190565b979650505050505050565b7f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c000000815260008251613de581601d850160208701613486565b91909101601d0192915050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061373c908301846134aa565b600060208284031215613e3757600080fd5b815161347f8161344c565b600082613e5f57634e487b7160e01b600052601260045260246000fd5b500490565b808202811582820484141761084d5761084d613c02565b634e487b7160e01b600052603160045260246000fdfe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa264697066735822122024aed8dc9b73883b97747ad84b4d9df09649fbcdcff59d41ef98ceb1f708ddc164736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x225 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6D1884E0 GT PUSH2 0x123 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xD5A87ECB GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xD5A87ECB EQ PUSH2 0x6DB JUMPI DUP1 PUSH4 0xE01A0EBE EQ PUSH2 0x7A5 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x7BB JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x7DB JUMPI DUP1 PUSH4 0xF6AC04DA EQ PUSH2 0x7FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x644 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x659 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x679 JUMPI DUP1 PUSH4 0xC27A500D EQ PUSH2 0x699 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x6BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x87C35BC0 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x87C35BC0 EQ PUSH2 0x5BB JUMPI DUP1 PUSH4 0x8802255F EQ PUSH2 0x5D0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x5E6 JUMPI DUP1 PUSH4 0x94816F83 EQ PUSH2 0x604 JUMPI DUP1 PUSH4 0x957A632E EQ PUSH2 0x624 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6D1884E0 EQ PUSH2 0x52C JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x559 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x579 JUMPI DUP1 PUSH4 0x7DC379FA EQ PUSH2 0x58E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x305A905A GT PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x50248853 GT PUSH2 0x175 JUMPI DUP1 PUSH4 0x50248853 EQ PUSH2 0x489 JUMPI DUP1 PUSH4 0x50B44712 EQ PUSH2 0x49C JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x4CC JUMPI DUP1 PUSH4 0x65EC74B0 EQ PUSH2 0x4EC JUMPI DUP1 PUSH4 0x67DD74CA EQ PUSH2 0x519 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x305A905A EQ PUSH2 0x390 JUMPI DUP1 PUSH4 0x33A03D22 EQ PUSH2 0x3B0 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x3D0 JUMPI DUP1 PUSH4 0x48C32093 EQ PUSH2 0x3F0 JUMPI DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x469 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB791430 GT PUSH2 0x1F8 JUMPI DUP1 PUSH4 0xB791430 EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x311 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x330 JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x350 JUMPI DUP1 PUSH4 0x305A67A8 EQ PUSH2 0x370 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2B9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x236 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24A PUSH2 0x245 CALLDATASIZE PUSH1 0x4 PUSH2 0x3462 JUMP JUMPDEST PUSH2 0x828 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x274 PUSH2 0x853 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x256 SWAP2 SWAP1 PUSH2 0x34D6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A1 PUSH2 0x29C CALLDATASIZE PUSH1 0x4 PUSH2 0x34E9 JUMP JUMPDEST PUSH2 0x8E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x256 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D9 PUSH2 0x2D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x3519 JUMP JUMPDEST PUSH2 0x90E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2FB PUSH2 0x2F6 CALLDATASIZE PUSH1 0x4 PUSH2 0x34E9 JUMP JUMPDEST PUSH2 0x91D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x256 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3543 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x256 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D9 PUSH2 0x34B CALLDATASIZE PUSH1 0x4 PUSH2 0x35C6 JUMP JUMPDEST PUSH2 0xB19 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x322 PUSH2 0x36B CALLDATASIZE PUSH1 0x4 PUSH2 0x3519 JUMP JUMPDEST PUSH2 0xBA9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D9 PUSH2 0x38B CALLDATASIZE PUSH1 0x4 PUSH2 0x34E9 JUMP JUMPDEST PUSH2 0xC0E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D9 PUSH2 0x3AB CALLDATASIZE PUSH1 0x4 PUSH2 0x3602 JUMP JUMPDEST PUSH2 0xCFA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D9 PUSH2 0x3CB CALLDATASIZE PUSH1 0x4 PUSH2 0x36D0 JUMP JUMPDEST PUSH2 0xF2E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D9 PUSH2 0x3EB CALLDATASIZE PUSH1 0x4 PUSH2 0x35C6 JUMP JUMPDEST PUSH2 0xFFB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x43F PUSH2 0x40B CALLDATASIZE PUSH1 0x4 PUSH2 0x34E9 JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH1 0xFF AND DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x20 DUP6 ADD MSTORE SWAP2 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x256 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x475 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x322 PUSH2 0x484 CALLDATASIZE PUSH1 0x4 PUSH2 0x34E9 JUMP JUMPDEST PUSH2 0x1016 JUMP JUMPDEST PUSH2 0x2D9 PUSH2 0x497 CALLDATASIZE PUSH1 0x4 PUSH2 0x34E9 JUMP JUMPDEST PUSH2 0x106F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4BC PUSH2 0x4B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x34E9 JUMP JUMPDEST PUSH2 0x1335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x256 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3717 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A1 PUSH2 0x4E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x34E9 JUMP JUMPDEST PUSH2 0x13E8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x50C PUSH2 0x507 CALLDATASIZE PUSH1 0x4 PUSH2 0x3746 JUMP JUMPDEST PUSH2 0x13F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x256 SWAP2 SWAP1 PUSH2 0x3772 JUMP JUMPDEST PUSH2 0x322 PUSH2 0x527 CALLDATASIZE PUSH1 0x4 PUSH2 0x34E9 JUMP JUMPDEST PUSH2 0x1560 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x538 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x54C PUSH2 0x547 CALLDATASIZE PUSH1 0x4 PUSH2 0x34E9 JUMP JUMPDEST PUSH2 0x186D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x256 SWAP2 SWAP1 PUSH2 0x385B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x565 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x322 PUSH2 0x574 CALLDATASIZE PUSH1 0x4 PUSH2 0x386E JUMP JUMPDEST PUSH2 0x1AAC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x585 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D9 PUSH2 0x1AF4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x59A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5AE PUSH2 0x5A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x34E9 JUMP JUMPDEST PUSH2 0x1B08 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x256 SWAP2 SWAP1 PUSH2 0x3889 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x50C PUSH2 0x1B7F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x322 PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2A1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x610 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x322 PUSH2 0x61F CALLDATASIZE PUSH1 0x4 PUSH2 0x38C2 JUMP JUMPDEST PUSH2 0x1C80 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x630 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D9 PUSH2 0x63F CALLDATASIZE PUSH1 0x4 PUSH2 0x34E9 JUMP JUMPDEST PUSH2 0x1F47 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x650 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x274 PUSH2 0x1F6D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x665 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D9 PUSH2 0x674 CALLDATASIZE PUSH1 0x4 PUSH2 0x3966 JUMP JUMPDEST PUSH2 0x1F7C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x685 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D9 PUSH2 0x694 CALLDATASIZE PUSH1 0x4 PUSH2 0x39A2 JUMP JUMPDEST PUSH2 0x1F87 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6AE PUSH2 0x1F9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x256 SWAP2 SWAP1 PUSH2 0x3A1E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x274 PUSH2 0x6D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x34E9 JUMP JUMPDEST PUSH2 0x2277 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x767 PUSH2 0x6F6 CALLDATASIZE PUSH1 0x4 PUSH2 0x34E9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP1 DUP3 ADD DUP4 MSTORE PUSH1 0x0 DUP1 DUP4 MSTORE PUSH1 0x20 DUP1 DUP5 ADD DUP3 SWAP1 MSTORE DUP4 DUP6 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 SWAP4 DUP5 ADD DUP3 SWAP1 MSTORE SWAP5 DUP2 MSTORE PUSH1 0x10 DUP6 MSTORE DUP4 SWAP1 KECCAK256 DUP4 MLOAD SWAP2 DUP3 ADD DUP5 MSTORE DUP1 SLOAD DUP3 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x2 DUP5 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x256 SWAP2 SWAP1 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x60 SWAP2 DUP3 ADD MLOAD ISZERO ISZERO SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x322 PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24A PUSH2 0x7D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x3A80 JUMP JUMPDEST PUSH2 0x26D1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D9 PUSH2 0x7F6 CALLDATASIZE PUSH1 0x4 PUSH2 0x386E JUMP JUMPDEST PUSH2 0x26FF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x807 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x322 PUSH2 0x816 CALLDATASIZE PUSH1 0x4 PUSH2 0x34E9 JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x780E9D63 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x84D JUMPI POP PUSH2 0x84D DUP3 PUSH2 0x273A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x862 SWAP1 PUSH2 0x3AAA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x88E SWAP1 PUSH2 0x3AAA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8DB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8B0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8DB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8BE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F0 DUP3 PUSH2 0x278A JUMP JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x84D JUMP JUMPDEST PUSH2 0x919 DUP3 DUP3 CALLER PUSH2 0x27C3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD SWAP2 SWAP3 SWAP2 PUSH2 0x93F SWAP1 PUSH2 0x3AAA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x96B SWAP1 PUSH2 0x3AAA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9B8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x98D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9B8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x99B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x9CD SWAP1 PUSH2 0x3AAA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x9F9 SWAP1 PUSH2 0x3AAA JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA46 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA1B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA46 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA29 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x5 DUP6 ADD SLOAD PUSH1 0x6 DUP7 ADD SLOAD PUSH1 0x7 DUP8 ADD SLOAD PUSH1 0x8 DUP9 ADD DUP1 SLOAD SWAP8 SWAP9 SWAP6 SWAP8 SWAP5 SWAP7 POP SWAP3 SWAP5 SWAP2 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP4 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP3 DIV PUSH1 0xFF AND SWAP3 SWAP2 SWAP1 PUSH2 0xA96 SWAP1 PUSH2 0x3AAA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xAC2 SWAP1 PUSH2 0x3AAA JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB0F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAE4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB0F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAF2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP11 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB48 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB55 DUP4 DUP4 CALLER PUSH2 0x27D0 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xBA3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x64283D7B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB3F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBB4 DUP4 PUSH2 0x1AAC JUMP JUMPDEST DUP3 LT PUSH2 0xBE5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x295F44F7 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0xB3F JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC71 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x2CB7BA9030B932903737BA103A34329039B2B63632B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB3F JUMP JUMPDEST PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0xFF AND PUSH2 0xCBD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4C697374696E67206973206E6F7420616374697665 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB3F JUMP JUMPDEST PUSH1 0x3 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD CALLER SWAP1 DUP4 SWAP1 PUSH32 0x76C5D8A17D0BEE8BD0E004133353CD78EDE70AC9ACE2AA18BF839E748CAFF290 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST CALLER PUSH2 0xD04 DUP4 PUSH2 0x13E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xD56 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x165BDD48191BDB89DD081BDDDB881D1A1A5CC81D1A58DAD95D PUSH1 0x3A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB3F JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xDA6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5072696365206D7573742062652067726561746572207468616E203000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB3F JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xE08 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5469636B657420697320616C7265616479206C69737465640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB3F JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP1 DUP5 MSTORE PUSH1 0xE SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 PUSH1 0x3 ADD SLOAD TIMESTAMP LT PUSH2 0xE83 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742073656C6C207469636B65747320666F72207061737420657665 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x6E7473 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB3F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE DUP5 DUP2 MSTORE CALLER PUSH1 0x20 DUP1 DUP4 ADD DUP3 DUP2 MSTORE DUP4 DUP6 ADD DUP8 DUP2 MSTORE PUSH1 0x1 PUSH1 0x60 DUP7 ADD DUP2 DUP2 MSTORE PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x10 DUP7 MSTORE DUP9 SWAP1 KECCAK256 SWAP7 MLOAD DUP8 SSTORE SWAP3 MLOAD SWAP1 DUP7 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE MLOAD PUSH1 0x2 DUP6 ADD SSTORE MLOAD PUSH1 0x3 SWAP1 SWAP4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP4 ISZERO ISZERO SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 DUP2 MSTORE DUP6 SWAP2 PUSH32 0x22968EC3BE3687B180F3544163A034B88D57B48159D9A7E9A1B610FDB2D05F80 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST CALLER PUSH2 0xF38 DUP4 PUSH2 0x13E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xF8A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x165BDD48191BDB89DD081BDDDB881D1A1A5CC81D1A58DAD95D PUSH1 0x3A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB3F JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT PUSH2 0xFDB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D65746164617461205552492063616E6E6F7420626520656D70747900000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB3F JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD PUSH2 0xFF6 DUP3 DUP3 PUSH2 0x3B2C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xFF6 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1F87 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1021 PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST DUP3 LT PUSH2 0x104A JUMPI PUSH1 0x40 MLOAD PUSH4 0x295F44F7 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0xB3F JUMP JUMPDEST PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x105D JUMPI PUSH2 0x105D PUSH2 0x3BEC JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1077 PUSH2 0x2851 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0xFF AND PUSH2 0x10D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5469636B6574206973206E6F74206C697374656420666F722073616C65000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB3F JUMP JUMPDEST DUP1 PUSH1 0x2 ADD SLOAD CALLVALUE LT ISZERO PUSH2 0x1124 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x125B9CDD59999A58DA595B9D081C185E5B595B9D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB3F JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x113B DUP4 PUSH2 0x13E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1191 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656C6C6572206E6F206C6F6E676572206F776E7320746865207469636B6574 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB3F JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP1 DUP5 MSTORE PUSH1 0xE SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 PUSH1 0x3 ADD SLOAD TIMESTAMP LT PUSH2 0x120B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F7420627579207469636B65747320666F722070617374206576656E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7473 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB3F JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH2 0x1238 DUP3 CALLER DUP8 PUSH2 0x287B JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLVALUE PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1285 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x128A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x12D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x14185E5B595B9D081D1C985B9CD9995C8819985A5B1959 PUSH1 0x4A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB3F JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH32 0x2BBC64D6AFD28A753F6C5E4AAA894F1D684C44A0E080167EAE104AC8505CFEBD DUP6 PUSH1 0x40 MLOAD PUSH2 0x131B SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP PUSH2 0x1332 PUSH1 0x1 PUSH1 0xB SSTORE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD DUP1 SLOAD SWAP4 SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 SWAP2 PUSH2 0x1365 SWAP1 PUSH2 0x3AAA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1391 SWAP1 PUSH2 0x3AAA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x13DE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x13B3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x13DE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x13C1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x84D DUP3 PUSH2 0x278A JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1400 DUP4 PUSH2 0x1AAC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x141D JUMPI PUSH2 0x141D PUSH2 0x3624 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1446 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x14B9 JUMPI PUSH1 0x0 PUSH2 0x1461 DUP8 DUP4 PUSH2 0xBA9 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP9 SWAP1 SUB PUSH2 0x14A6 JUMPI DUP1 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x148D JUMPI PUSH2 0x148D PUSH2 0x3BEC JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP3 PUSH2 0x14A2 DUP2 PUSH2 0x3C18 JUMP JUMPDEST SWAP4 POP POP JUMPDEST POP DUP1 PUSH2 0x14B1 DUP2 PUSH2 0x3C18 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x144D JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14D5 JUMPI PUSH2 0x14D5 PUSH2 0x3624 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x14FE JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1555 JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x151E JUMPI PUSH2 0x151E PUSH2 0x3BEC JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1538 JUMPI PUSH2 0x1538 PUSH2 0x3BEC JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x154D DUP2 PUSH2 0x3C18 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1504 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x156A PUSH2 0x2851 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x15C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x4576656E74206973206E6F7420616374697665 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB3F JUMP JUMPDEST DUP1 PUSH1 0x5 ADD SLOAD DUP2 PUSH1 0x6 ADD SLOAD LT PUSH2 0x1614 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x115D995B9D081A5CC81CDBDB19081BDD5D PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB3F JUMP JUMPDEST DUP1 PUSH1 0x4 ADD SLOAD CALLVALUE LT ISZERO PUSH2 0x165F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x125B9CDD59999A58DA595B9D081C185E5B595B9D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB3F JUMP JUMPDEST DUP1 PUSH1 0x3 ADD SLOAD TIMESTAMP LT PUSH2 0x16B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4576656E742068617320616C7265616479207061737365640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB3F JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x16C2 DUP4 PUSH2 0x3C18 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xD SLOAD PUSH1 0x6 DUP3 ADD SLOAD PUSH1 0x0 SWAP1 PUSH2 0x16DD SWAP1 PUSH1 0x1 PUSH2 0x3C31 JUMP JUMPDEST PUSH1 0x6 DUP5 ADD DUP1 SLOAD SWAP2 SWAP3 POP PUSH1 0x0 PUSH2 0x16F1 DUP4 PUSH2 0x3C18 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP9 DUP2 MSTORE DUP3 DUP5 ADD DUP6 DUP2 MSTORE DUP5 MLOAD DUP1 DUP5 ADD DUP7 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x60 DUP7 ADD SWAP2 DUP3 MSTORE DUP9 DUP2 MSTORE PUSH1 0xF SWAP1 SWAP5 MSTORE SWAP5 SWAP1 SWAP3 KECCAK256 DUP4 MLOAD DUP2 SSTORE SWAP1 MLOAD PUSH1 0x1 DUP3 ADD SSTORE SWAP1 MLOAD PUSH1 0x2 DUP3 ADD SSTORE SWAP2 MLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x3 DUP3 ADD SWAP1 PUSH2 0x1756 SWAP1 DUP3 PUSH2 0x3B2C JUMP JUMPDEST POP POP POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE PUSH2 0x1774 CALLER DUP4 PUSH2 0x292B JUMP JUMPDEST PUSH1 0x7 DUP4 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 CALLVALUE SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x17C3 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x17C8 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1813 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x14185E5B595B9D081D1C985B9CD9995C8819985A5B1959 PUSH1 0x4A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB3F JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 DUP5 PUSH32 0x4FE0F5BB11EB6AB81C428FB83261719E5B22F84B3E1942CD491C3777504BB851 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1850 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP SWAP1 SWAP3 POP POP POP PUSH2 0x1868 PUSH1 0x1 PUSH1 0xB SSTORE JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1875 PUSH2 0x33EE JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x18AE SWAP1 PUSH2 0x3AAA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x18DA SWAP1 PUSH2 0x3AAA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1927 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x18FC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1927 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x190A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0x1940 SWAP1 PUSH2 0x3AAA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x196C SWAP1 PUSH2 0x3AAA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x19B9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x198E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x19B9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x199C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x5 DUP3 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x6 DUP3 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x7 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x8 DUP3 ADD DUP1 SLOAD PUSH1 0xE0 SWAP1 SWAP3 ADD SWAP2 PUSH2 0x1A23 SWAP1 PUSH2 0x3AAA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1A4F SWAP1 PUSH2 0x3AAA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1A9C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1A71 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1A9C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1A7F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1AD8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x22718AD9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xB3F JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1AFC PUSH2 0x2945 JUMP JUMPDEST PUSH2 0x1B06 PUSH1 0x0 PUSH2 0x2972 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1B33 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD DUP1 SLOAD PUSH2 0x1A23 SWAP1 PUSH2 0x3AAA JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 JUMPDEST PUSH1 0xD SLOAD DUP2 GT PUSH2 0x1BC9 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1BB7 JUMPI DUP2 PUSH2 0x1BB3 DUP2 PUSH2 0x3C18 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 PUSH2 0x1BC1 DUP2 PUSH2 0x3C18 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1B86 JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BE5 JUMPI PUSH2 0x1BE5 PUSH2 0x3624 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1C0E JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH1 0x1 JUMPDEST PUSH1 0xD SLOAD DUP2 GT PUSH2 0x1C77 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1C65 JUMPI DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1C4C JUMPI PUSH2 0x1C4C PUSH2 0x3BEC JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP2 PUSH2 0x1C61 DUP2 PUSH2 0x3C18 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 PUSH2 0x1C6F DUP2 PUSH2 0x3C18 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1C16 JUMP JUMPDEST POP SWAP1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 TIMESTAMP DUP6 GT PUSH2 0x1CD1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4576656E742064617465206D75737420626520696E2074686520667574757265 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB3F JUMP JUMPDEST PUSH1 0x0 DUP5 GT PUSH2 0x1D2D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5469636B6574207072696365206D757374206265206772656174657220746861 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x6E203 PUSH1 0xEC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB3F JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x1D87 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D617820737570706C79206D7573742062652067726561746572207468616E20 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB3F JUMP JUMPDEST PUSH1 0x0 DUP8 MLOAD GT PUSH2 0x1DD8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4576656E74206E616D652063616E6E6F7420626520656D707479000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB3F JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x1DE8 DUP4 PUSH2 0x3C18 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xC SLOAD PUSH1 0x40 DUP1 MLOAD PUSH2 0x140 DUP2 ADD DUP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP12 DUP2 MSTORE DUP3 DUP5 ADD DUP12 SWAP1 MSTORE PUSH1 0x60 DUP4 ADD DUP11 SWAP1 MSTORE PUSH1 0x80 DUP4 ADD DUP10 SWAP1 MSTORE PUSH1 0xA0 DUP4 ADD DUP9 SWAP1 MSTORE PUSH1 0x0 PUSH1 0xC0 DUP5 ADD DUP2 SWAP1 MSTORE CALLER PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x1 PUSH2 0x100 DUP6 ADD DUP2 SWAP1 MSTORE PUSH2 0x120 DUP6 ADD DUP10 SWAP1 MSTORE DUP7 DUP3 MSTORE PUSH1 0xE SWAP1 SWAP4 MSTORE SWAP4 SWAP1 SWAP4 KECCAK256 DUP3 MLOAD DUP2 SSTORE SWAP3 MLOAD SWAP2 SWAP3 SWAP2 SWAP1 DUP3 ADD SWAP1 PUSH2 0x1E65 SWAP1 DUP3 PUSH2 0x3B2C JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD SWAP1 PUSH2 0x1E7A SWAP1 DUP3 PUSH2 0x3B2C JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x4 DUP3 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0x5 DUP3 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD PUSH1 0x6 DUP3 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD PUSH1 0x7 DUP3 ADD DUP1 SLOAD PUSH2 0x100 DUP6 ADD MLOAD ISZERO ISZERO PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x120 DUP3 ADD MLOAD PUSH1 0x8 DUP3 ADD SWAP1 PUSH2 0x1EF2 SWAP1 DUP3 PUSH2 0x3B2C JUMP JUMPDEST POP SWAP1 POP POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH32 0x81F945738BEFF591C3EAB232E9F3265CE3F12263A2EC7ACF84DB8DC0FCE26A27 DUP11 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH2 0x1F34 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3C44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1F4F PUSH2 0x2945 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x7 ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x862 SWAP1 PUSH2 0x3AAA JUMP JUMPDEST PUSH2 0x919 CALLER DUP4 DUP4 PUSH2 0x29C4 JUMP JUMPDEST PUSH2 0x1F92 DUP5 DUP5 DUP5 PUSH2 0xB19 JUMP JUMPDEST PUSH2 0xBA3 DUP5 DUP5 DUP5 DUP5 PUSH2 0x2A5B JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0xC SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1FBD JUMPI PUSH2 0x1FBD PUSH2 0x3624 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1FF6 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x1FE3 PUSH2 0x33EE JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1FDB JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x1 JUMPDEST PUSH1 0xC SLOAD DUP2 GT PUSH2 0x2271 JUMPI PUSH1 0xE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x203E SWAP1 PUSH2 0x3AAA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x206A SWAP1 PUSH2 0x3AAA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x20B7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x208C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x20B7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x209A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0x20D0 SWAP1 PUSH2 0x3AAA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x20FC SWAP1 PUSH2 0x3AAA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2149 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x211E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2149 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x212C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x5 DUP3 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x6 DUP3 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x7 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x8 DUP3 ADD DUP1 SLOAD PUSH1 0xE0 SWAP1 SWAP3 ADD SWAP2 PUSH2 0x21B3 SWAP1 PUSH2 0x3AAA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x21DF SWAP1 PUSH2 0x3AAA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x222C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2201 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x222C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x220F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP DUP3 PUSH1 0x1 DUP4 PUSH2 0x2243 SWAP2 SWAP1 PUSH2 0x3C69 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x2253 JUMPI PUSH2 0x2253 PUSH2 0x3BEC JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x2269 SWAP1 PUSH2 0x3C18 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1FFC JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2282 DUP3 PUSH2 0x278A JUMP JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x229F SWAP1 PUSH2 0x3AAA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x22CB SWAP1 PUSH2 0x3AAA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2318 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x22ED JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2318 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x22FB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x2351 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x233A SWAP2 SWAP1 PUSH2 0x3C98 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xF PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD DUP1 SLOAD PUSH2 0x239F SWAP1 PUSH2 0x3AAA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x23CB SWAP1 PUSH2 0x3AAA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2418 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x23ED JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2418 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x23FB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP4 PUSH1 0x20 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x2462 SWAP1 PUSH2 0x3AAA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x248E SWAP1 PUSH2 0x3AAA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x24DB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x24B0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x24DB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x24BE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0x24F4 SWAP1 PUSH2 0x3AAA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2520 SWAP1 PUSH2 0x3AAA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x256D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2542 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x256D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2550 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x5 DUP3 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x6 DUP3 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x7 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x8 DUP3 ADD DUP1 SLOAD PUSH1 0xE0 SWAP1 SWAP3 ADD SWAP2 PUSH2 0x25D7 SWAP1 PUSH2 0x3AAA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2603 SWAP1 PUSH2 0x3AAA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2650 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2625 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2650 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2633 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x20 ADD MLOAD PUSH2 0x266F DUP5 PUSH1 0x40 ADD MLOAD PUSH2 0x2B84 JUMP JUMPDEST DUP4 PUSH1 0x40 ADD MLOAD DUP5 PUSH2 0x120 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x268D SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3CC7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0x26A7 DUP2 PUSH2 0x2C17 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x26B7 SWAP2 SWAP1 PUSH2 0x3DAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP5 POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x2707 PUSH2 0x2945 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2731 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xB3F JUMP JUMPDEST PUSH2 0x1332 DUP2 PUSH2 0x2972 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x276B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x84D JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x84D JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x84D JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xB3F JUMP JUMPDEST PUSH2 0xFF6 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x2D77 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x283E JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x3 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x1 ADD SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP6 SWAP2 PUSH32 0x76C5D8A17D0BEE8BD0E004133353CD78EDE70AC9ACE2AA18BF839E748CAFF290 SWAP2 SWAP1 LOG3 JUMPDEST PUSH2 0x2849 DUP5 DUP5 DUP5 PUSH2 0x2E7D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0xB SLOAD SUB PUSH2 0x2874 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0xB SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x28A5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xB3F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28B3 DUP4 DUP4 PUSH1 0x0 PUSH2 0x27D0 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x28DF JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xB3F JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xBA3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x64283D7B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB3F JUMP JUMPDEST PUSH2 0x919 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x2F4A JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1B06 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xB3F JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x29F6 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB611743 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xB3F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH2 0xF21 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0xBA3 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x2A9D SWAP1 CALLER SWAP1 DUP9 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x3DF2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x2AD8 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x2AD5 SWAP2 DUP2 ADD SWAP1 PUSH2 0x3E25 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2B41 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x2B06 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2B0B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x2B39 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xB3F JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ PUSH2 0x2B7D JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xB3F JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x2B91 DUP4 PUSH2 0x2F61 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2BB1 JUMPI PUSH2 0x2BB1 PUSH2 0x3624 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2BDB JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0x2BE5 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD PUSH1 0x0 SUB PUSH2 0x2C36 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3E92 PUSH1 0x40 SWAP2 CODECOPY SWAP1 POP PUSH1 0x0 PUSH1 0x3 DUP5 MLOAD PUSH1 0x2 PUSH2 0x2C65 SWAP2 SWAP1 PUSH2 0x3C31 JUMP JUMPDEST PUSH2 0x2C6F SWAP2 SWAP1 PUSH2 0x3E42 JUMP JUMPDEST PUSH2 0x2C7A SWAP1 PUSH1 0x4 PUSH2 0x3E64 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2C92 JUMPI PUSH2 0x2C92 PUSH2 0x3624 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2CBC JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x1 DUP3 ADD PUSH1 0x20 DUP3 ADD DUP6 DUP7 MLOAD DUP8 ADD PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x0 DUP3 MSTORE JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x2D32 JUMPI PUSH1 0x3 DUP5 ADD SWAP4 POP DUP4 MLOAD PUSH1 0x3F DUP2 PUSH1 0x12 SHR AND DUP8 ADD MLOAD DUP7 MSTORE8 PUSH1 0x1 DUP7 ADD SWAP6 POP PUSH1 0x3F DUP2 PUSH1 0xC SHR AND DUP8 ADD MLOAD DUP7 MSTORE8 PUSH1 0x1 DUP7 ADD SWAP6 POP PUSH1 0x3F DUP2 PUSH1 0x6 SHR AND DUP8 ADD MLOAD DUP7 MSTORE8 PUSH1 0x1 DUP7 ADD SWAP6 POP PUSH1 0x3F DUP2 AND DUP8 ADD MLOAD DUP7 MSTORE8 POP PUSH1 0x1 DUP6 ADD SWAP5 POP PUSH2 0x2CD7 JUMP JUMPDEST SWAP1 MSTORE POP POP DUP6 MLOAD PUSH1 0x3 SWAP1 MOD PUSH1 0x1 DUP2 EQ PUSH2 0x2D51 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x2D64 JUMPI PUSH2 0x2D6C JUMP JUMPDEST PUSH1 0x3D PUSH1 0x1 DUP4 SUB MSTORE8 PUSH1 0x3D PUSH1 0x2 DUP4 SUB MSTORE8 PUSH2 0x2D6C JUMP JUMPDEST PUSH1 0x3D PUSH1 0x1 DUP4 SUB MSTORE8 JUMPDEST POP SWAP2 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x2D8B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x2E4D JUMPI PUSH1 0x0 PUSH2 0x2D9B DUP5 PUSH2 0x278A JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x2DC7 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x2DDA JUMPI POP PUSH2 0x2DD8 DUP2 DUP5 PUSH2 0x26D1 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x2E03 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9FBF51F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xB3F JUMP JUMPDEST DUP2 ISZERO PUSH2 0x2E4B JUMPI DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2E8B DUP6 DUP6 DUP6 PUSH2 0x3039 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2EE8 JUMPI PUSH2 0x2EE3 DUP5 PUSH1 0x8 DUP1 SLOAD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD DUP4 SSTORE SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 ADD SSTORE JUMP JUMPDEST PUSH2 0x2F0B JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x2F0B JUMPI PUSH2 0x2F0B DUP2 DUP6 PUSH2 0x3132 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x2F27 JUMPI PUSH2 0x2F22 DUP5 PUSH2 0x31C3 JUMP JUMPDEST PUSH2 0x2849 JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x2849 JUMPI PUSH2 0x2849 DUP6 DUP6 PUSH2 0x3272 JUMP JUMPDEST PUSH2 0x2F54 DUP4 DUP4 PUSH2 0x32C2 JUMP JUMPDEST PUSH2 0xFF6 PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x2A5B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0x2FA0 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x2FCC JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x2FEA JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x3002 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x3016 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x3028 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x84D JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND ISZERO PUSH2 0x3066 JUMPI PUSH2 0x3066 DUP2 DUP5 DUP7 PUSH2 0x3327 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x30A4 JUMPI PUSH2 0x3083 PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH2 0x2D77 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0x30D3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP8 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x313D DUP4 PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP1 DUP3 EQ PUSH2 0x3190 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD DUP5 DUP5 MSTORE DUP2 DUP5 KECCAK256 DUP2 SWAP1 SSTORE DUP4 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP2 SWAP1 SSTORE JUMPDEST POP PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP5 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP4 MSTORE PUSH1 0x6 DUP2 MSTORE DUP4 DUP4 KECCAK256 SWAP2 DUP4 MSTORE MSTORE SWAP1 DUP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x31D5 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x3C69 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x8 DUP1 SLOAD SWAP4 SWAP5 POP SWAP1 SWAP3 DUP5 SWAP1 DUP2 LT PUSH2 0x31FD JUMPI PUSH2 0x31FD PUSH2 0x3BEC JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x321E JUMPI PUSH2 0x321E PUSH2 0x3BEC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 DUP2 MSTORE PUSH1 0x9 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP5 SWAP1 SSTORE DUP6 DUP3 MSTORE DUP2 KECCAK256 SSTORE PUSH1 0x8 DUP1 SLOAD DUP1 PUSH2 0x3256 JUMPI PUSH2 0x3256 PUSH2 0x3E7B JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x327F DUP5 PUSH2 0x1AAC JUMP JUMPDEST PUSH2 0x3289 SWAP2 SWAP1 PUSH2 0x3C69 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE SWAP4 DUP3 MSTORE PUSH1 0x7 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x32EC JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xB3F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32FA DUP4 DUP4 PUSH1 0x0 PUSH2 0x27D0 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xFF6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x39E35637 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xB3F JUMP JUMPDEST PUSH2 0x3332 DUP4 DUP4 DUP4 PUSH2 0x338B JUMP JUMPDEST PUSH2 0xFF6 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3360 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xB3F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x177E802F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0xB3F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x2849 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x33C5 JUMPI POP PUSH2 0x33C5 DUP5 DUP5 PUSH2 0x26D1 JUMP JUMPDEST DUP1 PUSH2 0x2849 JUMPI POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1332 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3474 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x347F DUP2 PUSH2 0x344C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x34A1 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3489 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x34C2 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x3486 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x347F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x34AA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x34FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1868 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x352C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3535 DUP4 PUSH2 0x3502 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP13 DUP4 MSTORE DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x355D DUP2 DUP5 ADD DUP14 PUSH2 0x34AA JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x3571 DUP2 DUP13 PUSH2 0x34AA JUMP JUMPDEST SWAP1 POP DUP10 PUSH1 0x60 DUP5 ADD MSTORE DUP9 PUSH1 0x80 DUP5 ADD MSTORE DUP8 PUSH1 0xA0 DUP5 ADD MSTORE DUP7 PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0xE0 DUP5 ADD MSTORE DUP5 ISZERO ISZERO PUSH2 0x100 DUP5 ADD MSTORE DUP3 DUP2 SUB PUSH2 0x120 DUP5 ADD MSTORE PUSH2 0x35B5 DUP2 DUP6 PUSH2 0x34AA JUMP JUMPDEST SWAP14 SWAP13 POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x35DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x35E4 DUP5 PUSH2 0x3502 JUMP JUMPDEST SWAP3 POP PUSH2 0x35F2 PUSH1 0x20 DUP6 ADD PUSH2 0x3502 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3615 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x3655 JUMPI PUSH2 0x3655 PUSH2 0x3624 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x367D JUMPI PUSH2 0x367D PUSH2 0x3624 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x3696 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x36C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x347F DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x363A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x36E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3701 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x370D DUP6 DUP3 DUP7 ADD PUSH2 0x36B0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP5 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x373C PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x34AA JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3759 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x3769 PUSH1 0x20 DUP5 ADD PUSH2 0x3502 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x37AA JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x378E JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP3 MLOAD DUP5 MSTORE PUSH1 0x20 DUP4 ADD MLOAD DUP2 PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x37D6 DUP3 DUP7 ADD DUP3 PUSH2 0x34AA JUMP JUMPDEST SWAP2 POP POP PUSH1 0x40 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x37F0 DUP3 DUP3 PUSH2 0x34AA JUMP JUMPDEST SWAP2 POP POP PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xE0 DUP4 ADD MLOAD PUSH2 0x3835 PUSH1 0xE0 DUP7 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH2 0x100 DUP4 DUP2 ADD MLOAD ISZERO ISZERO SWAP1 DUP6 ADD MSTORE PUSH2 0x120 DUP1 DUP5 ADD MLOAD DUP6 DUP4 SUB DUP3 DUP8 ADD MSTORE PUSH2 0x373C DUP4 DUP3 PUSH2 0x34AA JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x347F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x37B6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3880 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x347F DUP3 PUSH2 0x3502 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x80 DUP1 DUP5 ADD MSTORE PUSH2 0x2849 PUSH1 0xA0 DUP5 ADD DUP3 PUSH2 0x34AA JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x38DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x38F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38FF DUP11 DUP4 DUP12 ADD PUSH2 0x36B0 JUMP JUMPDEST SWAP8 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x3915 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3921 DUP11 DUP4 DUP12 ADD PUSH2 0x36B0 JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD SWAP4 POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x394C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3959 DUP10 DUP3 DUP11 ADD PUSH2 0x36B0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3979 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3982 DUP4 PUSH2 0x3502 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x3997 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x39B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x39C1 DUP6 PUSH2 0x3502 JUMP JUMPDEST SWAP4 POP PUSH2 0x39CF PUSH1 0x20 DUP7 ADD PUSH2 0x3502 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x39F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x3A03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3A12 DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x363A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 DUP7 ADD SWAP2 POP PUSH1 0x40 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD SWAP3 POP DUP4 DUP8 ADD PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3A73 JUMPI PUSH1 0x3F NOT DUP9 DUP7 SUB ADD DUP5 MSTORE PUSH2 0x3A61 DUP6 DUP4 MLOAD PUSH2 0x37B6 JUMP JUMPDEST SWAP5 POP SWAP3 DUP6 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3A45 JUMP JUMPDEST POP SWAP3 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3A93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3A9C DUP4 PUSH2 0x3502 JUMP JUMPDEST SWAP2 POP PUSH2 0x3769 PUSH1 0x20 DUP5 ADD PUSH2 0x3502 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x3ABE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2271 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xFF6 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x3B05 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3B24 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x3B11 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3B46 JUMPI PUSH2 0x3B46 PUSH2 0x3624 JUMP JUMPDEST PUSH2 0x3B5A DUP2 PUSH2 0x3B54 DUP5 SLOAD PUSH2 0x3AAA JUMP JUMPDEST DUP5 PUSH2 0x3ADE JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x3B8F JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x3B77 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x3B24 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3BBE JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x3B9F JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x3BDC JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x3C2A JUMPI PUSH2 0x3C2A PUSH2 0x3C02 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x84D JUMPI PUSH2 0x84D PUSH2 0x3C02 JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x3C57 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x34AA JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE POP PUSH1 0x40 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x84D JUMPI PUSH2 0x84D PUSH2 0x3C02 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH2 0x3C8E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3486 JUMP JUMPDEST SWAP3 SWAP1 SWAP3 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH7 0x697066733A2F2F PUSH1 0xC8 SHL DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x3CBA DUP2 PUSH1 0x7 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x3486 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0x7 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7B PUSH1 0xF8 SHL DUP2 MSTORE PUSH8 0x113730B6B2911D11 PUSH1 0xC1 SHL PUSH1 0x1 DUP3 ADD MSTORE DUP5 MLOAD PUSH1 0x0 SWAP1 PUSH2 0x3CF5 DUP2 PUSH1 0x9 DUP6 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x3486 JUMP JUMPDEST PUSH2 0x2023 PUSH1 0xF0 SHL PUSH1 0x9 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP6 MLOAD PUSH2 0x3D17 DUP2 PUSH1 0xB DUP5 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x3486 JUMP JUMPDEST PUSH2 0x88B PUSH1 0xF2 SHL PUSH1 0xB SWAP3 SWAP1 SWAP2 ADD SWAP2 DUP3 ADD DUP2 SWAP1 MSTORE PUSH15 0x113232B9B1B934B83A34B7B7111D11 PUSH1 0x89 SHL PUSH1 0xD DUP4 ADD MSTORE DUP6 MLOAD PUSH2 0x3D54 DUP2 PUSH1 0x1C DUP6 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x3486 JUMP JUMPDEST PUSH1 0x1C SWAP3 ADD SWAP2 DUP3 ADD MSTORE PUSH16 0x22696D616765223A22697066733A2F2F PUSH1 0x80 SHL PUSH1 0x1E DUP3 ADD MSTORE PUSH2 0x3DA2 PUSH2 0x3D95 PUSH2 0x3D88 PUSH1 0x2E DUP5 ADD DUP8 PUSH2 0x3C7C JUMP JUMPDEST PUSH1 0x11 PUSH1 0xF9 SHL DUP2 MSTORE PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x7D PUSH1 0xF8 SHL DUP2 MSTORE PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x646174613A6170706C69636174696F6E2F6A736F6E3B6261736536342C000000 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x3DE5 DUP2 PUSH1 0x1D DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x3486 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0x1D ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x373C SWAP1 DUP4 ADD DUP5 PUSH2 0x34AA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3E37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x347F DUP2 PUSH2 0x344C JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3E5F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x84D JUMPI PUSH2 0x84D PUSH2 0x3C02 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID COINBASE TIMESTAMP NUMBER PREVRANDAO GASLIMIT CHAINID SELFBALANCE BASEFEE 0x49 0x4A 0x4B 0x4C 0x4D 0x4E 0x4F POP MLOAD MSTORE MSTORE8 SLOAD SSTORE JUMP JUMPI PC MSIZE GAS PUSH2 0x6263 PUSH5 0x6566676869 PUSH11 0x6B6C6D6E6F707172737475 PUSH23 0x7778797A303132333435363738392B2FA2646970667358 0x22 SLT KECCAK256 0x24 0xAE 0xD8 0xDC SWAP12 PUSH20 0x883B97747AD84B4D9DF09649FBCDCFF59D41EF98 0xCE 0xB1 0xF7 ADDMOD 0xDD 0xC1 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"538:12896:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1435:222:5;;;;;;;;;;-1:-1:-1;1435:222:5;;;;;:::i;:::-;;:::i;:::-;;;661:14:18;;654:22;636:41;;624:2;609:18;1435:222:5;;;;;;;;2365:89:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;3497:154::-;;;;;;;;;;-1:-1:-1;3497:154:2;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1924:32:18;;;1906:51;;1894:2;1879:18;3497:154:2;1760:203:18;3323:113:2;;;;;;;;;;-1:-1:-1;3323:113:2;;;;;:::i;:::-;;:::i;:::-;;1309:39:16;;;;;;;;;;-1:-1:-1;1309:39:16;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;:::i;2062:102:5:-;;;;;;;;;;-1:-1:-1;2140:10:5;:17;2062:102;;;3696:25:18;;;3684:2;3669:18;2062:102:5;3550:177:18;4143:578:2;;;;;;;;;;-1:-1:-1;4143:578:2;;;;;:::i;:::-;;:::i;1736:255:5:-;;;;;;;;;;-1:-1:-1;1736:255:5;;;;;:::i;:::-;;:::i;6828:372:16:-;;;;;;;;;;-1:-1:-1;6828:372:16;;;;;:::i;:::-;;:::i;4852:767::-;;;;;;;;;;-1:-1:-1;4852:767:16;;;;;:::i;:::-;;:::i;9945:323::-;;;;;;;;;;-1:-1:-1;9945:323:16;;;;;:::i;:::-;;:::i;4787:132:2:-;;;;;;;;;;-1:-1:-1;4787:132:2;;;;;:::i;:::-;;:::i;1403:65:16:-;;;;;;;;;;-1:-1:-1;1403:65:16;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1403:65:16;;;;;;;;;;;;5934:25:18;;;-1:-1:-1;;;;;5995:32:18;;;5990:2;5975:18;;5968:60;6044:18;;;6037:34;6114:14;6107:22;6102:2;6087:18;;6080:50;5921:3;5906:19;1403:65:16;5709:427:18;2236:226:5;;;;;;;;;;-1:-1:-1;2236:226:5;;;;;:::i;:::-;;:::i;5692:1068:16:-;;;;;;:::i;:::-;;:::i;1355:41::-;;;;;;;;;;-1:-1:-1;1355:41:16;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;2185:118:2:-;;;;;;;;;;-1:-1:-1;2185:118:2;;;;;:::i;:::-;;:::i;9048:813:16:-;;;;;;;;;;-1:-1:-1;9048:813:16;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3429:1340::-;;;;;;:::i;:::-;;:::i;7257:115::-;;;;;;;;;;-1:-1:-1;7257:115:16;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1920:208:2:-;;;;;;;;;;-1:-1:-1;1920:208:2;;;;;:::i;:::-;;:::i;2293:101:0:-;;;;;;;;;;;;;:::i;7430:120:16:-;;;;;;;;;;-1:-1:-1;7430:120:16;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;8199:757::-;;;;;;;;;;;;;:::i;651:30::-;;;;;;;;;;;;;;;;1638:85:0;;;;;;;;;;-1:-1:-1;1710:6:0;;-1:-1:-1;;;;;1710:6:0;1638:85;;2241:1118:16;;;;;;;;;;-1:-1:-1;2241:1118:16;;;;;:::i;:::-;;:::i;12753:114::-;;;;;;;;;;-1:-1:-1;12753:114:16;;;;;:::i;:::-;;:::i;2518:93:2:-;;;;;;;;;;;;;:::i;3718:144::-;;;;;;;;;;-1:-1:-1;3718:144:2;;;;;:::i;:::-;;:::i;4985:208::-;;;;;;;;;;-1:-1:-1;4985:208:2;;;;;:::i;:::-;;:::i;7854:274:16:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;10351:1137::-;;;;;;;;;;-1:-1:-1;10351:1137:16;;;;;:::i;:::-;;:::i;7621:156::-;;;;;;;;;;-1:-1:-1;7621:156:16;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7739:30:16;;;:19;:30;;;;;7732:37;;;;;;;;;;;;;;;-1:-1:-1;;;;;7732:37:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7621:156;;;;;;;12650:13:18;;12632:32;;12724:4;12712:17;;;12706:24;-1:-1:-1;;;;;12702:50:18;12680:20;;;12673:80;12809:4;12797:17;;;12791:24;12769:20;;;12762:54;12886:4;12874:17;;;12868:24;12861:32;12854:40;12832:20;;;12825:70;;;;12619:3;12604:19;;12413:488;615:29:16;;;;;;;;;;;;;;;;3928:153:2;;;;;;;;;;-1:-1:-1;3928:153:2;;;;;:::i;:::-;;:::i;2543:215:0:-;;;;;;;;;;-1:-1:-1;2543:215:0;;;;;:::i;:::-;;:::i;1475:48:16:-;;;;;;;;;;-1:-1:-1;1475:48:16;;;;;:::i;:::-;;;;;;;;;;;;;;1435:222:5;1537:4;-1:-1:-1;;;;;;1560:50:5;;-1:-1:-1;;;1560:50:5;;:90;;;1614:36;1638:11;1614:23;:36::i;:::-;1553:97;1435:222;-1:-1:-1;;1435:222:5:o;2365:89:2:-;2410:13;2442:5;2435:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:89;:::o;3497:154::-;3564:7;3583:22;3597:7;3583:13;:22::i;:::-;-1:-1:-1;6008:7:2;6034:24;;;:15;:24;;;;;;-1:-1:-1;;;;;6034:24:2;3623:21;5938:127;3323:113;3394:35;3403:2;3407:7;735:10:9;3394:8:2;:35::i;:::-;3323:113;;:::o;1309:39:16:-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;1309:39:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1309:39:16;;;;-1:-1:-1;;;;;1309:39:16;;;-1:-1:-1;;;1309:39:16;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4143:578:2:-;-1:-1:-1;;;;;4237:16:2;;4233:87;;4276:33;;-1:-1:-1;;;4276:33:2;;4306:1;4276:33;;;1906:51:18;1879:18;;4276:33:2;;;;;;;;4233:87;4538:21;4562:34;4570:2;4574:7;735:10:9;4562:7:2;:34::i;:::-;4538:58;;4627:4;-1:-1:-1;;;;;4610:21:2;:13;-1:-1:-1;;;;;4610:21:2;;4606:109;;4654:50;;-1:-1:-1;;;4654:50:2;;-1:-1:-1;;;;;13814:15:18;;;4654:50:2;;;13796:34:18;13846:18;;;13839:34;;;13909:15;;13889:18;;;13882:43;13731:18;;4654:50:2;13556:375:18;4606:109:2;4223:498;4143:578;;;:::o;1736:255:5:-;1824:7;1856:16;1866:5;1856:9;:16::i;:::-;1847:5;:25;1843:99;;1895:36;;-1:-1:-1;;;1895:36:5;;-1:-1:-1;;;;;14128:32:18;;1895:36:5;;;14110:51:18;14177:18;;;14170:34;;;14083:18;;1895:36:5;13936:274:18;1843:99:5;-1:-1:-1;;;;;;1958:19:5;;;;;;;;:12;:19;;;;;;;;:26;;;;;;;;;1736:255::o;6828:372:16:-;6890:34;6927:30;;;:19;:30;;;;;6976:14;;;;-1:-1:-1;;;;;6976:14:16;6994:10;6976:28;6968:63;;;;-1:-1:-1;;;6968:63:16;;14417:2:18;6968:63:16;;;14399:21:18;14456:2;14436:18;;;14429:30;-1:-1:-1;;;14475:18:18;;;14468:52;14537:18;;6968:63:16;14215:346:18;6968:63:16;7050:16;;;;;;7042:50;;;;-1:-1:-1;;;7042:50:16;;14768:2:18;7042:50:16;;;14750:21:18;14807:2;14787:18;;;14780:30;-1:-1:-1;;;14826:18:18;;;14819:51;14887:18;;7042:50:16;14566:345:18;7042:50:16;7105:16;;;:24;;-1:-1:-1;;7105:24:16;;;7147:45;;7181:10;;7170:9;;7147:45;;7124:5;;7147:45;6879:321;6828:372;:::o;4852:767::-;4957:10;4935:18;4943:9;4935:7;:18::i;:::-;-1:-1:-1;;;;;4935:32:16;;4927:70;;;;-1:-1:-1;;;4927:70:16;;15118:2:18;4927:70:16;;;15100:21:18;15157:2;15137:18;;;15130:30;-1:-1:-1;;;15176:18:18;;;15169:55;15241:18;;4927:70:16;14916:349:18;4927:70:16;5025:1;5016:6;:10;5008:51;;;;-1:-1:-1;;;5008:51:16;;15472:2:18;5008:51:16;;;15454:21:18;15511:2;15491:18;;;15484:30;15550;15530:18;;;15523:58;15598:18;;5008:51:16;15270:352:18;5008:51:16;5079:30;;;;:19;:30;;;;;:39;;;;;5078:40;5070:77;;;;-1:-1:-1;;;5070:77:16;;15829:2:18;5070:77:16;;;15811:21:18;15868:2;15848:18;;;15841:30;15907:26;15887:18;;;15880:54;15951:18;;5070:77:16;15627:348:18;5070:77:16;5205:15;5223:24;;;:13;:24;;;;;;;;;5266:15;;;:6;:15;;;;;;:25;;;5294:15;-1:-1:-1;5258:91:16;;;;-1:-1:-1;;;5258:91:16;;16182:2:18;5258:91:16;;;16164:21:18;16221:2;16201:18;;;16194:30;16260:34;16240:18;;;16233:62;-1:-1:-1;;;16311:18:18;;;16304:33;16354:19;;5258:91:16;15980:399:18;5258:91:16;5395:155;;;;;;;;;;;5471:10;5395:155;;;;;;;;;;;;;5534:4;5395:155;;;;;;-1:-1:-1;5362:30:16;;;:19;:30;;;;;:188;;;;;;;;;;;-1:-1:-1;;;;;;5362:188:16;-1:-1:-1;;;;;5362:188:16;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5362:188:16;;;;;;;;;;;5568:43;;3696:25:18;;;5395:155:16;;5568:43;;3669:18:18;5568:43:16;;;;;;;;4916:703;4852:767;;:::o;9945:323::-;10072:10;10050:18;10058:9;10050:7;:18::i;:::-;-1:-1:-1;;;;;10050:32:16;;10042:70;;;;-1:-1:-1;;;10042:70:16;;15118:2:18;10042:70:16;;;15100:21:18;15157:2;15137:18;;;15130:30;-1:-1:-1;;;15176:18:18;;;15169:55;15241:18;;10042:70:16;14916:349:18;10042:70:16;10160:1;10137:12;10131:26;:30;10123:71;;;;-1:-1:-1;;;10123:71:16;;16586:2:18;10123:71:16;;;16568:21:18;16625:2;16605:18;;;16598:30;16664;16644:18;;;16637:58;16712:18;;10123:71:16;16384:352:18;10123:71:16;10215:18;;;;:7;:18;;;;;:30;;:45;10248:12;10215:30;:45;:::i;:::-;;9945:323;;:::o;4787:132:2:-;4873:39;4890:4;4896:2;4900:7;4873:39;;;;;;;;;;;;:16;:39::i;2236:226:5:-;2302:7;2334:13;2140:10;:17;;2062:102;2334:13;2325:5;:22;2321:101;;2370:41;;-1:-1:-1;;;2370:41:5;;2401:1;2370:41;;;14110:51:18;14177:18;;;14170:34;;;14083:18;;2370:41:5;13936:274:18;2321:101:5;2438:10;2449:5;2438:17;;;;;;;;:::i;:::-;;;;;;;;;2431:24;;2236:226;;;:::o;5692:1068:16:-;2356:21:10;:19;:21::i;:::-;5777:34:16::1;5814:30:::0;;;:19:::1;:30;::::0;;;;5863:16:::1;::::0;::::1;::::0;::::1;;5855:58;;;::::0;-1:-1:-1;;;5855:58:16;;19279:2:18;5855:58:16::1;::::0;::::1;19261:21:18::0;19318:2;19298:18;;;19291:30;19357:31;19337:18;;;19330:59;19406:18;;5855:58:16::1;19077:353:18::0;5855:58:16::1;5945:7;:13;;;5932:9;:26;;5924:59;;;::::0;-1:-1:-1;;;5924:59:16;;19637:2:18;5924:59:16::1;::::0;::::1;19619:21:18::0;19676:2;19656:18;;;19649:30;-1:-1:-1;;;19695:18:18;;;19688:50;19755:18;;5924:59:16::1;19435:344:18::0;5924:59:16::1;6024:14;::::0;::::1;::::0;-1:-1:-1;;;;;6024:14:16::1;6002:18;6010:9:::0;6002:7:::1;:18::i;:::-;-1:-1:-1::0;;;;;6002:36:16::1;;5994:81;;;::::0;-1:-1:-1;;;5994:81:16;;19986:2:18;5994:81:16::1;::::0;::::1;19968:21:18::0;;;20005:18;;;19998:30;20064:34;20044:18;;;20037:62;20116:18;;5994:81:16::1;19784:356:18::0;5994:81:16::1;6133:15;6151:24:::0;;;:13:::1;:24;::::0;;;;;;;;6194:15;;;:6:::1;:15:::0;;;;;;:25:::1;;::::0;6222:15:::1;-1:-1:-1::0;6186:90:16::1;;;::::0;-1:-1:-1;;;6186:90:16;;20347:2:18;6186:90:16::1;::::0;::::1;20329:21:18::0;20386:2;20366:18;;;20359:30;20425:34;20405:18;;;20398:62;-1:-1:-1;;;20476:18:18;;;20469:32;20518:19;;6186:90:16::1;20145:398:18::0;6186:90:16::1;6306:14;::::0;::::1;::::0;6347:13:::1;::::0;::::1;::::0;6404:16:::1;::::0;::::1;:24:::0;;-1:-1:-1;;6404:24:16::1;::::0;;-1:-1:-1;;;;;6306:14:16;;::::1;::::0;6479:40:::1;6306:14:::0;6497:10:::1;6509:9:::0;6479::::1;:40::i;:::-;6572:12;6598:6;-1:-1:-1::0;;;;;6590:20:16::1;6618:9;6590:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6571:61;;;6651:7;6643:43;;;::::0;-1:-1:-1;;;6643:43:16;;20960:2:18;6643:43:16::1;::::0;::::1;20942:21:18::0;20999:2;20979:18;;;20972:30;-1:-1:-1;;;21018:18:18;;;21011:53;21081:18;;6643:43:16::1;20758:347:18::0;6643:43:16::1;6734:10;-1:-1:-1::0;;;;;6704:48:16::1;6726:6;-1:-1:-1::0;;;;;6704:48:16::1;6715:9;6704:48;6746:5;6704:48;;;;3696:25:18::0;;3684:2;3669:18;;3550:177;6704:48:16::1;;;;;;;;5766:994;;;;;2398:20:10::0;1713:1;2924:7;:21;2744:208;2398:20;5692:1068:16;:::o;1355:41::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2185:118:2:-;2248:7;2274:22;2288:7;2274:13;:22::i;9048:813:16:-;9140:16;9169:15;9187:17;9197:6;9187:9;:17::i;:::-;9169:35;;9215:29;9261:7;9247:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9247:22:16;;9215:54;;9280:20;9330:9;9325:274;9349:7;9345:1;:11;9325:274;;;9378:16;9397:30;9417:6;9425:1;9397:19;:30::i;:::-;9446:23;;;;:13;:23;;;;;;9378:49;;-1:-1:-1;9446:35:16;;;9442:146;;9531:8;9502:12;9515;9502:26;;;;;;;;:::i;:::-;;;;;;;;;;:37;9558:14;;;;:::i;:::-;;;;9442:146;-1:-1:-1;9358:3:16;;;;:::i;:::-;;;;9325:274;;;;9659:23;9699:12;9685:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9685:27:16;;9659:53;;9728:9;9723:97;9747:12;9743:1;:16;9723:97;;;9793:12;9806:1;9793:15;;;;;;;;:::i;:::-;;;;;;;9781:6;9788:1;9781:9;;;;;;;;:::i;:::-;;;;;;;;;;:27;9761:3;;;;:::i;:::-;;;;9723:97;;;-1:-1:-1;9847:6:16;9048:813;-1:-1:-1;;;;;;9048:813:16:o;3429:1340::-;3505:7;2356:21:10;:19;:21::i;:::-;3525:23:16::1;3551:16:::0;;;:6:::1;:16;::::0;;;;3586:18:::1;::::0;::::1;::::0;-1:-1:-1;;;3586:18:16;::::1;;;3578:50;;;::::0;-1:-1:-1;;;3578:50:16;;21584:2:18;3578:50:16::1;::::0;::::1;21566:21:18::0;21623:2;21603:18;;;21596:30;-1:-1:-1;;;21642:18:18;;;21635:49;21701:18;;3578:50:16::1;21382:343:18::0;3578:50:16::1;3671:9;:19;;;3647:9;:21;;;:43;3639:73;;;::::0;-1:-1:-1;;;3639:73:16;;21932:2:18;3639:73:16::1;::::0;::::1;21914:21:18::0;21971:2;21951:18;;;21944:30;-1:-1:-1;;;21990:18:18;;;21983:47;22047:18;;3639:73:16::1;21730:341:18::0;3639:73:16::1;3744:9;:21;;;3731:9;:34;;3723:67;;;::::0;-1:-1:-1;;;3723:67:16;;19637:2:18;3723:67:16::1;::::0;::::1;19619:21:18::0;19676:2;19656:18;;;19649:30;-1:-1:-1;;;19695:18:18;;;19688:50;19755:18;;3723:67:16::1;19435:344:18::0;3723:67:16::1;3827:9;:19;;;3809:15;:37;3801:74;;;::::0;-1:-1:-1;;;3801:74:16;;22278:2:18;3801:74:16::1;::::0;::::1;22260:21:18::0;22317:2;22297:18;;;22290:30;22356:26;22336:18;;;22329:54;22400:18;;3801:74:16::1;22076:348:18::0;3801:74:16::1;3888:15;:17:::0;;;:15:::1;:17;::::0;::::1;:::i;:::-;::::0;;;-1:-1:-1;;3935:15:16::1;::::0;3984:21:::1;::::0;::::1;::::0;3916:16:::1;::::0;3984:25:::1;::::0;4008:1:::1;3984:25;:::i;:::-;4060:21;::::0;::::1;:23:::0;;3961:48;;-1:-1:-1;4060:21:16::1;:23;::::0;::::1;:::i;:::-;::::0;;;-1:-1:-1;;4200:149:16::1;::::0;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;;::::1;::::0;;;;;;;;;;;;;::::1;::::0;;-1:-1:-1;4200:149:16;;;;;;;;;4180:17;;;:7:::1;:17:::0;;;;;;;:169;;;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;;4200:149;;4180:17;:169:::1;::::0;::::1;::::0;::::1;::::0;;::::1;:::i;:::-;-1:-1:-1::0;;;4362:23:16::1;::::0;;;:13:::1;:23;::::0;;;;:34;;;4439:31:::1;4449:10;4376:8:::0;4439:9:::1;:31::i;:::-;4558:19;::::0;::::1;::::0;4550:55:::1;::::0;4532:12:::1;::::0;-1:-1:-1;;;;;4558:19:16::1;::::0;4591:9:::1;::::0;4532:12;4550:55;4532:12;4550:55;4591:9;4558:19;4550:55:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4531:74;;;4624:7;4616:43;;;::::0;-1:-1:-1;;;4616:43:16;;20960:2:18;4616:43:16::1;::::0;::::1;20942:21:18::0;20999:2;20979:18;;;20972:30;-1:-1:-1;;;21018:18:18;;;21011:53;21081:18;;4616:43:16::1;20758:347:18::0;4616:43:16::1;4710:10;-1:-1:-1::0;;;;;4677:58:16::1;4700:8;4690;4677:58;4722:12;4677:58;;;;3696:25:18::0;;3684:2;3669:18;;3550:177;4677:58:16::1;;;;;;;;-1:-1:-1::0;4753:8:16;;-1:-1:-1;;;2398:20:10;1713:1;2924:7;:21;2744:208;2398:20;3429:1340:16;;;:::o;7257:115::-;7316:12;;:::i;:::-;7348:6;:16;7355:8;7348:16;;;;;;;;;;;7341:23;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7341:23:16;;;-1:-1:-1;;7341:23:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7341:23:16;;;;;;-1:-1:-1;;;7341:23:16;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7257:115;;;:::o;1920:208:2:-;1983:7;-1:-1:-1;;;;;2006:19:2;;2002:87;;2048:30;;-1:-1:-1;;;2048:30:2;;2075:1;2048:30;;;1906:51:18;1879:18;;2048:30:2;1760:203:18;2002:87:2;-1:-1:-1;;;;;;2105:16:2;;;;;:9;:16;;;;;;;1920:208::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;7430:120:16:-;7491:13;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7491:13:16;7524:7;:18;7532:9;7524:18;;;;;;;;;;;7517:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;8199:757::-;8251:16;8280:19;8382:1;8365:158;8390:15;;8385:1;:20;8365:158;;8431:22;;;;:19;:22;;;;;:31;;;;;8427:85;;;8483:13;;;;:::i;:::-;;;;8427:85;8407:3;;;;:::i;:::-;;;;8365:158;;;;8581:31;8629:11;8615:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8615:26:16;-1:-1:-1;8581:60:16;-1:-1:-1;8652:20:16;8714:1;8697:210;8722:15;;8717:1;:20;8697:210;;8763:22;;;;:19;:22;;;;;:31;;;;;8759:137;;;8846:1;8815:14;8830:12;8815:28;;;;;;;;:::i;:::-;;;;;;;;;;:32;8866:14;;;;:::i;:::-;;;;8759:137;8739:3;;;;:::i;:::-;;;;8697:210;;;-1:-1:-1;8934:14:16;;8199:757;-1:-1:-1;;;8199:757:16:o;2241:1118::-;2477:7;2518:15;2505:10;:28;2497:73;;;;-1:-1:-1;;;2497:73:16;;22761:2:18;2497:73:16;;;22743:21:18;;;22780:18;;;22773:30;22839:34;22819:18;;;22812:62;22891:18;;2497:73:16;22559:356:18;2497:73:16;2604:1;2589:12;:16;2581:64;;;;-1:-1:-1;;;2581:64:16;;23122:2:18;2581:64:16;;;23104:21:18;23161:2;23141:18;;;23134:30;23200:34;23180:18;;;23173:62;-1:-1:-1;;;23251:18:18;;;23244:33;23294:19;;2581:64:16;22920:399:18;2581:64:16;2677:1;2664:10;:14;2656:60;;;;-1:-1:-1;;;2656:60:16;;23526:2:18;2656:60:16;;;23508:21:18;23565:2;23545:18;;;23538:30;23604:34;23584:18;;;23577:62;-1:-1:-1;;;23655:18:18;;;23648:31;23696:19;;2656:60:16;23324:397:18;2656:60:16;2757:1;2741:5;2735:19;:23;2727:62;;;;-1:-1:-1;;;2727:62:16;;23928:2:18;2727:62:16;;;23910:21:18;23967:2;23947:18;;;23940:30;24006:28;23986:18;;;23979:56;24052:18;;2727:62:16;23726:350:18;2727:62:16;2802:14;:16;;;:14;:16;;;:::i;:::-;;;;-1:-1:-1;;2847:14:16;;2892:350;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2829:15;2892:350;;;;;;3157:10;2892:350;;;;3192:4;2892:350;;;;;;;;;;;;2874:15;;;:6;:15;;;;;;;:368;;;;;;2892:350;;2874:15;:368;;;;;;;;:::i;:::-;-1:-1:-1;2874:368:16;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2874:368:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2874:368:16;-1:-1:-1;;;;;;2874:368:16;;;-1:-1:-1;;;;;2874:368:16;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;3289:10;-1:-1:-1;;;;;3260:66:16;3273:7;3260:66;3282:5;3301:12;3315:10;3260:66;;;;;;;;:::i;:::-;;;;;;;;3344:7;2241:1118;-1:-1:-1;;;;;;;2241:1118:16:o;12753:114::-;1531:13:0;:11;:13::i;:::-;12854:5:16::1;12826:16:::0;;;:6:::1;:16;::::0;;;;:25:::1;;:33:::0;;-1:-1:-1;;;;12826:33:16::1;::::0;;12753:114::o;2518:93:2:-;2565:13;2597:7;2590:14;;;;;:::i;3718:144::-;3803:52;735:10:9;3836:8:2;3846;3803:18;:52::i;4985:208::-;5098:31;5111:4;5117:2;5121:7;5098:12;:31::i;:::-;5139:47;5162:4;5168:2;5172:7;5181:4;5139:22;:47::i;7854:274:16:-;7901:14;7928:24;7967:14;;7955:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;7928:54:16;-1:-1:-1;8010:1:16;7993:101;8018:14;;8013:1;:19;7993:101;;8073:6;:9;8080:1;8073:9;;;;;;;;;;;8054:28;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;8054:28:16;;;-1:-1:-1;;8054:28:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8054:28:16;;;;;;-1:-1:-1;;;8054:28:16;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;8068:1;8064;:5;;;;:::i;:::-;8054:16;;;;;;;;:::i;:::-;;;;;;:28;;;;8034:3;;;;;:::i;:::-;;;;7993:101;;;-1:-1:-1;8111:9:16;7854:274;-1:-1:-1;7854:274:16:o;10351:1137::-;10416:13;10442:22;10456:7;10442:13;:22::i;:::-;-1:-1:-1;10477:25:16;10505:16;;;:7;:16;;;;;:28;;10477:56;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10576:1;10554:11;10548:25;:29;10544:197;;;10716:11;10688:40;;;;;;;;:::i;:::-;;;;;;;;;;;;;10674:55;;;10351:1137;;;:::o;10544:197::-;10828:15;10846:7;:16;10854:7;10846:16;;;;;;;;;;;10828:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10873:14;10890:6;:17;10897:1;:9;;;10890:17;;;;;;;;;;;10873:34;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;10873:34:16;;;-1:-1:-1;;10873:34:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;10873:34:16;;;;;;-1:-1:-1;;;10873:34:16;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10920:17;11025:1;:6;;;11073:32;11090:1;:14;;;11073:16;:32::i;:::-;11187:1;:13;;;11283:1;:10;;;10940:405;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;10920:425;;11449:19;11463:4;11449:13;:19::i;:::-;11372:107;;;;;;;;:::i;:::-;;;;;;;;;;;;;11358:122;;;;;;10351:1137;;;:::o;3928:153:2:-;-1:-1:-1;;;;;4039:25:2;;;4016:4;4039:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;3928:153::o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;1906:51:18::0;1879:18;;2672:31:0::1;1760:203:18::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;1561:300:2:-:0;1663:4;-1:-1:-1;;;;;;1698:40:2;;-1:-1:-1;;;1698:40:2;;:104;;-1:-1:-1;;;;;;;1754:48:2;;-1:-1:-1;;;1754:48:2;1698:104;:156;;;-1:-1:-1;;;;;;;;;;861:40:12;;;1818:36:2;762:146:12;16138:241:2;16201:7;5799:16;;;:7;:16;;;;;;-1:-1:-1;;;;;5799:16:2;;16263:88;;16309:31;;-1:-1:-1;;;16309:31:2;;;;;3696:25:18;;;3669:18;;16309:31:2;3550:177:18;14418:120:2;14498:33;14507:2;14511:7;14520:4;14526;14498:8;:33::i;12965:466:16:-;13052:7;13165:28;;;:19;:28;;;;;:37;;;;;13161:203;;;13259:5;13219:28;;;:19;:28;;;;;;:37;;;:45;;-1:-1:-1;;13219:45:16;;;;13316:35;;13284:68;;-1:-1:-1;;;;;13316:35:16;;;;13239:7;;13284:68;;13259:5;13284:68;13161:203;13391:32;13405:2;13409:7;13418:4;13391:13;:32::i;:::-;13384:39;12965:466;-1:-1:-1;;;;12965:466:16:o;2431:307:10:-;1755:1;2558:7;;:18;2554:86;;2599:30;;-1:-1:-1;;;2599:30:10;;;;;;;;;;;2554:86;1755:1;2714:7;:17;2431:307::o;12013:460:2:-;-1:-1:-1;;;;;12098:16:2;;12094:87;;12137:33;;-1:-1:-1;;;12137:33:2;;12167:1;12137:33;;;1906:51:18;1879:18;;12137:33:2;1760:203:18;12094:87:2;12190:21;12214:32;12222:2;12226:7;12243:1;12214:7;:32::i;:::-;12190:56;-1:-1:-1;;;;;;12260:27:2;;12256:211;;12310:31;;-1:-1:-1;;;12310:31:2;;;;;3696:25:18;;;3669:18;;12310:31:2;3550:177:18;12256:211:2;12379:4;-1:-1:-1;;;;;12362:21:2;:13;-1:-1:-1;;;;;12362:21:2;;12358:109;;12406:50;;-1:-1:-1;;;12406:50:2;;-1:-1:-1;;;;;13814:15:18;;;12406:50:2;;;13796:34:18;13846:18;;;13839:34;;;13909:15;;13889:18;;;13882:43;13731:18;;12406:50:2;13556:375:18;10633:100:2;10700:26;10710:2;10714:7;10700:26;;;;;;;;;;;;:9;:26::i;1796:162:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;735:10:9;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:9;1901:40:0;;;1906:51:18;1879:18;;1901:40:0;1760:203:18;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;15591:312:2:-;-1:-1:-1;;;;;15698:22:2;;15694:91;;15743:31;;-1:-1:-1;;;15743:31:2;;-1:-1:-1;;;;;1924:32:18;;15743:31:2;;;1906:51:18;1879:18;;15743:31:2;1760:203:18;15694:91:2;-1:-1:-1;;;;;15794:25:2;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;15794:46:2;;;;;;;;;;15855:41;;636::18;;;15855::2;;609:18:18;15855:41:2;496:187:18;16918:782:2;-1:-1:-1;;;;;17034:14:2;;;:18;17030:664;;17072:71;;-1:-1:-1;;;17072:71:2;;-1:-1:-1;;;;;17072:36:2;;;;;:71;;735:10:9;;17123:4:2;;17129:7;;17138:4;;17072:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17072:71:2;;;;;;;;-1:-1:-1;;17072:71:2;;;;;;;;;;;;:::i;:::-;;;17068:616;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17381:6;:13;17398:1;17381:18;17377:293;;17430:25;;-1:-1:-1;;;17430:25:2;;-1:-1:-1;;;;;1924:32:18;;17430:25:2;;;1906:51:18;1879:18;;17430:25:2;1760:203:18;17377:293:2;17622:6;17616:13;17607:6;17603:2;17599:15;17592:38;17068:616;-1:-1:-1;;;;;;17190:51:2;;-1:-1:-1;;;17190:51:2;17186:130;;17272:25;;-1:-1:-1;;;17272:25:2;;-1:-1:-1;;;;;1924:32:18;;17272:25:2;;;1906:51:18;1879:18;;17272:25:2;1760:203:18;17186:130:2;17144:186;16918:782;;;;:::o;637:698:11:-;693:13;742:14;759:17;770:5;759:10;:17::i;:::-;779:1;759:21;742:38;;794:20;828:6;817:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:18:11;-1:-1:-1;794:41:11;-1:-1:-1;955:28:11;;;971:2;955:28;1010:282;-1:-1:-1;;1041:5:11;-1:-1:-1;;;1175:2:11;1164:14;;1159:32;1041:5;1146:46;1236:2;1227:11;;;-1:-1:-1;1256:21:11;1010:282;1256:21;-1:-1:-1;1312:6:11;637:698;-1:-1:-1;;;637:698:11:o;476:3382:8:-;534:13;766:4;:11;781:1;766:16;762:31;;-1:-1:-1;;784:9:8;;;;;;;;;-1:-1:-1;784:9:8;;;476:3382::o;762:31::-;843:19;865:6;;;;;;;;;;;;;;;;;843:28;;1274:20;1333:1;1314:4;:11;1328:1;1314:15;;;;:::i;:::-;1313:21;;;;:::i;:::-;1308:27;;:1;:27;:::i;:::-;1297:39;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1297:39:8;;1274:62;;1511:1;1504:5;1500:13;1612:4;1604:6;1600:17;1645:4;1692;1686:11;1680:4;1676:22;1940:4;1932:6;1928:17;1982:8;1976:15;2021:4;2011:8;2004:22;2093:1259;2126:6;2117:7;2114:19;2093:1259;;;2228:1;2219:7;2215:15;2204:26;;2266:7;2260:14;2853:4;2845:5;2841:2;2837:14;2833:25;2823:8;2819:40;2813:47;2802:9;2794:67;2906:1;2895:9;2891:17;2878:30;;2996:4;2988:5;2984:2;2980:14;2976:25;2966:8;2962:40;2956:47;2945:9;2937:67;3049:1;3038:9;3034:17;3021:30;;3138:4;3130:5;3127:1;3123:13;3119:24;3109:8;3105:39;3099:46;3088:9;3080:66;3191:1;3180:9;3176:17;3163:30;;3272:4;3265:5;3261:16;3251:8;3247:31;3241:38;3230:9;3222:58;;3325:1;3314:9;3310:17;3297:30;;2093:1259;;;3413:28;;-1:-1:-1;;3586:11:8;;3599:1;3582:19;;3619:1;3614:120;;;;3752:1;3747:71;;;;3575:243;;3614:120;3666:4;3662:1;3651:9;3647:17;3639:32;3715:4;3711:1;3700:9;3696:17;3688:32;3614:120;;3747:71;3799:4;3795:1;3784:9;3780:17;3772:32;3575:243;-1:-1:-1;3845:6:8;;476:3382;-1:-1:-1;;;;;476:3382:8:o;14720:662:2:-;14880:9;:31;;;-1:-1:-1;;;;;;14893:18:2;;;;14880:31;14876:460;;;14927:13;14943:22;14957:7;14943:13;:22::i;:::-;14927:38;-1:-1:-1;;;;;;15093:18:2;;;;;;:35;;;15124:4;-1:-1:-1;;;;;15115:13:2;:5;-1:-1:-1;;;;;15115:13:2;;;15093:35;:69;;;;;15133:29;15150:5;15157:4;15133:16;:29::i;:::-;15132:30;15093:69;15089:142;;;15189:27;;-1:-1:-1;;;15189:27:2;;-1:-1:-1;;;;;1924:32:18;;15189:27:2;;;1906:51:18;1879:18;;15189:27:2;1760:203:18;15089:142:2;15249:9;15245:81;;;15303:7;15299:2;-1:-1:-1;;;;;15283:28:2;15292:5;-1:-1:-1;;;;;15283:28:2;;;;;;;;;;;15245:81;14913:423;14876:460;-1:-1:-1;;15346:24:2;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;15346:29:2;-1:-1:-1;;;;;15346:29:2;;;;;;;;;;14720:662::o;2518:625:5:-;2613:7;2632:21;2656:32;2670:2;2674:7;2683:4;2656:13;:32::i;:::-;2632:56;-1:-1:-1;;;;;;2703:27:5;;2699:210;;2746:40;2778:7;3949:10;:17;;3922:24;;;;:15;:24;;;;;:44;;;3976:24;;;;;;;;;;;;3846:161;2746:40;2699:210;;;2824:2;-1:-1:-1;;;;;2807:19:5;:13;-1:-1:-1;;;;;2807:19:5;;2803:106;;2842:56;2875:13;2890:7;2842:32;:56::i;:::-;-1:-1:-1;;;;;2922:16:5;;2918:188;;2954:45;2991:7;2954:36;:45::i;:::-;2918:188;;;3037:2;-1:-1:-1;;;;;3020:19:5;:13;-1:-1:-1;;;;;3020:19:5;;3016:90;;3055:40;3083:2;3087:7;3055:27;:40::i;10954:182:2:-;11048:18;11054:2;11058:7;11048:5;:18::i;:::-;11076:53;11107:1;11111:2;11115:7;11124:4;11076:22;:53::i;12214:916:14:-;12267:7;;-1:-1:-1;;;12342:17:14;;12338:103;;-1:-1:-1;;;12379:17:14;;;-1:-1:-1;12424:2:14;12414:12;12338:103;12467:8;12458:5;:17;12454:103;;12504:8;12495:17;;;-1:-1:-1;12540:2:14;12530:12;12454:103;12583:8;12574:5;:17;12570:103;;12620:8;12611:17;;;-1:-1:-1;12656:2:14;12646:12;12570:103;12699:7;12690:5;:16;12686:100;;12735:7;12726:16;;;-1:-1:-1;12770:1:14;12760:11;12686:100;12812:7;12803:5;:16;12799:100;;12848:7;12839:16;;;-1:-1:-1;12883:1:14;12873:11;12799:100;12925:7;12916:5;:16;12912:100;;12961:7;12952:16;;;-1:-1:-1;12996:1:14;12986:11;12912:100;13038:7;13029:5;:16;13025:66;;13075:1;13065:11;13117:6;12214:916;-1:-1:-1;;12214:916:14:o;8838:795:2:-;8924:7;5799:16;;;:7;:16;;;;;;-1:-1:-1;;;;;5799:16:2;;;;9035:18;;;9031:86;;9069:37;9086:4;9092;9098:7;9069:16;:37::i;:::-;-1:-1:-1;;;;;9161:18:2;;;9157:256;;9277:48;9294:1;9298:7;9315:1;9319:5;9277:8;:48::i;:::-;-1:-1:-1;;;;;9368:15:2;;;;;;:9;:15;;;;;:20;;-1:-1:-1;;9368:20:2;;;9157:256;-1:-1:-1;;;;;9427:16:2;;;9423:107;;-1:-1:-1;;;;;9487:13:2;;;;;;:9;:13;;;;;:18;;9504:1;9487:18;;;9423:107;9540:16;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9540:21:2;-1:-1:-1;;;;;9540:21:2;;;;;;;;;9577:27;;9540:16;;9577:27;;;;;;;9622:4;8838:795;-1:-1:-1;;;;8838:795:2:o;4624:959:5:-;4886:22;4911:15;4921:4;4911:9;:15::i;:::-;4936:18;4957:26;;;:17;:26;;;;;;4886:40;;-1:-1:-1;5087:28:5;;;5083:323;;-1:-1:-1;;;;;5153:18:5;;5131:19;5153:18;;;:12;:18;;;;;;;;:34;;;;;;;;;5202:30;;;;;;:44;;;5318:30;;:17;:30;;;;;:43;;;5083:323;-1:-1:-1;5499:26:5;;;;:17;:26;;;;;;;;5492:33;;;-1:-1:-1;;;;;5542:18:5;;;;;:12;:18;;;;;:34;;;;;;;5535:41;4624:959::o;5871:1061::-;6145:10;:17;6120:22;;6145:21;;6165:1;;6145:21;:::i;:::-;6176:18;6197:24;;;:15;:24;;;;;;6565:10;:26;;6120:46;;-1:-1:-1;6197:24:5;;6120:46;;6565:26;;;;;;:::i;:::-;;;;;;;;;6543:48;;6627:11;6602:10;6613;6602:22;;;;;;;;:::i;:::-;;;;;;;;;;;;:36;;;;6706:28;;;:15;:28;;;;;;;:41;;;6875:24;;;;;6868:31;6909:10;:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;5942:990;;;5871:1061;:::o;3437:214::-;3521:14;3554:1;3538:13;3548:2;3538:9;:13::i;:::-;:17;;;;:::i;:::-;-1:-1:-1;;;;;3565:16:5;;;;;;;:12;:16;;;;;;;;:24;;;;;;;;:34;;;3609:26;;;:17;:26;;;;;;:35;;;;-1:-1:-1;3437:214:5:o;9955:327:2:-;-1:-1:-1;;;;;10022:16:2;;10018:87;;10061:33;;-1:-1:-1;;;10061:33:2;;10091:1;10061:33;;;1906:51:18;1879:18;;10061:33:2;1760:203:18;10018:87:2;10114:21;10138:32;10146:2;10150:7;10167:1;10138:7;:32::i;:::-;10114:56;-1:-1:-1;;;;;;10184:27:2;;;10180:96;;10234:31;;-1:-1:-1;;;10234:31:2;;10262:1;10234:31;;;1906:51:18;1879:18;;10234:31:2;1760:203:18;7082:368:2;7194:38;7208:5;7215:7;7224;7194:13;:38::i;:::-;7189:255;;-1:-1:-1;;;;;7252:19:2;;7248:186;;7298:31;;-1:-1:-1;;;7298:31:2;;;;;3696:25:18;;;3669:18;;7298:31:2;3550:177:18;7248:186:2;7375:44;;-1:-1:-1;;;7375:44:2;;-1:-1:-1;;;;;14128:32:18;;7375:44:2;;;14110:51:18;14177:18;;;14170:34;;;14083:18;;7375:44:2;13936:274:18;6376:272:2;6479:4;-1:-1:-1;;;;;6514:21:2;;;;;;:127;;;6561:7;-1:-1:-1;;;;;6552:16:2;:5;-1:-1:-1;;;;;6552:16:2;;:52;;;;6572:32;6589:5;6596:7;6572:16;:32::i;:::-;6552:88;;;-1:-1:-1;;6008:7:2;6034:24;;;:15;:24;;;;;;-1:-1:-1;;;;;6034:24:2;;;6608:32;;;;;-1:-1:-1;6376:272:2:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:131:18:-;-1:-1:-1;;;;;;88:32:18;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;:::-;384:5;150:245;-1:-1:-1;;;150:245:18:o;688:250::-;773:1;783:113;797:6;794:1;791:13;783:113;;;873:11;;;867:18;854:11;;;847:39;819:2;812:10;783:113;;;-1:-1:-1;;930:1:18;912:16;;905:27;688:250::o;943:282::-;996:3;1034:5;1028:12;1061:6;1056:3;1049:19;1077:76;1146:6;1139:4;1134:3;1130:14;1123:4;1116:5;1112:16;1077:76;:::i;:::-;1207:2;1186:15;-1:-1:-1;;1182:29:18;1173:39;;;;1214:4;1169:50;;943:282;-1:-1:-1;;943:282:18:o;1230:231::-;1379:2;1368:9;1361:21;1342:4;1399:56;1451:2;1440:9;1436:18;1428:6;1399:56;:::i;1466:180::-;1525:6;1578:2;1566:9;1557:7;1553:23;1549:32;1546:52;;;1594:1;1591;1584:12;1546:52;-1:-1:-1;1617:23:18;;1466:180;-1:-1:-1;1466:180:18:o;1968:173::-;2036:20;;-1:-1:-1;;;;;2085:31:18;;2075:42;;2065:70;;2131:1;2128;2121:12;2146:254;2214:6;2222;2275:2;2263:9;2254:7;2250:23;2246:32;2243:52;;;2291:1;2288;2281:12;2243:52;2314:29;2333:9;2314:29;:::i;:::-;2304:39;2390:2;2375:18;;;;2362:32;;-1:-1:-1;;;2146:254:18:o;2405:1140::-;2803:4;2832:3;2862:6;2851:9;2844:25;2905:2;2900;2889:9;2885:18;2878:30;2931:56;2983:2;2972:9;2968:18;2960:6;2931:56;:::i;:::-;2917:70;;3035:9;3027:6;3023:22;3018:2;3007:9;3003:18;2996:50;3069:44;3106:6;3098;3069:44;:::i;:::-;3055:58;;3149:6;3144:2;3133:9;3129:18;3122:34;3193:6;3187:3;3176:9;3172:19;3165:35;3237:6;3231:3;3220:9;3216:19;3209:35;3281:6;3275:3;3264:9;3260:19;3253:35;3354:1;3350;3345:3;3341:11;3337:19;3329:6;3325:32;3319:3;3308:9;3304:19;3297:61;3409:6;3402:14;3395:22;3389:3;3378:9;3374:19;3367:51;3467:9;3459:6;3455:22;3449:3;3438:9;3434:19;3427:51;3495:44;3532:6;3524;3495:44;:::i;:::-;3487:52;2405:1140;-1:-1:-1;;;;;;;;;;;;;2405:1140:18:o;3732:328::-;3809:6;3817;3825;3878:2;3866:9;3857:7;3853:23;3849:32;3846:52;;;3894:1;3891;3884:12;3846:52;3917:29;3936:9;3917:29;:::i;:::-;3907:39;;3965:38;3999:2;3988:9;3984:18;3965:38;:::i;:::-;3955:48;;4050:2;4039:9;4035:18;4022:32;4012:42;;3732:328;;;;;:::o;4065:248::-;4133:6;4141;4194:2;4182:9;4173:7;4169:23;4165:32;4162:52;;;4210:1;4207;4200:12;4162:52;-1:-1:-1;;4233:23:18;;;4303:2;4288:18;;;4275:32;;-1:-1:-1;4065:248:18:o;4318:127::-;4379:10;4374:3;4370:20;4367:1;4360:31;4410:4;4407:1;4400:15;4434:4;4431:1;4424:15;4450:632;4515:5;4545:18;4586:2;4578:6;4575:14;4572:40;;;4592:18;;:::i;:::-;4667:2;4661:9;4635:2;4721:15;;-1:-1:-1;;4717:24:18;;;4743:2;4713:33;4709:42;4697:55;;;4767:18;;;4787:22;;;4764:46;4761:72;;;4813:18;;:::i;:::-;4853:10;4849:2;4842:22;4882:6;4873:15;;4912:6;4904;4897:22;4952:3;4943:6;4938:3;4934:16;4931:25;4928:45;;;4969:1;4966;4959:12;4928:45;5019:6;5014:3;5007:4;4999:6;4995:17;4982:44;5074:1;5067:4;5058:6;5050;5046:19;5042:30;5035:41;;;;4450:632;;;;;:::o;5087:222::-;5130:5;5183:3;5176:4;5168:6;5164:17;5160:27;5150:55;;5201:1;5198;5191:12;5150:55;5223:80;5299:3;5290:6;5277:20;5270:4;5262:6;5258:17;5223:80;:::i;5314:390::-;5392:6;5400;5453:2;5441:9;5432:7;5428:23;5424:32;5421:52;;;5469:1;5466;5459:12;5421:52;5505:9;5492:23;5482:33;;5566:2;5555:9;5551:18;5538:32;5593:18;5585:6;5582:30;5579:50;;;5625:1;5622;5615:12;5579:50;5648;5690:7;5681:6;5670:9;5666:22;5648:50;:::i;:::-;5638:60;;;5314:390;;;;;:::o;6141:446::-;6374:6;6363:9;6356:25;6417:6;6412:2;6401:9;6397:18;6390:34;6460:6;6455:2;6444:9;6440:18;6433:34;6503:3;6498:2;6487:9;6483:18;6476:31;6337:4;6524:57;6576:3;6565:9;6561:19;6553:6;6524:57;:::i;:::-;6516:65;6141:446;-1:-1:-1;;;;;;6141:446:18:o;6592:254::-;6660:6;6668;6721:2;6709:9;6700:7;6696:23;6692:32;6689:52;;;6737:1;6734;6727:12;6689:52;6773:9;6760:23;6750:33;;6802:38;6836:2;6825:9;6821:18;6802:38;:::i;:::-;6792:48;;6592:254;;;;;:::o;6851:632::-;7022:2;7074:21;;;7144:13;;7047:18;;;7166:22;;;6993:4;;7022:2;7245:15;;;;7219:2;7204:18;;;6993:4;7288:169;7302:6;7299:1;7296:13;7288:169;;;7363:13;;7351:26;;7432:15;;;;7397:12;;;;7324:1;7317:9;7288:169;;;-1:-1:-1;7474:3:18;;6851:632;-1:-1:-1;;;;;;6851:632:18:o;7488:1120::-;7536:3;7564:6;7597:5;7591:12;7586:3;7579:25;7650:4;7643:5;7639:16;7633:23;7688:2;7681:4;7676:3;7672:14;7665:26;7712:56;7764:2;7759:3;7755:12;7741;7712:56;:::i;:::-;7700:68;;;7816:4;7809:5;7805:16;7799:23;7864:3;7858:4;7854:14;7847:4;7842:3;7838:14;7831:38;7892:50;7937:4;7921:14;7892:50;:::i;:::-;7878:64;;;7991:4;7984:5;7980:16;7974:23;7967:4;7962:3;7958:14;7951:47;8047:4;8040:5;8036:16;8030:23;8023:4;8018:3;8014:14;8007:47;8103:4;8096:5;8092:16;8086:23;8079:4;8074:3;8070:14;8063:47;8159:4;8152:5;8148:16;8142:23;8135:4;8130:3;8126:14;8119:47;8214:4;8207:5;8203:16;8197:23;8229:50;8273:4;8268:3;8264:14;8248;-1:-1:-1;;;;;1717:31:18;1705:44;;1651:104;8229:50;-1:-1:-1;8298:6:18;8341:14;;;8335:21;470:13;463:21;8397:12;;;451:34;8429:6;8472:14;;;8466:21;8517:16;;;8503:12;;;8496:38;8550:52;8521:6;8466:21;8550:52;:::i;8613:252::-;8788:2;8777:9;8770:21;8751:4;8808:51;8855:2;8844:9;8840:18;8832:6;8808:51;:::i;8870:186::-;8929:6;8982:2;8970:9;8961:7;8957:23;8953:32;8950:52;;;8998:1;8995;8988:12;8950:52;9021:29;9040:9;9021:29;:::i;9061:528::-;9238:2;9227:9;9220:21;9283:6;9277:13;9272:2;9261:9;9257:18;9250:41;9345:2;9337:6;9333:15;9327:22;9322:2;9311:9;9307:18;9300:50;9404:2;9396:6;9392:15;9386:22;9381:2;9370:9;9366:18;9359:50;9201:4;9456:2;9448:6;9444:15;9438:22;9498:4;9491;9480:9;9476:20;9469:34;9520:63;9578:3;9567:9;9563:19;9549:12;9520:63;:::i;9594:950::-;9728:6;9736;9744;9752;9760;9768;9821:3;9809:9;9800:7;9796:23;9792:33;9789:53;;;9838:1;9835;9828:12;9789:53;9878:9;9865:23;9907:18;9948:2;9940:6;9937:14;9934:34;;;9964:1;9961;9954:12;9934:34;9987:50;10029:7;10020:6;10009:9;10005:22;9987:50;:::i;:::-;9977:60;;10090:2;10079:9;10075:18;10062:32;10046:48;;10119:2;10109:8;10106:16;10103:36;;;10135:1;10132;10125:12;10103:36;10158:52;10202:7;10191:8;10180:9;10176:24;10158:52;:::i;:::-;10148:62;;10257:2;10246:9;10242:18;10229:32;10219:42;;10308:2;10297:9;10293:18;10280:32;10270:42;;10359:3;10348:9;10344:19;10331:33;10321:43;;10417:3;10406:9;10402:19;10389:33;10373:49;;10447:2;10437:8;10434:16;10431:36;;;10463:1;10460;10453:12;10431:36;;10486:52;10530:7;10519:8;10508:9;10504:24;10486:52;:::i;:::-;10476:62;;;9594:950;;;;;;;;:::o;10549:347::-;10614:6;10622;10675:2;10663:9;10654:7;10650:23;10646:32;10643:52;;;10691:1;10688;10681:12;10643:52;10714:29;10733:9;10714:29;:::i;:::-;10704:39;;10793:2;10782:9;10778:18;10765:32;10840:5;10833:13;10826:21;10819:5;10816:32;10806:60;;10862:1;10859;10852:12;10806:60;10885:5;10875:15;;;10549:347;;;;;:::o;10901:667::-;10996:6;11004;11012;11020;11073:3;11061:9;11052:7;11048:23;11044:33;11041:53;;;11090:1;11087;11080:12;11041:53;11113:29;11132:9;11113:29;:::i;:::-;11103:39;;11161:38;11195:2;11184:9;11180:18;11161:38;:::i;:::-;11151:48;;11246:2;11235:9;11231:18;11218:32;11208:42;;11301:2;11290:9;11286:18;11273:32;11328:18;11320:6;11317:30;11314:50;;;11360:1;11357;11350:12;11314:50;11383:22;;11436:4;11428:13;;11424:27;-1:-1:-1;11414:55:18;;11465:1;11462;11455:12;11414:55;11488:74;11554:7;11549:2;11536:16;11531:2;11527;11523:11;11488:74;:::i;:::-;11478:84;;;10901:667;;;;;;;:::o;11573:835::-;11761:4;11790:2;11830;11819:9;11815:18;11860:2;11849:9;11842:21;11883:6;11918;11912:13;11949:6;11941;11934:22;11987:2;11976:9;11972:18;11965:25;;12049:2;12039:6;12036:1;12032:14;12021:9;12017:30;12013:39;11999:53;;12087:2;12079:6;12075:15;12108:1;12118:261;12132:6;12129:1;12126:13;12118:261;;;12225:2;12221:7;12209:9;12201:6;12197:22;12193:36;12188:3;12181:49;12253:46;12292:6;12283;12277:13;12253:46;:::i;:::-;12243:56;-1:-1:-1;12357:12:18;;;;12322:15;;;;12154:1;12147:9;12118:261;;;-1:-1:-1;12396:6:18;;11573:835;-1:-1:-1;;;;;;;11573:835:18:o;12906:260::-;12974:6;12982;13035:2;13023:9;13014:7;13010:23;13006:32;13003:52;;;13051:1;13048;13041:12;13003:52;13074:29;13093:9;13074:29;:::i;:::-;13064:39;;13122:38;13156:2;13145:9;13141:18;13122:38;:::i;13171:380::-;13250:1;13246:12;;;;13293;;;13314:61;;13368:4;13360:6;13356:17;13346:27;;13314:61;13421:2;13413:6;13410:14;13390:18;13387:38;13384:161;;13467:10;13462:3;13458:20;13455:1;13448:31;13502:4;13499:1;13492:15;13530:4;13527:1;13520:15;16867:545;16969:2;16964:3;16961:11;16958:448;;;17005:1;17030:5;17026:2;17019:17;17075:4;17071:2;17061:19;17145:2;17133:10;17129:19;17126:1;17122:27;17116:4;17112:38;17181:4;17169:10;17166:20;17163:47;;;-1:-1:-1;17204:4:18;17163:47;17259:2;17254:3;17250:12;17247:1;17243:20;17237:4;17233:31;17223:41;;17314:82;17332:2;17325:5;17322:13;17314:82;;;17377:17;;;17358:1;17347:13;17314:82;;;17318:3;;;16867:545;;;:::o;17588:1352::-;17714:3;17708:10;17741:18;17733:6;17730:30;17727:56;;;17763:18;;:::i;:::-;17792:97;17882:6;17842:38;17874:4;17868:11;17842:38;:::i;:::-;17836:4;17792:97;:::i;:::-;17944:4;;18008:2;17997:14;;18025:1;18020:663;;;;18727:1;18744:6;18741:89;;;-1:-1:-1;18796:19:18;;;18790:26;18741:89;-1:-1:-1;;17545:1:18;17541:11;;;17537:24;17533:29;17523:40;17569:1;17565:11;;;17520:57;18843:81;;17990:944;;18020:663;16814:1;16807:14;;;16851:4;16838:18;;-1:-1:-1;;18056:20:18;;;18174:236;18188:7;18185:1;18182:14;18174:236;;;18277:19;;;18271:26;18256:42;;18369:27;;;;18337:1;18325:14;;;;18204:19;;18174:236;;;18178:3;18438:6;18429:7;18426:19;18423:201;;;18499:19;;;18493:26;-1:-1:-1;;18582:1:18;18578:14;;;18594:3;18574:24;18570:37;18566:42;18551:58;18536:74;;18423:201;-1:-1:-1;;;;;18670:1:18;18654:14;;;18650:22;18637:36;;-1:-1:-1;17588:1352:18:o;18945:127::-;19006:10;19001:3;18997:20;18994:1;18987:31;19037:4;19034:1;19027:15;19061:4;19058:1;19051:15;21110:127;21171:10;21166:3;21162:20;21159:1;21152:31;21202:4;21199:1;21192:15;21226:4;21223:1;21216:15;21242:135;21281:3;21302:17;;;21299:43;;21322:18;;:::i;:::-;-1:-1:-1;21369:1:18;21358:13;;21242:135::o;22429:125::-;22494:9;;;22515:10;;;22512:36;;;22528:18;;:::i;24081:373::-;24286:2;24275:9;24268:21;24249:4;24306:56;24358:2;24347:9;24343:18;24335:6;24306:56;:::i;:::-;24393:2;24378:18;;24371:34;;;;-1:-1:-1;24436:2:18;24421:18;24414:34;24298:64;24081:373;-1:-1:-1;24081:373:18:o;24459:128::-;24526:9;;;24547:11;;;24544:37;;;24561:18;;:::i;24592:198::-;24634:3;24672:5;24666:12;24687:65;24745:6;24740:3;24733:4;24726:5;24722:16;24687:65;:::i;:::-;24768:16;;;;;24592:198;-1:-1:-1;;24592:198:18:o;24795:437::-;-1:-1:-1;;;25052:3:18;25045:22;25027:3;25096:6;25090:13;25112:74;25179:6;25175:1;25170:3;25166:11;25159:4;25151:6;25147:17;25112:74;:::i;:::-;25206:16;;;;25224:1;25202:24;;24795:437;-1:-1:-1;;24795:437:18:o;25484:2146::-;-1:-1:-1;;;26686:16:18;;-1:-1:-1;;;26727:1:18;26718:11;;26711:49;26783:13;;-1:-1:-1;;26805:74:18;26783:13;26868:1;26859:11;;26852:4;26840:17;;26805:74;:::i;:::-;-1:-1:-1;;;26938:1:18;26898:16;;;26930:10;;;26923:24;26972:13;;26994:76;26972:13;27056:2;27048:11;;27041:4;27029:17;;26994:76;:::i;:::-;-1:-1:-1;;;27163:2:18;27089:17;;;;27155:11;;;27148:23;;;-1:-1:-1;;;27195:2:18;27187:11;;27180:63;27268:13;;27290:76;27268:13;27352:2;27344:11;;27337:4;27325:17;;27290:76;:::i;:::-;27426:2;27385:17;;27418:11;;;27411:23;-1:-1:-1;;;27458:2:18;27450:11;;27443:65;27524:100;27554:69;27584:38;27618:2;27610:11;;27602:6;27584:38;:::i;:::-;-1:-1:-1;;;25302:25:18;;25352:1;25343:11;;25237:123;27554:69;-1:-1:-1;;;25430:16:18;;25471:1;25462:11;;25365:114;27524:100;27517:107;25484:2146;-1:-1:-1;;;;;;;25484:2146:18:o;27635:461::-;27897:31;27892:3;27885:44;27867:3;27958:6;27952:13;27974:75;28042:6;28037:2;28032:3;28028:12;28021:4;28013:6;28009:17;27974:75;:::i;:::-;28069:16;;;;28087:2;28065:25;;27635:461;-1:-1:-1;;27635:461:18:o;28101:500::-;-1:-1:-1;;;;;28370:15:18;;;28352:34;;28422:15;;28417:2;28402:18;;28395:43;28469:2;28454:18;;28447:34;;;28517:3;28512:2;28497:18;;28490:31;;;28295:4;;28538:57;;28575:19;;28567:6;28538:57;:::i;28606:249::-;28675:6;28728:2;28716:9;28707:7;28703:23;28699:32;28696:52;;;28744:1;28741;28734:12;28696:52;28776:9;28770:16;28795:30;28819:5;28795:30;:::i;28992:217::-;29032:1;29058;29048:132;;29102:10;29097:3;29093:20;29090:1;29083:31;29137:4;29134:1;29127:15;29165:4;29162:1;29155:15;29048:132;-1:-1:-1;29194:9:18;;28992:217::o;29214:168::-;29287:9;;;29318;;29335:15;;;29329:22;;29315:37;29305:71;;29356:18;;:::i;29387:127::-;29448:10;29443:3;29439:20;29436:1;29429:31;29479:4;29476:1;29469:15;29503:4;29500:1;29493:15"},"gasEstimates":{"creation":{"codeDepositCost":"3227000","executionCost":"infinite","totalCost":"infinite"},"external":{"approve(address,uint256)":"31560","balanceOf(address)":"2657","buyListedTicket(uint256)":"infinite","buyTicket(uint256)":"infinite","cancelListing(uint256)":"30456","createEvent(string,string,uint256,uint256,uint256,string)":"infinite","deactivateEvent(uint256)":"26814","eventIdCounter()":"2361","events(uint256)":"infinite","getActiveListings()":"infinite","getAllEvents()":"infinite","getApproved(uint256)":"infinite","getEvent(uint256)":"infinite","getMarketplaceListing(uint256)":"9190","getTicket(uint256)":"infinite","getTicketsByEventAndOwner(uint256,address)":"infinite","isApprovedForAll(address,address)":"infinite","listTicket(uint256,uint256)":"infinite","marketplaceListings(uint256)":"9000","name()":"infinite","owner()":"2420","ownerOf(uint256)":"infinite","renounceOwnership()":"infinite","safeTransferFrom(address,address,uint256)":"infinite","safeTransferFrom(address,address,uint256,bytes)":"infinite","setApprovalForAll(address,bool)":"26738","supportsInterface(bytes4)":"infinite","symbol()":"infinite","ticketIdCounter()":"2362","ticketToEvent(uint256)":"2570","tickets(uint256)":"infinite","tokenByIndex(uint256)":"6849","tokenOfOwnerByIndex(address,uint256)":"5042","tokenURI(uint256)":"infinite","totalSupply()":"2349","transferFrom(address,address,uint256)":"infinite","transferOwnership(address)":"28446","updateTicketMetadata(uint256,string)":"infinite"},"internal":{"_generateMetadataURI(uint256,uint256)":"infinite","_toString(uint256)":"infinite","_update(address,uint256,address)":"infinite"}},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","buyListedTicket(uint256)":"50248853","buyTicket(uint256)":"67dd74ca","cancelListing(uint256)":"305a67a8","createEvent(string,string,uint256,uint256,uint256,string)":"94816f83","deactivateEvent(uint256)":"957a632e","eventIdCounter()":"e01a0ebe","events(uint256)":"0b791430","getActiveListings()":"87c35bc0","getAllEvents()":"c27a500d","getApproved(uint256)":"081812fc","getEvent(uint256)":"6d1884e0","getMarketplaceListing(uint256)":"d5a87ecb","getTicket(uint256)":"7dc379fa","getTicketsByEventAndOwner(uint256,address)":"65ec74b0","isApprovedForAll(address,address)":"e985e9c5","listTicket(uint256,uint256)":"305a905a","marketplaceListings(uint256)":"48c32093","name()":"06fdde03","owner()":"8da5cb5b","ownerOf(uint256)":"6352211e","renounceOwnership()":"715018a6","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","ticketIdCounter()":"8802255f","ticketToEvent(uint256)":"f6ac04da","tickets(uint256)":"50b44712","tokenByIndex(uint256)":"4f6ccce7","tokenOfOwnerByIndex(address,uint256)":"2f745c59","tokenURI(uint256)":"c87b56dd","totalSupply()":"18160ddd","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","updateTicketMetadata(uint256,string)":"33a03d22"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ERC721EnumerableForbiddenBatchMint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"ERC721OutOfBoundsIndex\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"organizer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ticketPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"}],\"name\":\"EventCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"ticketId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"TicketListed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"ticketId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"}],\"name\":\"TicketListingCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"ticketId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ticketNumber\",\"type\":\"uint256\"}],\"name\":\"TicketMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"ticketId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"TicketSold\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ticketId\",\"type\":\"uint256\"}],\"name\":\"buyListedTicket\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_eventId\",\"type\":\"uint256\"}],\"name\":\"buyTicket\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ticketId\",\"type\":\"uint256\"}],\"name\":\"cancelListing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_eventDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ticketPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_imageCID\",\"type\":\"string\"}],\"name\":\"createEvent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_eventId\",\"type\":\"uint256\"}],\"name\":\"deactivateEvent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eventIdCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"events\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"eventDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ticketPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"soldTickets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"organizer\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"imageCID\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActiveListings\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllEvents\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"eventDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ticketPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"soldTickets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"organizer\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"imageCID\",\"type\":\"string\"}],\"internalType\":\"struct EventTicketNFT.Event[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_eventId\",\"type\":\"uint256\"}],\"name\":\"getEvent\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"eventDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ticketPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"soldTickets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"organizer\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"imageCID\",\"type\":\"string\"}],\"internalType\":\"struct EventTicketNFT.Event\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ticketId\",\"type\":\"uint256\"}],\"name\":\"getMarketplaceListing\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"ticketId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"internalType\":\"struct EventTicketNFT.MarketplaceListing\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ticketId\",\"type\":\"uint256\"}],\"name\":\"getTicket\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ticketNumber\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"internalType\":\"struct EventTicketNFT.Ticket\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_eventId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"getTicketsByEventAndOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ticketId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"listTicket\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"marketplaceListings\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"ticketId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ticketIdCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ticketToEvent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tickets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ticketNumber\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ticketId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_metadataURI\",\"type\":\"string\"}],\"name\":\"updateTicketMetadata\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"NFT-based event ticketing system with marketplace functionality\",\"errors\":{\"ERC721EnumerableForbiddenBatchMint()\":[{\"details\":\"Batch mint is not allowed.\"}],\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721OutOfBoundsIndex(address,uint256)\":[{\"details\":\"An `owner`'s token query was out of bounds for `index`. NOTE: The owner being `address(0)` indicates a global out of bounds index.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"buyListedTicket(uint256)\":{\"details\":\"Buy a ticket from the marketplace\"},\"buyTicket(uint256)\":{\"details\":\"Purchase a ticket for an event\"},\"cancelListing(uint256)\":{\"details\":\"Cancel a marketplace listing\"},\"createEvent(string,string,uint256,uint256,uint256,string)\":{\"details\":\"Create a new event\"},\"deactivateEvent(uint256)\":{\"details\":\"Emergency function to deactivate an event (only owner)\"},\"getActiveListings()\":{\"details\":\"Get active marketplace listings\"},\"getAllEvents()\":{\"details\":\"Get all events (for frontend display)\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"getEvent(uint256)\":{\"details\":\"Get event details\"},\"getMarketplaceListing(uint256)\":{\"details\":\"Get marketplace listing details\"},\"getTicket(uint256)\":{\"details\":\"Get ticket details\"},\"getTicketsByEventAndOwner(uint256,address)\":{\"details\":\"Get tickets owned by an address for a specific event\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"listTicket(uint256,uint256)\":{\"details\":\"List a ticket for resale on the marketplace\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"tokenURI(uint256)\":{\"details\":\"Override tokenURI to return ticket metadata\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateTicketMetadata(uint256,string)\":{\"details\":\"Update ticket metadata URI after IPFS upload\"}},\"title\":\"EventTicketNFT\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/EventTicketNFT.sol\":\"EventTicketNFT\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC721} from \\\"./IERC721.sol\\\";\\nimport {IERC721Receiver} from \\\"./IERC721Receiver.sol\\\";\\nimport {IERC721Metadata} from \\\"./extensions/IERC721Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {Strings} from \\\"../../utils/Strings.sol\\\";\\nimport {IERC165, ERC165} from \\\"../../utils/introspection/ERC165.sol\\\";\\nimport {IERC721Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    mapping(uint256 tokenId => address) private _owners;\\n\\n    mapping(address owner => uint256) private _balances;\\n\\n    mapping(uint256 tokenId => address) private _tokenApprovals;\\n\\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual returns (uint256) {\\n        if (owner == address(0)) {\\n            revert ERC721InvalidOwner(address(0));\\n        }\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\\n        return _requireOwned(tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\\n        _requireOwned(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual {\\n        _approve(to, tokenId, _msgSender());\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\\n        _requireOwned(tokenId);\\n\\n        return _getApproved(tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\\n        if (to == address(0)) {\\n            revert ERC721InvalidReceiver(address(0));\\n        }\\n        // Setting an \\\"auth\\\" arguments enables the `_isAuthorized` check which verifies that the token exists\\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\\n        address previousOwner = _update(to, tokenId, _msgSender());\\n        if (previousOwner != from) {\\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\\n        }\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\\n        transferFrom(from, to, tokenId);\\n        _checkOnERC721Received(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\\n     *\\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\\n     */\\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\\n        return _owners[tokenId];\\n    }\\n\\n    /**\\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\\n     */\\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\\n     * particular (ignoring whether it is owned by `owner`).\\n     *\\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\\n     * assumption.\\n     */\\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        return\\n            spender != address(0) &&\\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\\n     * the `spender` for the specific `tokenId`.\\n     *\\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\\n     * assumption.\\n     */\\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\\n        if (!_isAuthorized(owner, spender, tokenId)) {\\n            if (owner == address(0)) {\\n                revert ERC721NonexistentToken(tokenId);\\n            } else {\\n                revert ERC721InsufficientApproval(spender, tokenId);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Unsafe write access to the balances, used by extensions that \\\"mint\\\" tokens using an {ownerOf} override.\\n     *\\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\\n     *\\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\\n     * remain consistent with one another.\\n     */\\n    function _increaseBalance(address account, uint128 value) internal virtual {\\n        unchecked {\\n            _balances[account] += value;\\n        }\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\\n     *\\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\\n     */\\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\\n        address from = _ownerOf(tokenId);\\n\\n        // Perform (optional) operator check\\n        if (auth != address(0)) {\\n            _checkAuthorized(from, auth, tokenId);\\n        }\\n\\n        // Execute the update\\n        if (from != address(0)) {\\n            // Clear approval. No need to re-authorize or emit the Approval event\\n            _approve(address(0), tokenId, address(0), false);\\n\\n            unchecked {\\n                _balances[from] -= 1;\\n            }\\n        }\\n\\n        if (to != address(0)) {\\n            unchecked {\\n                _balances[to] += 1;\\n            }\\n        }\\n\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        return from;\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal {\\n        if (to == address(0)) {\\n            revert ERC721InvalidReceiver(address(0));\\n        }\\n        address previousOwner = _update(to, tokenId, address(0));\\n        if (previousOwner != address(0)) {\\n            revert ERC721InvalidSender(address(0));\\n        }\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\\n        _mint(to, tokenId);\\n        _checkOnERC721Received(address(0), to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal {\\n        address previousOwner = _update(address(0), tokenId, address(0));\\n        if (previousOwner == address(0)) {\\n            revert ERC721NonexistentToken(tokenId);\\n        }\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(address from, address to, uint256 tokenId) internal {\\n        if (to == address(0)) {\\n            revert ERC721InvalidReceiver(address(0));\\n        }\\n        address previousOwner = _update(to, tokenId, address(0));\\n        if (previousOwner == address(0)) {\\n            revert ERC721NonexistentToken(tokenId);\\n        } else if (previousOwner != from) {\\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\\n        }\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - `to` cannot be the zero address.\\n     * - `from` cannot be the zero address.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\\n        _safeTransfer(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\\n        _transfer(from, to, tokenId);\\n        _checkOnERC721Received(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address to, uint256 tokenId, address auth) internal {\\n        _approve(to, tokenId, auth, true);\\n    }\\n\\n    /**\\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\\n     * emitted in the context of transfers.\\n     */\\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\\n        // Avoid reading the owner unless necessary\\n        if (emitEvent || auth != address(0)) {\\n            address owner = _requireOwned(tokenId);\\n\\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\\n                revert ERC721InvalidApprover(auth);\\n            }\\n\\n            if (emitEvent) {\\n                emit Approval(owner, to, tokenId);\\n            }\\n        }\\n\\n        _tokenApprovals[tokenId] = to;\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Requirements:\\n     * - operator can't be the address zero.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\\n        if (operator == address(0)) {\\n            revert ERC721InvalidOperator(operator);\\n        }\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\\n     * Returns the owner.\\n     *\\n     * Overrides to ownership logic should be done to {_ownerOf}.\\n     */\\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\\n        address owner = _ownerOf(tokenId);\\n        if (owner == address(0)) {\\n            revert ERC721NonexistentToken(tokenId);\\n        }\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     */\\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\\n        if (to.code.length > 0) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                if (retval != IERC721Receiver.onERC721Received.selector) {\\n                    revert ERC721InvalidReceiver(to);\\n                }\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert ERC721InvalidReceiver(to);\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\\n     *   {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the address zero.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\\n     * reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/ERC721Enumerable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ERC721} from \\\"../ERC721.sol\\\";\\nimport {IERC721Enumerable} from \\\"./IERC721Enumerable.sol\\\";\\nimport {IERC165} from \\\"../../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev This implements an optional extension of {ERC721} defined in the EIP that adds enumerability\\n * of all the token ids in the contract as well as all token ids owned by each account.\\n *\\n * CAUTION: `ERC721` extensions that implement custom `balanceOf` logic, such as `ERC721Consecutive`,\\n * interfere with enumerability and should not be used together with `ERC721Enumerable`.\\n */\\nabstract contract ERC721Enumerable is ERC721, IERC721Enumerable {\\n    mapping(address owner => mapping(uint256 index => uint256)) private _ownedTokens;\\n    mapping(uint256 tokenId => uint256) private _ownedTokensIndex;\\n\\n    uint256[] private _allTokens;\\n    mapping(uint256 tokenId => uint256) private _allTokensIndex;\\n\\n    /**\\n     * @dev An `owner`'s token query was out of bounds for `index`.\\n     *\\n     * NOTE: The owner being `address(0)` indicates a global out of bounds index.\\n     */\\n    error ERC721OutOfBoundsIndex(address owner, uint256 index);\\n\\n    /**\\n     * @dev Batch mint is not allowed.\\n     */\\n    error ERC721EnumerableForbiddenBatchMint();\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC721) returns (bool) {\\n        return interfaceId == type(IERC721Enumerable).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721Enumerable-tokenOfOwnerByIndex}.\\n     */\\n    function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual returns (uint256) {\\n        if (index >= balanceOf(owner)) {\\n            revert ERC721OutOfBoundsIndex(owner, index);\\n        }\\n        return _ownedTokens[owner][index];\\n    }\\n\\n    /**\\n     * @dev See {IERC721Enumerable-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _allTokens.length;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Enumerable-tokenByIndex}.\\n     */\\n    function tokenByIndex(uint256 index) public view virtual returns (uint256) {\\n        if (index >= totalSupply()) {\\n            revert ERC721OutOfBoundsIndex(address(0), index);\\n        }\\n        return _allTokens[index];\\n    }\\n\\n    /**\\n     * @dev See {ERC721-_update}.\\n     */\\n    function _update(address to, uint256 tokenId, address auth) internal virtual override returns (address) {\\n        address previousOwner = super._update(to, tokenId, auth);\\n\\n        if (previousOwner == address(0)) {\\n            _addTokenToAllTokensEnumeration(tokenId);\\n        } else if (previousOwner != to) {\\n            _removeTokenFromOwnerEnumeration(previousOwner, tokenId);\\n        }\\n        if (to == address(0)) {\\n            _removeTokenFromAllTokensEnumeration(tokenId);\\n        } else if (previousOwner != to) {\\n            _addTokenToOwnerEnumeration(to, tokenId);\\n        }\\n\\n        return previousOwner;\\n    }\\n\\n    /**\\n     * @dev Private function to add a token to this extension's ownership-tracking data structures.\\n     * @param to address representing the new owner of the given token ID\\n     * @param tokenId uint256 ID of the token to be added to the tokens list of the given address\\n     */\\n    function _addTokenToOwnerEnumeration(address to, uint256 tokenId) private {\\n        uint256 length = balanceOf(to) - 1;\\n        _ownedTokens[to][length] = tokenId;\\n        _ownedTokensIndex[tokenId] = length;\\n    }\\n\\n    /**\\n     * @dev Private function to add a token to this extension's token tracking data structures.\\n     * @param tokenId uint256 ID of the token to be added to the tokens list\\n     */\\n    function _addTokenToAllTokensEnumeration(uint256 tokenId) private {\\n        _allTokensIndex[tokenId] = _allTokens.length;\\n        _allTokens.push(tokenId);\\n    }\\n\\n    /**\\n     * @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\\n     * while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\\n     * gas optimizations e.g. when performing a transfer operation (avoiding double writes).\\n     * This has O(1) time complexity, but alters the order of the _ownedTokens array.\\n     * @param from address representing the previous owner of the given token ID\\n     * @param tokenId uint256 ID of the token to be removed from the tokens list of the given address\\n     */\\n    function _removeTokenFromOwnerEnumeration(address from, uint256 tokenId) private {\\n        // To prevent a gap in from's tokens array, we store the last token in the index of the token to delete, and\\n        // then delete the last slot (swap and pop).\\n\\n        uint256 lastTokenIndex = balanceOf(from);\\n        uint256 tokenIndex = _ownedTokensIndex[tokenId];\\n\\n        // When the token to delete is the last token, the swap operation is unnecessary\\n        if (tokenIndex != lastTokenIndex) {\\n            uint256 lastTokenId = _ownedTokens[from][lastTokenIndex];\\n\\n            _ownedTokens[from][tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\\n            _ownedTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\\n        }\\n\\n        // This also deletes the contents at the last position of the array\\n        delete _ownedTokensIndex[tokenId];\\n        delete _ownedTokens[from][lastTokenIndex];\\n    }\\n\\n    /**\\n     * @dev Private function to remove a token from this extension's token tracking data structures.\\n     * This has O(1) time complexity, but alters the order of the _allTokens array.\\n     * @param tokenId uint256 ID of the token to be removed from the tokens list\\n     */\\n    function _removeTokenFromAllTokensEnumeration(uint256 tokenId) private {\\n        // To prevent a gap in the tokens array, we store the last token in the index of the token to delete, and\\n        // then delete the last slot (swap and pop).\\n\\n        uint256 lastTokenIndex = _allTokens.length - 1;\\n        uint256 tokenIndex = _allTokensIndex[tokenId];\\n\\n        // When the token to delete is the last token, the swap operation is unnecessary. However, since this occurs so\\n        // rarely (when the last minted token is burnt) that we still do the swap here to avoid the gas cost of adding\\n        // an 'if' statement (like in _removeTokenFromOwnerEnumeration)\\n        uint256 lastTokenId = _allTokens[lastTokenIndex];\\n\\n        _allTokens[tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\\n        _allTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\\n\\n        // This also deletes the contents at the last position of the array\\n        delete _allTokensIndex[tokenId];\\n        _allTokens.pop();\\n    }\\n\\n    /**\\n     * See {ERC721-_increaseBalance}. We need that to account tokens that were minted in batch\\n     */\\n    function _increaseBalance(address account, uint128 amount) internal virtual override {\\n        if (amount > 0) {\\n            revert ERC721EnumerableForbiddenBatchMint();\\n        }\\n        super._increaseBalance(account, amount);\\n    }\\n}\\n\",\"keccak256\":\"0x36797469c391ea5ba27408e6ca8adf0824ba6f3adea9c139be18bd6f63232c16\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Enumerable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC721} from \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Enumerable is IERC721 {\\n    /**\\n     * @dev Returns the total amount of tokens stored by the contract.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\\n     */\\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\\n     * Use along with {totalSupply} to enumerate all tokens.\\n     */\\n    function tokenByIndex(uint256 index) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x3d6954a93ac198a2ffa384fa58ccf18e7e235263e051a394328002eff4e073de\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC721} from \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Base64.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.2) (utils/Base64.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides a set of functions to operate with Base64 strings.\\n */\\nlibrary Base64 {\\n    /**\\n     * @dev Base64 Encoding/Decoding Table\\n     */\\n    string internal constant _TABLE = \\\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\\\";\\n\\n    /**\\n     * @dev Converts a `bytes` to its Bytes64 `string` representation.\\n     */\\n    function encode(bytes memory data) internal pure returns (string memory) {\\n        /**\\n         * Inspired by Brecht Devos (Brechtpd) implementation - MIT licence\\n         * https://github.com/Brechtpd/base64/blob/e78d9fd951e7b0977ddca77d92dc85183770daf4/base64.sol\\n         */\\n        if (data.length == 0) return \\\"\\\";\\n\\n        // Loads the table into memory\\n        string memory table = _TABLE;\\n\\n        // Encoding takes 3 bytes chunks of binary data from `bytes` data parameter\\n        // and split into 4 numbers of 6 bits.\\n        // The final Base64 length should be `bytes` data length multiplied by 4/3 rounded up\\n        // - `data.length + 2`  -> Round up\\n        // - `/ 3`              -> Number of 3-bytes chunks\\n        // - `4 *`              -> 4 characters for each chunk\\n        string memory result = new string(4 * ((data.length + 2) / 3));\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            // Prepare the lookup table (skip the first \\\"length\\\" byte)\\n            let tablePtr := add(table, 1)\\n\\n            // Prepare result pointer, jump over length\\n            let resultPtr := add(result, 0x20)\\n            let dataPtr := data\\n            let endPtr := add(data, mload(data))\\n\\n            // In some cases, the last iteration will read bytes after the end of the data. We cache the value, and\\n            // set it to zero to make sure no dirty bytes are read in that section.\\n            let afterPtr := add(endPtr, 0x20)\\n            let afterCache := mload(afterPtr)\\n            mstore(afterPtr, 0x00)\\n\\n            // Run over the input, 3 bytes at a time\\n            for {\\n\\n            } lt(dataPtr, endPtr) {\\n\\n            } {\\n                // Advance 3 bytes\\n                dataPtr := add(dataPtr, 3)\\n                let input := mload(dataPtr)\\n\\n                // To write each character, shift the 3 byte (24 bits) chunk\\n                // 4 times in blocks of 6 bits for each character (18, 12, 6, 0)\\n                // and apply logical AND with 0x3F to bitmask the least significant 6 bits.\\n                // Use this as an index into the lookup table, mload an entire word\\n                // so the desired character is in the least significant byte, and\\n                // mstore8 this least significant byte into the result and continue.\\n\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(18, input), 0x3F))))\\n                resultPtr := add(resultPtr, 1) // Advance\\n\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(12, input), 0x3F))))\\n                resultPtr := add(resultPtr, 1) // Advance\\n\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(6, input), 0x3F))))\\n                resultPtr := add(resultPtr, 1) // Advance\\n\\n                mstore8(resultPtr, mload(add(tablePtr, and(input, 0x3F))))\\n                resultPtr := add(resultPtr, 1) // Advance\\n            }\\n\\n            // Reset the value that was cached\\n            mstore(afterPtr, afterCache)\\n\\n            // When data `bytes` is not exactly 3 bytes long\\n            // it is padded with `=` characters at the end\\n            switch mod(mload(data), 3)\\n            case 1 {\\n                mstore8(sub(resultPtr, 1), 0x3d)\\n                mstore8(sub(resultPtr, 2), 0x3d)\\n            }\\n            case 2 {\\n                mstore8(sub(resultPtr, 1), 0x3d)\\n            }\\n        }\\n\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0x09000342b85b1a06fa1f5b71bdeef7c449cd25799aac14fa9053d8abd18219aa\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    constructor() {\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if (_status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Math} from \\\"./math/Math.sol\\\";\\nimport {SignedMath} from \\\"./math/SignedMath.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant HEX_DIGITS = \\\"0123456789abcdef\\\";\\n    uint8 private constant ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev The `value` string doesn't fit in the specified `length`.\\n     */\\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toStringSigned(int256 value) internal pure returns (string memory) {\\n        return string.concat(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMath.abs(value)));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        uint256 localValue = value;\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\\n            localValue >>= 4;\\n        }\\n        if (localValue != 0) {\\n            revert StringsInsufficientHexLength(value, length);\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\\n     * representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    /**\\n     * @dev Muldiv operation overflow.\\n     */\\n    error MathOverflowedMulDiv();\\n\\n    enum Rounding {\\n        Floor, // Toward negative infinity\\n        Ceil, // Toward positive infinity\\n        Trunc, // Toward zero\\n        Expand // Away from zero\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds towards infinity instead\\n     * of rounding towards zero.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (b == 0) {\\n            // Guarantee the same behavior as in a regular Solidity division.\\n            return a / b;\\n        }\\n\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\\n     * denominator == 0.\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\\n     * Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            if (denominator <= prod1) {\\n                revert MathOverflowedMulDiv();\\n            }\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\\n\\n            uint256 twos = denominator & (0 - denominator);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\\n            // works in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\\n     * towards zero.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\\n     */\\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\\n        return uint8(rounding) % 2 == 1;\\n    }\\n}\\n\",\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\"},\"contracts/EventTicketNFT.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity >=0.8.0 <0.9.0;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC721/ERC721.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/utils/Base64.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/utils/Strings.sol\\\";\\r\\n\\r\\n/**\\r\\n * @title EventTicketNFT\\r\\n * @dev NFT-based event ticketing system with marketplace functionality\\r\\n */\\r\\ncontract EventTicketNFT is ERC721Enumerable, Ownable, ReentrancyGuard {\\r\\n    uint256 public eventIdCounter;\\r\\n    uint256 public ticketIdCounter;\\r\\n\\r\\n    struct Event {\\r\\n        uint256 id;\\r\\n        string name;\\r\\n        string description;\\r\\n        uint256 eventDate;\\r\\n        uint256 ticketPrice;\\r\\n        uint256 maxSupply;\\r\\n        uint256 soldTickets;\\r\\n        address organizer;\\r\\n        bool isActive;\\r\\n        string imageCID; // IPFS CID for event image\\r\\n    }\\r\\n\\r\\n    struct Ticket {\\r\\n        uint256 id;\\r\\n        uint256 eventId;\\r\\n        uint256 ticketNumber;\\r\\n        string metadataURI;\\r\\n    }\\r\\n\\r\\n    struct MarketplaceListing {\\r\\n        uint256 ticketId;\\r\\n        address seller;\\r\\n        uint256 price;\\r\\n        bool isActive;\\r\\n    }\\r\\n\\r\\n    // Mappings\\r\\n    mapping(uint256 => Event) public events;\\r\\n    mapping(uint256 => Ticket) public tickets;\\r\\n    mapping(uint256 => MarketplaceListing) public marketplaceListings;\\r\\n    mapping(uint256 => uint256) public ticketToEvent; // ticketId => eventId\\r\\n    \\r\\n    // Events\\r\\n    event EventCreated(uint256 indexed eventId, string name, address indexed organizer, uint256 ticketPrice, uint256 maxSupply);\\r\\n    event TicketMinted(uint256 indexed ticketId, uint256 indexed eventId, address indexed buyer, uint256 ticketNumber);\\r\\n    event TicketListed(uint256 indexed ticketId, address indexed seller, uint256 price);\\r\\n    event TicketSold(uint256 indexed ticketId, address indexed seller, address indexed buyer, uint256 price);\\r\\n    event TicketListingCancelled(uint256 indexed ticketId, address indexed seller);\\r\\n\\r\\n    constructor() ERC721(\\\"EventTicketNFT\\\", \\\"ETNFT\\\") Ownable(msg.sender) {}\\r\\n\\r\\n    /**\\r\\n     * @dev Create a new event\\r\\n     */\\r\\n    function createEvent(\\r\\n        string memory _name,\\r\\n        string memory _description,\\r\\n        uint256 _eventDate,\\r\\n        uint256 _ticketPrice,\\r\\n        uint256 _maxSupply,\\r\\n        string memory _imageCID\\r\\n    ) external returns (uint256) {\\r\\n        require(_eventDate > block.timestamp, \\\"Event date must be in the future\\\");\\r\\n        require(_ticketPrice > 0, \\\"Ticket price must be greater than 0\\\");\\r\\n        require(_maxSupply > 0, \\\"Max supply must be greater than 0\\\");\\r\\n        require(bytes(_name).length > 0, \\\"Event name cannot be empty\\\");\\r\\n\\r\\n        eventIdCounter++;\\r\\n        uint256 eventId = eventIdCounter;\\r\\n\\r\\n        events[eventId] = Event({\\r\\n            id: eventId,\\r\\n            name: _name,\\r\\n            description: _description,\\r\\n            eventDate: _eventDate,\\r\\n            ticketPrice: _ticketPrice,\\r\\n            maxSupply: _maxSupply,\\r\\n            soldTickets: 0,\\r\\n            organizer: msg.sender,\\r\\n            isActive: true,\\r\\n            imageCID: _imageCID\\r\\n        });\\r\\n\\r\\n        emit EventCreated(eventId, _name, msg.sender, _ticketPrice, _maxSupply);\\r\\n        return eventId;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Purchase a ticket for an event\\r\\n     */\\r\\n    function buyTicket(uint256 _eventId) external payable nonReentrant returns (uint256) {\\r\\n        Event storage eventInfo = events[_eventId];\\r\\n        require(eventInfo.isActive, \\\"Event is not active\\\");\\r\\n        require(eventInfo.soldTickets < eventInfo.maxSupply, \\\"Event is sold out\\\");\\r\\n        require(msg.value >= eventInfo.ticketPrice, \\\"Insufficient payment\\\");\\r\\n        require(block.timestamp < eventInfo.eventDate, \\\"Event has already passed\\\");\\r\\n\\r\\n        ticketIdCounter++;\\r\\n        uint256 ticketId = ticketIdCounter;\\r\\n        uint256 ticketNumber = eventInfo.soldTickets + 1;\\r\\n\\r\\n        // Update event sold tickets\\r\\n        eventInfo.soldTickets++;\\r\\n\\r\\n        // Create ticket with temporary metadata URI - will be updated by frontend\\r\\n        tickets[ticketId] = Ticket({\\r\\n            id: ticketId,\\r\\n            eventId: _eventId,\\r\\n            ticketNumber: ticketNumber,\\r\\n            metadataURI: \\\"\\\"\\r\\n        });\\r\\n\\r\\n        ticketToEvent[ticketId] = _eventId;\\r\\n\\r\\n        // Mint NFT to buyer\\r\\n        _safeMint(msg.sender, ticketId);\\r\\n\\r\\n        // Transfer payment to event organizer\\r\\n        (bool success, ) = payable(eventInfo.organizer).call{value: msg.value}(\\\"\\\");\\r\\n        require(success, \\\"Payment transfer failed\\\");\\r\\n\\r\\n        emit TicketMinted(ticketId, _eventId, msg.sender, ticketNumber);\\r\\n        return ticketId;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev List a ticket for resale on the marketplace\\r\\n     */\\r\\n    function listTicket(uint256 _ticketId, uint256 _price) external {\\r\\n        require(ownerOf(_ticketId) == msg.sender, \\\"You don't own this ticket\\\");\\r\\n        require(_price > 0, \\\"Price must be greater than 0\\\");\\r\\n        require(!marketplaceListings[_ticketId].isActive, \\\"Ticket is already listed\\\");\\r\\n\\r\\n        // Check if event hasn't passed yet\\r\\n        uint256 eventId = ticketToEvent[_ticketId];\\r\\n        require(events[eventId].eventDate > block.timestamp, \\\"Cannot sell tickets for past events\\\");\\r\\n\\r\\n        marketplaceListings[_ticketId] = MarketplaceListing({\\r\\n            ticketId: _ticketId,\\r\\n            seller: msg.sender,\\r\\n            price: _price,\\r\\n            isActive: true\\r\\n        });\\r\\n\\r\\n        emit TicketListed(_ticketId, msg.sender, _price);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Buy a ticket from the marketplace\\r\\n     */\\r\\n    function buyListedTicket(uint256 _ticketId) external payable nonReentrant {\\r\\n        MarketplaceListing storage listing = marketplaceListings[_ticketId];\\r\\n        require(listing.isActive, \\\"Ticket is not listed for sale\\\");\\r\\n        require(msg.value >= listing.price, \\\"Insufficient payment\\\");\\r\\n        require(ownerOf(_ticketId) == listing.seller, \\\"Seller no longer owns the ticket\\\");\\r\\n\\r\\n        // Check if event hasn't passed yet\\r\\n        uint256 eventId = ticketToEvent[_ticketId];\\r\\n        require(events[eventId].eventDate > block.timestamp, \\\"Cannot buy tickets for past events\\\");\\r\\n\\r\\n        address seller = listing.seller;\\r\\n        uint256 price = listing.price;\\r\\n\\r\\n        // Deactivate listing\\r\\n        listing.isActive = false;\\r\\n\\r\\n        // Transfer ticket ownership\\r\\n        _transfer(seller, msg.sender, _ticketId);\\r\\n\\r\\n        // Transfer payment to seller\\r\\n        (bool success, ) = payable(seller).call{value: msg.value}(\\\"\\\");\\r\\n        require(success, \\\"Payment transfer failed\\\");\\r\\n\\r\\n        emit TicketSold(_ticketId, seller, msg.sender, price);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Cancel a marketplace listing\\r\\n     */\\r\\n    function cancelListing(uint256 _ticketId) external {\\r\\n        MarketplaceListing storage listing = marketplaceListings[_ticketId];\\r\\n        require(listing.seller == msg.sender, \\\"You are not the seller\\\");\\r\\n        require(listing.isActive, \\\"Listing is not active\\\");\\r\\n\\r\\n        listing.isActive = false;\\r\\n\\r\\n        emit TicketListingCancelled(_ticketId, msg.sender);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Get event details\\r\\n     */\\r\\n    function getEvent(uint256 _eventId) external view returns (Event memory) {\\r\\n        return events[_eventId];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Get ticket details\\r\\n     */\\r\\n    function getTicket(uint256 _ticketId) external view returns (Ticket memory) {\\r\\n        return tickets[_ticketId];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Get marketplace listing details\\r\\n     */\\r\\n    function getMarketplaceListing(uint256 _ticketId) external view returns (MarketplaceListing memory) {\\r\\n        return marketplaceListings[_ticketId];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Get all events (for frontend display)\\r\\n     */\\r\\n    function getAllEvents() external view returns (Event[] memory) {\\r\\n        Event[] memory allEvents = new Event[](eventIdCounter);\\r\\n        for (uint256 i = 1; i <= eventIdCounter; i++) {\\r\\n            allEvents[i - 1] = events[i];\\r\\n        }\\r\\n        return allEvents;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Get active marketplace listings\\r\\n     */\\r\\n    function getActiveListings() external view returns (uint256[] memory) {\\r\\n        uint256 activeCount = 0;\\r\\n        \\r\\n        // First, count active listings\\r\\n        for (uint256 i = 1; i <= ticketIdCounter; i++) {\\r\\n            if (marketplaceListings[i].isActive) {\\r\\n                activeCount++;\\r\\n            }\\r\\n        }\\r\\n        \\r\\n        // Create array and populate\\r\\n        uint256[] memory activeListings = new uint256[](activeCount);\\r\\n        uint256 currentIndex = 0;\\r\\n        \\r\\n        for (uint256 i = 1; i <= ticketIdCounter; i++) {\\r\\n            if (marketplaceListings[i].isActive) {\\r\\n                activeListings[currentIndex] = i;\\r\\n                currentIndex++;\\r\\n            }\\r\\n        }\\r\\n        \\r\\n        return activeListings;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Get tickets owned by an address for a specific event\\r\\n     */\\r\\n    function getTicketsByEventAndOwner(uint256 _eventId, address _owner) external view returns (uint256[] memory) {\\r\\n        uint256 balance = balanceOf(_owner);\\r\\n        uint256[] memory eventTickets = new uint256[](balance);\\r\\n        uint256 currentIndex = 0;\\r\\n        \\r\\n        for (uint256 i = 0; i < balance; i++) {\\r\\n            uint256 ticketId = tokenOfOwnerByIndex(_owner, i);\\r\\n            if (ticketToEvent[ticketId] == _eventId) {\\r\\n                eventTickets[currentIndex] = ticketId;\\r\\n                currentIndex++;\\r\\n            }\\r\\n        }\\r\\n        \\r\\n        // Resize array to actual size\\r\\n        uint256[] memory result = new uint256[](currentIndex);\\r\\n        for (uint256 i = 0; i < currentIndex; i++) {\\r\\n            result[i] = eventTickets[i];\\r\\n        }\\r\\n        \\r\\n        return result;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Update ticket metadata URI after IPFS upload\\r\\n     */\\r\\n    function updateTicketMetadata(uint256 _ticketId, string memory _metadataURI) external {\\r\\n        require(ownerOf(_ticketId) == msg.sender, \\\"You don't own this ticket\\\");\\r\\n        require(bytes(_metadataURI).length > 0, \\\"Metadata URI cannot be empty\\\");\\r\\n        \\r\\n        tickets[_ticketId].metadataURI = _metadataURI;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Override tokenURI to return ticket metadata\\r\\n     */\\r\\n    function tokenURI(uint256 tokenId) public view override returns (string memory) {\\r\\n        _requireOwned(tokenId);\\r\\n\\r\\n        string memory metadataCid = tickets[tokenId].metadataURI;\\r\\n        if (bytes(metadataCid).length > 0) {\\r\\n            // If frontend has set a metadata CID, return it as an ipfs:// URI\\r\\n            return string(abi.encodePacked(\\\"ipfs://\\\", metadataCid));\\r\\n        }\\r\\n\\r\\n        // Fallback to on-chain JSON metadata using the event's image CID\\r\\n        Ticket memory t = tickets[tokenId];\\r\\n        Event memory e = events[t.eventId];\\r\\n\\r\\n        bytes memory json = abi.encodePacked(\\r\\n            \\\"{\\\",\\r\\n                \\\"\\\\\\\"name\\\\\\\":\\\\\\\"\\\",\\r\\n                e.name,\\r\\n                \\\" #\\\",\\r\\n                Strings.toString(t.ticketNumber),\\r\\n                \\\"\\\\\\\",\\\",\\r\\n                \\\"\\\\\\\"description\\\\\\\":\\\\\\\"\\\",\\r\\n                e.description,\\r\\n                \\\"\\\\\\\",\\\",\\r\\n                \\\"\\\\\\\"image\\\\\\\":\\\\\\\"ipfs://\\\",\\r\\n                e.imageCID,\\r\\n                \\\"\\\\\\\"\\\",\\r\\n            \\\"}\\\"\\r\\n        );\\r\\n\\r\\n        return string(abi.encodePacked(\\r\\n            \\\"data:application/json;base64,\\\",\\r\\n            Base64.encode(json)\\r\\n        ));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Generate metadata URI for a ticket\\r\\n     * In a real implementation, this would point to IPFS metadata\\r\\n     */\\r\\n    function _generateMetadataURI(uint256 _eventId, uint256 _ticketNumber) internal view returns (string memory) {\\r\\n        // Deprecated by on-chain Base64 JSON fallback; retained for compatibility if needed in future\\r\\n        Ticket memory t = tickets[_eventId];\\r\\n        Event memory e = events[t.eventId];\\r\\n        bytes memory json = abi.encodePacked(\\r\\n            \\\"{\\\",\\r\\n                \\\"\\\\\\\"name\\\\\\\":\\\\\\\"\\\",\\r\\n                e.name,\\r\\n                \\\" #\\\",\\r\\n                Strings.toString(_ticketNumber),\\r\\n                \\\"\\\\\\\",\\\",\\r\\n                \\\"\\\\\\\"description\\\\\\\":\\\\\\\"\\\",\\r\\n                e.description,\\r\\n                \\\"\\\\\\\",\\\",\\r\\n                \\\"\\\\\\\"image\\\\\\\":\\\\\\\"ipfs://\\\",\\r\\n                e.imageCID,\\r\\n                \\\"\\\\\\\"\\\",\\r\\n            \\\"}\\\"\\r\\n        );\\r\\n        return string(abi.encodePacked(\\\"data:application/json;base64,\\\", Base64.encode(json)));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Convert uint256 to string\\r\\n     */\\r\\n    function _toString(uint256 value) internal pure returns (string memory) {\\r\\n        return Strings.toString(value);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Emergency function to deactivate an event (only owner)\\r\\n     */\\r\\n    function deactivateEvent(uint256 _eventId) external onlyOwner {\\r\\n        events[_eventId].isActive = false;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Override transfer functions to handle marketplace listings\\r\\n     */\\r\\n    function _update(address to, uint256 tokenId, address auth) internal override returns (address) {\\r\\n        // If ticket is listed on marketplace and being transferred, cancel the listing\\r\\n        if (marketplaceListings[tokenId].isActive) {\\r\\n            marketplaceListings[tokenId].isActive = false;\\r\\n            emit TicketListingCancelled(tokenId, marketplaceListings[tokenId].seller);\\r\\n        }\\r\\n        \\r\\n        return super._update(to, tokenId, auth);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xc38e70febb6322a4717badfd92bb90271247a13fe8137da99b898478c1a314f9\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":317,"contract":"contracts/EventTicketNFT.sol:EventTicketNFT","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":319,"contract":"contracts/EventTicketNFT.sol:EventTicketNFT","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":323,"contract":"contracts/EventTicketNFT.sol:EventTicketNFT","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":327,"contract":"contracts/EventTicketNFT.sol:EventTicketNFT","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":331,"contract":"contracts/EventTicketNFT.sol:EventTicketNFT","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":337,"contract":"contracts/EventTicketNFT.sol:EventTicketNFT","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":1447,"contract":"contracts/EventTicketNFT.sol:EventTicketNFT","label":"_ownedTokens","offset":0,"slot":"6","type":"t_mapping(t_address,t_mapping(t_uint256,t_uint256))"},{"astId":1451,"contract":"contracts/EventTicketNFT.sol:EventTicketNFT","label":"_ownedTokensIndex","offset":0,"slot":"7","type":"t_mapping(t_uint256,t_uint256)"},{"astId":1454,"contract":"contracts/EventTicketNFT.sol:EventTicketNFT","label":"_allTokens","offset":0,"slot":"8","type":"t_array(t_uint256)dyn_storage"},{"astId":1458,"contract":"contracts/EventTicketNFT.sol:EventTicketNFT","label":"_allTokensIndex","offset":0,"slot":"9","type":"t_mapping(t_uint256,t_uint256)"},{"astId":8,"contract":"contracts/EventTicketNFT.sol:EventTicketNFT","label":"_owner","offset":0,"slot":"10","type":"t_address"},{"astId":1960,"contract":"contracts/EventTicketNFT.sol:EventTicketNFT","label":"_status","offset":0,"slot":"11","type":"t_uint256"},{"astId":3485,"contract":"contracts/EventTicketNFT.sol:EventTicketNFT","label":"eventIdCounter","offset":0,"slot":"12","type":"t_uint256"},{"astId":3487,"contract":"contracts/EventTicketNFT.sol:EventTicketNFT","label":"ticketIdCounter","offset":0,"slot":"13","type":"t_uint256"},{"astId":3531,"contract":"contracts/EventTicketNFT.sol:EventTicketNFT","label":"events","offset":0,"slot":"14","type":"t_mapping(t_uint256,t_struct(Event)3508_storage)"},{"astId":3536,"contract":"contracts/EventTicketNFT.sol:EventTicketNFT","label":"tickets","offset":0,"slot":"15","type":"t_mapping(t_uint256,t_struct(Ticket)3517_storage)"},{"astId":3541,"contract":"contracts/EventTicketNFT.sol:EventTicketNFT","label":"marketplaceListings","offset":0,"slot":"16","type":"t_mapping(t_uint256,t_struct(MarketplaceListing)3526_storage)"},{"astId":3545,"contract":"contracts/EventTicketNFT.sol:EventTicketNFT","label":"ticketToEvent","offset":0,"slot":"17","type":"t_mapping(t_uint256,t_uint256)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)dyn_storage":{"base":"t_uint256","encoding":"dynamic_array","label":"uint256[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_mapping(t_uint256,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(uint256 => uint256))","numberOfBytes":"32","value":"t_mapping(t_uint256,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_uint256,t_struct(Event)3508_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct EventTicketNFT.Event)","numberOfBytes":"32","value":"t_struct(Event)3508_storage"},"t_mapping(t_uint256,t_struct(MarketplaceListing)3526_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct EventTicketNFT.MarketplaceListing)","numberOfBytes":"32","value":"t_struct(MarketplaceListing)3526_storage"},"t_mapping(t_uint256,t_struct(Ticket)3517_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct EventTicketNFT.Ticket)","numberOfBytes":"32","value":"t_struct(Ticket)3517_storage"},"t_mapping(t_uint256,t_uint256)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(Event)3508_storage":{"encoding":"inplace","label":"struct EventTicketNFT.Event","members":[{"astId":3489,"contract":"contracts/EventTicketNFT.sol:EventTicketNFT","label":"id","offset":0,"slot":"0","type":"t_uint256"},{"astId":3491,"contract":"contracts/EventTicketNFT.sol:EventTicketNFT","label":"name","offset":0,"slot":"1","type":"t_string_storage"},{"astId":3493,"contract":"contracts/EventTicketNFT.sol:EventTicketNFT","label":"description","offset":0,"slot":"2","type":"t_string_storage"},{"astId":3495,"contract":"contracts/EventTicketNFT.sol:EventTicketNFT","label":"eventDate","offset":0,"slot":"3","type":"t_uint256"},{"astId":3497,"contract":"contracts/EventTicketNFT.sol:EventTicketNFT","label":"ticketPrice","offset":0,"slot":"4","type":"t_uint256"},{"astId":3499,"contract":"contracts/EventTicketNFT.sol:EventTicketNFT","label":"maxSupply","offset":0,"slot":"5","type":"t_uint256"},{"astId":3501,"contract":"contracts/EventTicketNFT.sol:EventTicketNFT","label":"soldTickets","offset":0,"slot":"6","type":"t_uint256"},{"astId":3503,"contract":"contracts/EventTicketNFT.sol:EventTicketNFT","label":"organizer","offset":0,"slot":"7","type":"t_address"},{"astId":3505,"contract":"contracts/EventTicketNFT.sol:EventTicketNFT","label":"isActive","offset":20,"slot":"7","type":"t_bool"},{"astId":3507,"contract":"contracts/EventTicketNFT.sol:EventTicketNFT","label":"imageCID","offset":0,"slot":"8","type":"t_string_storage"}],"numberOfBytes":"288"},"t_struct(MarketplaceListing)3526_storage":{"encoding":"inplace","label":"struct EventTicketNFT.MarketplaceListing","members":[{"astId":3519,"contract":"contracts/EventTicketNFT.sol:EventTicketNFT","label":"ticketId","offset":0,"slot":"0","type":"t_uint256"},{"astId":3521,"contract":"contracts/EventTicketNFT.sol:EventTicketNFT","label":"seller","offset":0,"slot":"1","type":"t_address"},{"astId":3523,"contract":"contracts/EventTicketNFT.sol:EventTicketNFT","label":"price","offset":0,"slot":"2","type":"t_uint256"},{"astId":3525,"contract":"contracts/EventTicketNFT.sol:EventTicketNFT","label":"isActive","offset":0,"slot":"3","type":"t_bool"}],"numberOfBytes":"128"},"t_struct(Ticket)3517_storage":{"encoding":"inplace","label":"struct EventTicketNFT.Ticket","members":[{"astId":3510,"contract":"contracts/EventTicketNFT.sol:EventTicketNFT","label":"id","offset":0,"slot":"0","type":"t_uint256"},{"astId":3512,"contract":"contracts/EventTicketNFT.sol:EventTicketNFT","label":"eventId","offset":0,"slot":"1","type":"t_uint256"},{"astId":3514,"contract":"contracts/EventTicketNFT.sol:EventTicketNFT","label":"ticketNumber","offset":0,"slot":"2","type":"t_uint256"},{"astId":3516,"contract":"contracts/EventTicketNFT.sol:EventTicketNFT","label":"metadataURI","offset":0,"slot":"3","type":"t_string_storage"}],"numberOfBytes":"128"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/SE2NFT.sol":{"SE2NFT":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"ERC721EnumerableForbiddenBatchMint","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"ERC721OutOfBoundsIndex","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"mintItem","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tokenIdCounter","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenOfOwnerByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURIs","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"uris","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"devdoc":{"errors":{"ERC721EnumerableForbiddenBatchMint()":[{"details":"Batch mint is not allowed."}],"ERC721IncorrectOwner(address,uint256,address)":[{"details":"Indicates an error related to the ownership over a particular token. Used in transfers.","params":{"owner":"Address of the current owner of a token.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC721InsufficientApproval(address,uint256)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","tokenId":"Identifier number of a token."}}],"ERC721InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC721InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC721InvalidOwner(address)":[{"details":"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.","params":{"owner":"Address of the current owner of a token."}}],"ERC721InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC721InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC721NonexistentToken(uint256)":[{"details":"Indicates a `tokenId` whose `owner` is the zero address.","params":{"tokenId":"Identifier number of a token."}}],"ERC721OutOfBoundsIndex(address,uint256)":[{"details":"An `owner`'s token query was out of bounds for `index`. NOTE: The owner being `address(0)` indicates a global out of bounds index."}]},"events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenByIndex(uint256)":{"details":"See {IERC721Enumerable-tokenByIndex}."},"tokenOfOwnerByIndex(address,uint256)":{"details":"See {IERC721Enumerable-tokenOfOwnerByIndex}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"totalSupply()":{"details":"See {IERC721Enumerable-totalSupply}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_354":{"entryPoint":null,"id":354,"parameterSlots":2,"returnSlots":0},"@_4591":{"entryPoint":null,"id":4591,"parameterSlots":0,"returnSlots":0},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":529,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":612,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":469,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":447,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:2732:18","statements":[{"nodeType":"YulBlock","src":"6:3:18","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:18","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:18"},"nodeType":"YulFunctionCall","src":"66:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:18"},"nodeType":"YulFunctionCall","src":"56:31:18"},"nodeType":"YulExpressionStatement","src":"56:31:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:18","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:18"},"nodeType":"YulFunctionCall","src":"96:15:18"},"nodeType":"YulExpressionStatement","src":"96:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:18"},"nodeType":"YulFunctionCall","src":"120:15:18"},"nodeType":"YulExpressionStatement","src":"120:15:18"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:127:18"},{"body":{"nodeType":"YulBlock","src":"201:325:18","statements":[{"nodeType":"YulAssignment","src":"211:22:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"225:1:18","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"228:4:18"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"221:3:18"},"nodeType":"YulFunctionCall","src":"221:12:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"211:6:18"}]},{"nodeType":"YulVariableDeclaration","src":"242:38:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"272:4:18"},{"kind":"number","nodeType":"YulLiteral","src":"278:1:18","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"268:3:18"},"nodeType":"YulFunctionCall","src":"268:12:18"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"246:18:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"319:31:18","statements":[{"nodeType":"YulAssignment","src":"321:27:18","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"335:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"343:4:18","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"331:3:18"},"nodeType":"YulFunctionCall","src":"331:17:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"321:6:18"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"299:18:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"292:6:18"},"nodeType":"YulFunctionCall","src":"292:26:18"},"nodeType":"YulIf","src":"289:61:18"},{"body":{"nodeType":"YulBlock","src":"409:111:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"430:1:18","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"437:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"442:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"433:3:18"},"nodeType":"YulFunctionCall","src":"433:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"423:6:18"},"nodeType":"YulFunctionCall","src":"423:31:18"},"nodeType":"YulExpressionStatement","src":"423:31:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"474:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"477:4:18","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"467:6:18"},"nodeType":"YulFunctionCall","src":"467:15:18"},"nodeType":"YulExpressionStatement","src":"467:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"502:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"505:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"495:6:18"},"nodeType":"YulFunctionCall","src":"495:15:18"},"nodeType":"YulExpressionStatement","src":"495:15:18"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"365:18:18"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"388:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"396:2:18","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"385:2:18"},"nodeType":"YulFunctionCall","src":"385:14:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"362:2:18"},"nodeType":"YulFunctionCall","src":"362:38:18"},"nodeType":"YulIf","src":"359:161:18"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"181:4:18","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"190:6:18","type":""}],"src":"146:380:18"},{"body":{"nodeType":"YulBlock","src":"587:65:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"604:1:18","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"607:3:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"597:6:18"},"nodeType":"YulFunctionCall","src":"597:14:18"},"nodeType":"YulExpressionStatement","src":"597:14:18"},{"nodeType":"YulAssignment","src":"620:26:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"638:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"641:4:18","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"628:9:18"},"nodeType":"YulFunctionCall","src":"628:18:18"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"620:4:18"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"570:3:18","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"578:4:18","type":""}],"src":"531:121:18"},{"body":{"nodeType":"YulBlock","src":"738:464:18","statements":[{"body":{"nodeType":"YulBlock","src":"771:425:18","statements":[{"nodeType":"YulVariableDeclaration","src":"785:11:18","value":{"kind":"number","nodeType":"YulLiteral","src":"795:1:18","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"789:2:18","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"816:2:18"},{"name":"array","nodeType":"YulIdentifier","src":"820:5:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"809:6:18"},"nodeType":"YulFunctionCall","src":"809:17:18"},"nodeType":"YulExpressionStatement","src":"809:17:18"},{"nodeType":"YulVariableDeclaration","src":"839:31:18","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"861:2:18"},{"kind":"number","nodeType":"YulLiteral","src":"865:4:18","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"851:9:18"},"nodeType":"YulFunctionCall","src":"851:19:18"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"843:4:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"883:57:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"906:4:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"916:1:18","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"923:10:18"},{"kind":"number","nodeType":"YulLiteral","src":"935:2:18","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"919:3:18"},"nodeType":"YulFunctionCall","src":"919:19:18"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"912:3:18"},"nodeType":"YulFunctionCall","src":"912:27:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"902:3:18"},"nodeType":"YulFunctionCall","src":"902:38:18"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"887:11:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"977:23:18","statements":[{"nodeType":"YulAssignment","src":"979:19:18","value":{"name":"data","nodeType":"YulIdentifier","src":"994:4:18"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"979:11:18"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"959:10:18"},{"kind":"number","nodeType":"YulLiteral","src":"971:4:18","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"956:2:18"},"nodeType":"YulFunctionCall","src":"956:20:18"},"nodeType":"YulIf","src":"953:47:18"},{"nodeType":"YulVariableDeclaration","src":"1013:41:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1027:4:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1037:1:18","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"1044:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"1049:2:18","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1040:3:18"},"nodeType":"YulFunctionCall","src":"1040:12:18"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1033:3:18"},"nodeType":"YulFunctionCall","src":"1033:20:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1023:3:18"},"nodeType":"YulFunctionCall","src":"1023:31:18"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"1017:2:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1067:24:18","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"1080:11:18"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"1071:5:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"1165:21:18","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1174:5:18"},{"name":"_1","nodeType":"YulIdentifier","src":"1181:2:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"1167:6:18"},"nodeType":"YulFunctionCall","src":"1167:17:18"},"nodeType":"YulExpressionStatement","src":"1167:17:18"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1115:5:18"},{"name":"_2","nodeType":"YulIdentifier","src":"1122:2:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1112:2:18"},"nodeType":"YulFunctionCall","src":"1112:13:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1126:26:18","statements":[{"nodeType":"YulAssignment","src":"1128:22:18","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1141:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"1148:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1137:3:18"},"nodeType":"YulFunctionCall","src":"1137:13:18"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"1128:5:18"}]}]},"pre":{"nodeType":"YulBlock","src":"1108:3:18","statements":[]},"src":"1104:82:18"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"754:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"759:2:18","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"751:2:18"},"nodeType":"YulFunctionCall","src":"751:11:18"},"nodeType":"YulIf","src":"748:448:18"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"710:5:18","type":""},{"name":"len","nodeType":"YulTypedName","src":"717:3:18","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"722:10:18","type":""}],"src":"657:545:18"},{"body":{"nodeType":"YulBlock","src":"1292:81:18","statements":[{"nodeType":"YulAssignment","src":"1302:65:18","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1317:4:18"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1335:1:18","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"1338:3:18"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1331:3:18"},"nodeType":"YulFunctionCall","src":"1331:11:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1348:1:18","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1344:3:18"},"nodeType":"YulFunctionCall","src":"1344:6:18"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1327:3:18"},"nodeType":"YulFunctionCall","src":"1327:24:18"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1323:3:18"},"nodeType":"YulFunctionCall","src":"1323:29:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1313:3:18"},"nodeType":"YulFunctionCall","src":"1313:40:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1359:1:18","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"1362:3:18"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1355:3:18"},"nodeType":"YulFunctionCall","src":"1355:11:18"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1310:2:18"},"nodeType":"YulFunctionCall","src":"1310:57:18"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"1302:4:18"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1269:4:18","type":""},{"name":"len","nodeType":"YulTypedName","src":"1275:3:18","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"1283:4:18","type":""}],"src":"1207:166:18"},{"body":{"nodeType":"YulBlock","src":"1474:1256:18","statements":[{"nodeType":"YulVariableDeclaration","src":"1484:24:18","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1504:3:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1498:5:18"},"nodeType":"YulFunctionCall","src":"1498:10:18"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"1488:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"1551:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1553:16:18"},"nodeType":"YulFunctionCall","src":"1553:18:18"},"nodeType":"YulExpressionStatement","src":"1553:18:18"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"1523:6:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1539:2:18","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1543:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1535:3:18"},"nodeType":"YulFunctionCall","src":"1535:10:18"},{"kind":"number","nodeType":"YulLiteral","src":"1547:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1531:3:18"},"nodeType":"YulFunctionCall","src":"1531:18:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1520:2:18"},"nodeType":"YulFunctionCall","src":"1520:30:18"},"nodeType":"YulIf","src":"1517:56:18"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"1626:4:18"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"1664:4:18"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"1658:5:18"},"nodeType":"YulFunctionCall","src":"1658:11:18"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"1632:25:18"},"nodeType":"YulFunctionCall","src":"1632:38:18"},{"name":"newLen","nodeType":"YulIdentifier","src":"1672:6:18"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"1582:43:18"},"nodeType":"YulFunctionCall","src":"1582:97:18"},"nodeType":"YulExpressionStatement","src":"1582:97:18"},{"nodeType":"YulVariableDeclaration","src":"1688:18:18","value":{"kind":"number","nodeType":"YulLiteral","src":"1705:1:18","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"1692:9:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1715:23:18","value":{"kind":"number","nodeType":"YulLiteral","src":"1734:4:18","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"1719:11:18","type":""}]},{"nodeType":"YulAssignment","src":"1747:24:18","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"1760:11:18"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"1747:9:18"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"1817:656:18","statements":[{"nodeType":"YulVariableDeclaration","src":"1831:35:18","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"1850:6:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1862:2:18","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1858:3:18"},"nodeType":"YulFunctionCall","src":"1858:7:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1846:3:18"},"nodeType":"YulFunctionCall","src":"1846:20:18"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"1835:7:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1879:49:18","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"1923:4:18"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"1893:29:18"},"nodeType":"YulFunctionCall","src":"1893:35:18"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"1883:6:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1941:10:18","value":{"kind":"number","nodeType":"YulLiteral","src":"1950:1:18","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1945:1:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"2028:172:18","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2053:6:18"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2071:3:18"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2076:9:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2067:3:18"},"nodeType":"YulFunctionCall","src":"2067:19:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2061:5:18"},"nodeType":"YulFunctionCall","src":"2061:26:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2046:6:18"},"nodeType":"YulFunctionCall","src":"2046:42:18"},"nodeType":"YulExpressionStatement","src":"2046:42:18"},{"nodeType":"YulAssignment","src":"2105:24:18","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2119:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"2127:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2115:3:18"},"nodeType":"YulFunctionCall","src":"2115:14:18"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2105:6:18"}]},{"nodeType":"YulAssignment","src":"2146:40:18","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"2163:9:18"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2174:11:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2159:3:18"},"nodeType":"YulFunctionCall","src":"2159:27:18"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"2146:9:18"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1975:1:18"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"1978:7:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1972:2:18"},"nodeType":"YulFunctionCall","src":"1972:14:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1987:28:18","statements":[{"nodeType":"YulAssignment","src":"1989:24:18","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1998:1:18"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2001:11:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1994:3:18"},"nodeType":"YulFunctionCall","src":"1994:19:18"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1989:1:18"}]}]},"pre":{"nodeType":"YulBlock","src":"1968:3:18","statements":[]},"src":"1964:236:18"},{"body":{"nodeType":"YulBlock","src":"2248:166:18","statements":[{"nodeType":"YulVariableDeclaration","src":"2266:43:18","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2293:3:18"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2298:9:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2289:3:18"},"nodeType":"YulFunctionCall","src":"2289:19:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2283:5:18"},"nodeType":"YulFunctionCall","src":"2283:26:18"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"2270:9:18","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2333:6:18"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"2345:9:18"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2372:1:18","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"2375:6:18"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2368:3:18"},"nodeType":"YulFunctionCall","src":"2368:14:18"},{"kind":"number","nodeType":"YulLiteral","src":"2384:3:18","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2364:3:18"},"nodeType":"YulFunctionCall","src":"2364:24:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2394:1:18","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2390:3:18"},"nodeType":"YulFunctionCall","src":"2390:6:18"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2360:3:18"},"nodeType":"YulFunctionCall","src":"2360:37:18"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2356:3:18"},"nodeType":"YulFunctionCall","src":"2356:42:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2341:3:18"},"nodeType":"YulFunctionCall","src":"2341:58:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2326:6:18"},"nodeType":"YulFunctionCall","src":"2326:74:18"},"nodeType":"YulExpressionStatement","src":"2326:74:18"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"2219:7:18"},{"name":"newLen","nodeType":"YulIdentifier","src":"2228:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2216:2:18"},"nodeType":"YulFunctionCall","src":"2216:19:18"},"nodeType":"YulIf","src":"2213:201:18"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2434:4:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2448:1:18","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"2451:6:18"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2444:3:18"},"nodeType":"YulFunctionCall","src":"2444:14:18"},{"kind":"number","nodeType":"YulLiteral","src":"2460:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2440:3:18"},"nodeType":"YulFunctionCall","src":"2440:22:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2427:6:18"},"nodeType":"YulFunctionCall","src":"2427:36:18"},"nodeType":"YulExpressionStatement","src":"2427:36:18"}]},"nodeType":"YulCase","src":"1810:663:18","value":{"kind":"number","nodeType":"YulLiteral","src":"1815:1:18","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"2490:234:18","statements":[{"nodeType":"YulVariableDeclaration","src":"2504:14:18","value":{"kind":"number","nodeType":"YulLiteral","src":"2517:1:18","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2508:5:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"2553:67:18","statements":[{"nodeType":"YulAssignment","src":"2571:35:18","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2590:3:18"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2595:9:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2586:3:18"},"nodeType":"YulFunctionCall","src":"2586:19:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2580:5:18"},"nodeType":"YulFunctionCall","src":"2580:26:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2571:5:18"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"2534:6:18"},"nodeType":"YulIf","src":"2531:89:18"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2640:4:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2699:5:18"},{"name":"newLen","nodeType":"YulIdentifier","src":"2706:6:18"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"2646:52:18"},"nodeType":"YulFunctionCall","src":"2646:67:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2633:6:18"},"nodeType":"YulFunctionCall","src":"2633:81:18"},"nodeType":"YulExpressionStatement","src":"2633:81:18"}]},"nodeType":"YulCase","src":"2482:242:18","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"1790:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"1798:2:18","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1787:2:18"},"nodeType":"YulFunctionCall","src":"1787:14:18"},"nodeType":"YulSwitch","src":"1780:944:18"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"1459:4:18","type":""},{"name":"src","nodeType":"YulTypedName","src":"1465:3:18","type":""}],"src":"1378:1352:18"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}","id":18,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH2 0x140 PUSH1 0x40 MSTORE PUSH1 0x2E PUSH1 0xE0 DUP2 DUP2 MSTORE PUSH1 0x80 SWAP2 DUP3 SWAP2 SWAP1 PUSH3 0x1DA8 PUSH2 0x100 CODECOPY DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x1D7A PUSH1 0x2E SWAP2 CODECOPY DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x1DD6 PUSH1 0x2E SWAP2 CODECOPY SWAP1 MSTORE PUSH3 0x6A SWAP1 PUSH1 0xC SWAP1 PUSH1 0x3 PUSH3 0xE8 JUMP JUMPDEST POP CALLVALUE DUP1 ISZERO PUSH3 0x78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH14 0x14D14C8B515490CDCC8C4B539195 PUSH1 0x92 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH6 0x14D14C939195 PUSH1 0xD2 SHL DUP2 MSTORE POP DUP2 PUSH1 0x0 SWAP1 DUP2 PUSH3 0xD0 SWAP2 SWAP1 PUSH3 0x264 JUMP JUMPDEST POP PUSH1 0x1 PUSH3 0xDF DUP3 DUP3 PUSH3 0x264 JUMP JUMPDEST POP POP POP PUSH3 0x330 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH3 0x133 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x133 JUMPI DUP3 MLOAD DUP3 SWAP1 PUSH3 0x122 SWAP1 DUP3 PUSH3 0x264 JUMP JUMPDEST POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x109 JUMP JUMPDEST POP PUSH3 0x141 SWAP3 SWAP2 POP PUSH3 0x145 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x141 JUMPI PUSH1 0x0 PUSH3 0x15C DUP3 DUP3 PUSH3 0x166 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH3 0x145 JUMP JUMPDEST POP DUP1 SLOAD PUSH3 0x174 SWAP1 PUSH3 0x1D5 JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH3 0x185 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH3 0x1A5 SWAP2 SWAP1 PUSH3 0x1A8 JUMP JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x141 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1A9 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x1EA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x20B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x25F JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x23A JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x25B JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x246 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x280 JUMPI PUSH3 0x280 PUSH3 0x1BF JUMP JUMPDEST PUSH3 0x298 DUP2 PUSH3 0x291 DUP5 SLOAD PUSH3 0x1D5 JUMP JUMPDEST DUP5 PUSH3 0x211 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x2D0 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x2B7 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x25B JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x301 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x2E0 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x320 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1A3A DUP1 PUSH3 0x340 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0xAD JUMPI DUP1 PUSH4 0x98BDF6F5 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x98BDF6F5 EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x2B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x691C65D4 EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0x6C8B703F EQ PUSH2 0x245 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x26B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x20C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0x1253C546 EQ PUSH2 0x1AE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x144 PUSH2 0x13F CALLDATASIZE PUSH1 0x4 PUSH2 0x137E JUMP JUMPDEST PUSH2 0x2C8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x161 PUSH2 0x2F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x150 SWAP2 SWAP1 PUSH2 0x13F2 JUMP JUMPDEST PUSH2 0x181 PUSH2 0x17C CALLDATASIZE PUSH1 0x4 PUSH2 0x1405 JUMP JUMPDEST PUSH2 0x385 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x150 JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x1A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x143A JUMP JUMPDEST PUSH2 0x3AE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x161 PUSH2 0x1BC CALLDATASIZE PUSH1 0x4 PUSH2 0x1405 JUMP JUMPDEST PUSH2 0x3BD JUMP JUMPDEST PUSH1 0x8 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x150 JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x1E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1464 JUMP JUMPDEST PUSH2 0x469 JUMP JUMPDEST PUSH2 0x1C5 PUSH2 0x1F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x143A JUMP JUMPDEST PUSH2 0x4F9 JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x207 CALLDATASIZE PUSH1 0x4 PUSH2 0x1464 JUMP JUMPDEST PUSH2 0x55E JUMP JUMPDEST PUSH2 0x1C5 PUSH2 0x21A CALLDATASIZE PUSH1 0x4 PUSH2 0x1405 JUMP JUMPDEST PUSH2 0x57E JUMP JUMPDEST PUSH2 0x181 PUSH2 0x22D CALLDATASIZE PUSH1 0x4 PUSH2 0x1405 JUMP JUMPDEST PUSH2 0x5D7 JUMP JUMPDEST PUSH2 0x1C5 PUSH2 0x240 CALLDATASIZE PUSH1 0x4 PUSH2 0x14A0 JUMP JUMPDEST PUSH2 0x5E2 JUMP JUMPDEST PUSH2 0x161 PUSH2 0x253 CALLDATASIZE PUSH1 0x4 PUSH2 0x1405 JUMP JUMPDEST PUSH2 0x6B7 JUMP JUMPDEST PUSH2 0x1C5 PUSH2 0x266 CALLDATASIZE PUSH1 0x4 PUSH2 0x14A0 JUMP JUMPDEST PUSH2 0x6D0 JUMP JUMPDEST PUSH2 0x161 PUSH2 0x718 JUMP JUMPDEST PUSH2 0x1C5 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x28A CALLDATASIZE PUSH1 0x4 PUSH2 0x14BB JUMP JUMPDEST PUSH2 0x727 JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x29D CALLDATASIZE PUSH1 0x4 PUSH2 0x150D JUMP JUMPDEST PUSH2 0x732 JUMP JUMPDEST PUSH2 0x161 PUSH2 0x2B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1405 JUMP JUMPDEST PUSH2 0x749 JUMP JUMPDEST PUSH2 0x144 PUSH2 0x2C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x15E9 JUMP JUMPDEST PUSH2 0x84D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x780E9D63 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x2ED JUMPI POP PUSH2 0x2ED DUP3 PUSH2 0x87B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x302 SWAP1 PUSH2 0x161C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x32E SWAP1 PUSH2 0x161C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x37B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x350 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x37B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x35E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x390 DUP3 PUSH2 0x8CB JUMP JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2ED JUMP JUMPDEST PUSH2 0x3B9 DUP3 DUP3 CALLER PUSH2 0x904 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xC DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x3CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 SLOAD PUSH2 0x3E8 SWAP1 PUSH2 0x161C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x414 SWAP1 PUSH2 0x161C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x461 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x436 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x461 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x444 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x498 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4A5 DUP4 DUP4 CALLER PUSH2 0x911 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x4F3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x64283D7B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x48F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x504 DUP4 PUSH2 0x6D0 JUMP JUMPDEST DUP3 LT PUSH2 0x535 JUMPI PUSH1 0x40 MLOAD PUSH4 0x295F44F7 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x48F JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x579 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x732 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x589 PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST DUP3 LT PUSH2 0x5B2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x295F44F7 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x48F JUMP JUMPDEST PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x5C5 JUMPI PUSH2 0x5C5 PUSH2 0x1656 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2ED DUP3 PUSH2 0x8CB JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0x0 SWAP2 DUP3 PUSH2 0x5F3 DUP4 PUSH2 0x1682 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x604 DUP3 PUSH1 0xA SLOAD PUSH2 0x9E6 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x0 SWAP1 PUSH2 0x615 PUSH1 0x1 NUMBER PUSH2 0x169B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP1 BLOCKHASH SWAP1 DUP3 ADD MSTORE PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT CALLER PUSH1 0x60 SWAP1 DUP2 SHL DUP3 AND DUP2 DUP5 ADD MSTORE ADDRESS SWAP1 SHL AND PUSH1 0x74 DUP3 ADD MSTORE PUSH1 0x88 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 PUSH1 0xC DUP1 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0x677 SWAP1 DUP4 PUSH2 0x16C4 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x687 JUMPI PUSH2 0x687 PUSH2 0x1656 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0xA SLOAD DUP5 MSTORE PUSH1 0xB SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 SWAP2 PUSH2 0x6AC SWAP2 ADD DUP3 PUSH2 0x1726 JUMP JUMPDEST POP POP PUSH1 0xA SLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x3E8 SWAP1 PUSH2 0x161C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6FC JUMPI PUSH1 0x40 MLOAD PUSH4 0x22718AD9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x48F JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x302 SWAP1 PUSH2 0x161C JUMP JUMPDEST PUSH2 0x3B9 CALLER DUP4 DUP4 PUSH2 0xA00 JUMP JUMPDEST PUSH2 0x73D DUP5 DUP5 DUP5 PUSH2 0x469 JUMP JUMPDEST PUSH2 0x4F3 DUP5 DUP5 DUP5 DUP5 PUSH2 0xA9F JUMP JUMPDEST PUSH1 0x60 PUSH2 0x754 DUP3 PUSH2 0x8CB JUMP JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0x76E SWAP1 PUSH2 0x161C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x79A SWAP1 PUSH2 0x161C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7E7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7BC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7E7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7CA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x7F9 DUP5 PUSH2 0xBC8 JUMP JUMPDEST DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x80B SWAP3 SWAP2 SWAP1 PUSH2 0x1803 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0x825 DUP2 PUSH2 0xC5B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x835 SWAP2 SWAP1 PUSH2 0x18D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x8AC JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x2ED JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x2ED JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x2ED JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x48F JUMP JUMPDEST PUSH2 0x579 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xDBB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x91F DUP6 DUP6 DUP6 PUSH2 0xEC1 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x97C JUMPI PUSH2 0x977 DUP5 PUSH1 0x8 DUP1 SLOAD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD DUP4 SSTORE SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 ADD SSTORE JUMP JUMPDEST PUSH2 0x99F JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x99F JUMPI PUSH2 0x99F DUP2 DUP6 PUSH2 0xFBA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x9BB JUMPI PUSH2 0x9B6 DUP5 PUSH2 0x104B JUMP JUMPDEST PUSH2 0x9DE JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x9DE JUMPI PUSH2 0x9DE DUP6 DUP6 PUSH2 0x10FA JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x3B9 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x114A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA32 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB611743 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x48F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0x4F3 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xAE1 SWAP1 CALLER SWAP1 DUP9 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x1916 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xB1C JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xB19 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1953 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xB85 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xB4A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB4F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xB7D JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x48F JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ PUSH2 0xBC1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x48F JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xBD5 DUP4 PUSH2 0x1161 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBF5 JUMPI PUSH2 0xBF5 PUSH2 0x14F7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xC1F JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0xC29 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD PUSH1 0x0 SUB PUSH2 0xC7A JUMPI POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x19C5 PUSH1 0x40 SWAP2 CODECOPY SWAP1 POP PUSH1 0x0 PUSH1 0x3 DUP5 MLOAD PUSH1 0x2 PUSH2 0xCA9 SWAP2 SWAP1 PUSH2 0x1970 JUMP JUMPDEST PUSH2 0xCB3 SWAP2 SWAP1 PUSH2 0x1983 JUMP JUMPDEST PUSH2 0xCBE SWAP1 PUSH1 0x4 PUSH2 0x1997 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCD6 JUMPI PUSH2 0xCD6 PUSH2 0x14F7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xD00 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x1 DUP3 ADD PUSH1 0x20 DUP3 ADD DUP6 DUP7 MLOAD DUP8 ADD PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x0 DUP3 MSTORE JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0xD76 JUMPI PUSH1 0x3 DUP5 ADD SWAP4 POP DUP4 MLOAD PUSH1 0x3F DUP2 PUSH1 0x12 SHR AND DUP8 ADD MLOAD DUP7 MSTORE8 PUSH1 0x1 DUP7 ADD SWAP6 POP PUSH1 0x3F DUP2 PUSH1 0xC SHR AND DUP8 ADD MLOAD DUP7 MSTORE8 PUSH1 0x1 DUP7 ADD SWAP6 POP PUSH1 0x3F DUP2 PUSH1 0x6 SHR AND DUP8 ADD MLOAD DUP7 MSTORE8 PUSH1 0x1 DUP7 ADD SWAP6 POP PUSH1 0x3F DUP2 AND DUP8 ADD MLOAD DUP7 MSTORE8 POP PUSH1 0x1 DUP6 ADD SWAP5 POP PUSH2 0xD1B JUMP JUMPDEST SWAP1 MSTORE POP POP DUP6 MLOAD PUSH1 0x3 SWAP1 MOD PUSH1 0x1 DUP2 EQ PUSH2 0xD95 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xDA8 JUMPI PUSH2 0xDB0 JUMP JUMPDEST PUSH1 0x3D PUSH1 0x1 DUP4 SUB MSTORE8 PUSH1 0x3D PUSH1 0x2 DUP4 SUB MSTORE8 PUSH2 0xDB0 JUMP JUMPDEST PUSH1 0x3D PUSH1 0x1 DUP4 SUB MSTORE8 JUMPDEST POP SWAP2 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0xDCF JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0xE91 JUMPI PUSH1 0x0 PUSH2 0xDDF DUP5 PUSH2 0x8CB JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xE0B JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xE1E JUMPI POP PUSH2 0xE1C DUP2 DUP5 PUSH2 0x84D JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xE47 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9FBF51F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x48F JUMP JUMPDEST DUP2 ISZERO PUSH2 0xE8F JUMPI DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND ISZERO PUSH2 0xEEE JUMPI PUSH2 0xEEE DUP2 DUP5 DUP7 PUSH2 0x1239 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xF2C JUMPI PUSH2 0xF0B PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH2 0xDBB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0xF5B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP8 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFC5 DUP4 PUSH2 0x6D0 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP1 DUP3 EQ PUSH2 0x1018 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD DUP5 DUP5 MSTORE DUP2 DUP5 KECCAK256 DUP2 SWAP1 SSTORE DUP4 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP2 SWAP1 SSTORE JUMPDEST POP PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP5 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP4 MSTORE PUSH1 0x6 DUP2 MSTORE DUP4 DUP4 KECCAK256 SWAP2 DUP4 MSTORE MSTORE SWAP1 DUP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x105D SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x169B JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x8 DUP1 SLOAD SWAP4 SWAP5 POP SWAP1 SWAP3 DUP5 SWAP1 DUP2 LT PUSH2 0x1085 JUMPI PUSH2 0x1085 PUSH2 0x1656 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x10A6 JUMPI PUSH2 0x10A6 PUSH2 0x1656 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 DUP2 MSTORE PUSH1 0x9 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP5 SWAP1 SSTORE DUP6 DUP3 MSTORE DUP2 KECCAK256 SSTORE PUSH1 0x8 DUP1 SLOAD DUP1 PUSH2 0x10DE JUMPI PUSH2 0x10DE PUSH2 0x19AE JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x1107 DUP5 PUSH2 0x6D0 JUMP JUMPDEST PUSH2 0x1111 SWAP2 SWAP1 PUSH2 0x169B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE SWAP4 DUP3 MSTORE PUSH1 0x7 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST PUSH2 0x1154 DUP4 DUP4 PUSH2 0x129D JUMP JUMPDEST PUSH2 0x579 PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0xA9F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0x11A0 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x11CC JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x11EA JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1202 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1216 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1228 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x2ED JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1244 DUP4 DUP4 DUP4 PUSH2 0x1302 JUMP JUMPDEST PUSH2 0x579 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1272 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x48F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x177E802F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x48F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x12C7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x48F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12D5 DUP4 DUP4 PUSH1 0x0 PUSH2 0x911 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x579 JUMPI PUSH1 0x40 MLOAD PUSH4 0x39E35637 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x48F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x9DE JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x133C JUMPI POP PUSH2 0x133C DUP5 DUP5 PUSH2 0x84D JUMP JUMPDEST DUP1 PUSH2 0x9DE JUMPI POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x137B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1390 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x139B DUP2 PUSH2 0x1365 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x13BD JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x13A5 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x13DE DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x13A2 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x139B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x13C6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1417 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1435 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x144D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1456 DUP4 PUSH2 0x141E JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1479 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1482 DUP5 PUSH2 0x141E JUMP JUMPDEST SWAP3 POP PUSH2 0x1490 PUSH1 0x20 DUP6 ADD PUSH2 0x141E JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139B DUP3 PUSH2 0x141E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14D7 DUP4 PUSH2 0x141E JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x14EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1523 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x152C DUP6 PUSH2 0x141E JUMP JUMPDEST SWAP4 POP PUSH2 0x153A PUSH1 0x20 DUP7 ADD PUSH2 0x141E JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x155E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1572 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1584 JUMPI PUSH2 0x1584 PUSH2 0x14F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x15AC JUMPI PUSH2 0x15AC PUSH2 0x14F7 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x15C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1605 DUP4 PUSH2 0x141E JUMP JUMPDEST SWAP2 POP PUSH2 0x1613 PUSH1 0x20 DUP5 ADD PUSH2 0x141E JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1630 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1650 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1694 JUMPI PUSH2 0x1694 PUSH2 0x166C JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x2ED JUMPI PUSH2 0x2ED PUSH2 0x166C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x16D3 JUMPI PUSH2 0x16D3 PUSH2 0x16AE JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x579 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x16FF JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x171E JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x170B JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 DUP2 SUB PUSH2 0x1731 JUMPI POP POP JUMP JUMPDEST PUSH2 0x173B DUP3 SLOAD PUSH2 0x161C JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1753 JUMPI PUSH2 0x1753 PUSH2 0x14F7 JUMP JUMPDEST PUSH2 0x1767 DUP2 PUSH2 0x1761 DUP5 SLOAD PUSH2 0x161C JUMP JUMPDEST DUP5 PUSH2 0x16D8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x179B JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0x1783 JUMPI POP DUP5 DUP3 ADD SLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0xBC1 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x1F NOT DUP5 AND SWAP1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP5 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x17D5 JUMPI DUP3 DUP7 ADD SLOAD DUP3 SSTORE PUSH1 0x1 SWAP6 DUP7 ADD SWAP6 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD PUSH2 0x17B5 JUMP JUMPDEST POP DUP6 DUP4 LT ISZERO PUSH2 0x17F3 JUMPI DUP2 DUP6 ADD SLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x7B PUSH1 0xF8 SHL DUP2 MSTORE PUSH16 0x226E616D65223A225345324E46542023 PUSH1 0x80 SHL PUSH1 0x1 DUP3 ADD MSTORE DUP3 MLOAD PUSH1 0x0 SWAP1 PUSH2 0x1839 DUP2 PUSH1 0x11 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x13A2 JUMP JUMPDEST PUSH2 0x88B PUSH1 0xF2 SHL PUSH1 0x11 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE PUSH32 0x226465736372697074696F6E223A2253636166666F6C642D4554482032207361 PUSH1 0x13 DUP3 ADD MSTORE PUSH10 0x1B5C1B1948139195088B PUSH1 0xB2 SHL PUSH1 0x33 DUP3 ADD MSTORE PUSH16 0x22696D616765223A22697066733A2F2F PUSH1 0x80 SHL PUSH1 0x3D DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x18AD DUP2 PUSH1 0x4D DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x13A2 JUMP JUMPDEST PUSH1 0x11 PUSH1 0xF9 SHL PUSH1 0x4D SWAP3 SWAP1 SWAP2 ADD SWAP2 DUP3 ADD MSTORE PUSH1 0x7D PUSH1 0xF8 SHL PUSH1 0x4E DUP3 ADD MSTORE PUSH1 0x4F ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x646174613A6170706C69636174696F6E2F6A736F6E3B6261736536342C000000 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x1909 DUP2 PUSH1 0x1D DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x13A2 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0x1D ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1949 SWAP1 DUP4 ADD DUP5 PUSH2 0x13C6 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1965 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x139B DUP2 PUSH2 0x1365 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2ED JUMPI PUSH2 0x2ED PUSH2 0x166C JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1992 JUMPI PUSH2 0x1992 PUSH2 0x16AE JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x2ED JUMPI PUSH2 0x2ED PUSH2 0x166C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID COINBASE TIMESTAMP NUMBER PREVRANDAO GASLIMIT CHAINID SELFBALANCE BASEFEE 0x49 0x4A 0x4B 0x4C 0x4D 0x4E 0x4F POP MLOAD MSTORE MSTORE8 SLOAD SSTORE JUMP JUMPI PC MSIZE GAS PUSH2 0x6263 PUSH5 0x6566676869 PUSH11 0x6B6C6D6E6F707172737475 PUSH23 0x7778797A303132333435363738392B2FA2646970667358 0x22 SLT KECCAK256 PUSH10 0x1A4F43E4B3939076223D DUP7 ISZERO 0xD3 PUSH26 0x2E37D791E61E50F9CDE3ED0EEF26E193A64736F6C6343000814 STOP CALLER MLOAD PUSH14 0x66564D416D4E4D316B4445425972 NUMBER ORIGIN SLOAD POP PUSH27 0x51446F4352464836463574453165394D7234466B6B52355872516D JUMP BASEFEE PUSH10 0x336334716B5A63483363 0x4A PUSH26 0x6E7A4458526D356E37647A633952395455745563666E57517668 PUSH5 0x6377516D63 PUSH23 0x6355614B66364A794358684C4431627936684A584E7275 POP MLOAD SELFBALANCE PUSH20 0x336B6B4C673257317872376E46316A0000000000 ","sourceMap":"440:232:17:-:0;306:1612;440:232;;;;;;306:1612;;;;440:232;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;679:51;;;;;;;;;;1381:113:2;;;;;;;;;;;;;-1:-1:-1;;;1381:113:2;;;;;;;;;;;;;;;;-1:-1:-1;;;1381:113:2;;;1455:5;1447;:13;;;;;;:::i;:::-;-1:-1:-1;1470:7:2;:17;1480:7;1470;:17;:::i;:::-;;1381:113;;306:1612:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;306:1612:17;;;-1:-1:-1;306:1612:17;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;14:127:18;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:18;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:18;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:18;;;2580:26;2531:89;-1:-1:-1;;1335:1:18;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:18;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:18;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:18;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:18:o;:::-;306:1612:17;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_addTokenToAllTokensEnumeration_1678":{"entryPoint":null,"id":1678,"parameterSlots":1,"returnSlots":0},"@_addTokenToOwnerEnumeration_1658":{"entryPoint":4346,"id":1658,"parameterSlots":2,"returnSlots":0},"@_approve_1096":{"entryPoint":2308,"id":1096,"parameterSlots":3,"returnSlots":0},"@_approve_1162":{"entryPoint":3515,"id":1162,"parameterSlots":4,"returnSlots":0},"@_checkAuthorized_744":{"entryPoint":4665,"id":744,"parameterSlots":3,"returnSlots":0},"@_checkOnERC721Received_1292":{"entryPoint":2719,"id":1292,"parameterSlots":4,"returnSlots":0},"@_getApproved_671":{"entryPoint":null,"id":671,"parameterSlots":1,"returnSlots":1},"@_isAuthorized_707":{"entryPoint":4866,"id":707,"parameterSlots":3,"returnSlots":1},"@_mint_900":{"entryPoint":4765,"id":900,"parameterSlots":2,"returnSlots":0},"@_msgSender_1931":{"entryPoint":null,"id":1931,"parameterSlots":0,"returnSlots":1},"@_ownerOf_658":{"entryPoint":null,"id":658,"parameterSlots":1,"returnSlots":1},"@_removeTokenFromAllTokensEnumeration_1786":{"entryPoint":4171,"id":1786,"parameterSlots":1,"returnSlots":0},"@_removeTokenFromOwnerEnumeration_1738":{"entryPoint":4026,"id":1738,"parameterSlots":2,"returnSlots":0},"@_requireOwned_1228":{"entryPoint":2251,"id":1228,"parameterSlots":1,"returnSlots":1},"@_safeMint_915":{"entryPoint":2534,"id":915,"parameterSlots":2,"returnSlots":0},"@_safeMint_941":{"entryPoint":4426,"id":941,"parameterSlots":3,"returnSlots":0},"@_setApprovalForAll_1199":{"entryPoint":2560,"id":1199,"parameterSlots":3,"returnSlots":0},"@_update_1627":{"entryPoint":2321,"id":1627,"parameterSlots":3,"returnSlots":1},"@_update_850":{"entryPoint":3777,"id":850,"parameterSlots":3,"returnSlots":1},"@approve_505":{"entryPoint":942,"id":505,"parameterSlots":2,"returnSlots":0},"@balanceOf_413":{"entryPoint":1744,"id":413,"parameterSlots":1,"returnSlots":1},"@encode_1918":{"entryPoint":3163,"id":1918,"parameterSlots":1,"returnSlots":1},"@getApproved_522":{"entryPoint":901,"id":522,"parameterSlots":1,"returnSlots":1},"@isApprovedForAll_555":{"entryPoint":2125,"id":555,"parameterSlots":2,"returnSlots":1},"@log10_3183":{"entryPoint":4449,"id":3183,"parameterSlots":1,"returnSlots":1},"@mintItem_4653":{"entryPoint":1506,"id":4653,"parameterSlots":1,"returnSlots":1},"@name_435":{"entryPoint":755,"id":435,"parameterSlots":0,"returnSlots":1},"@ownerOf_426":{"entryPoint":1495,"id":426,"parameterSlots":1,"returnSlots":1},"@safeTransferFrom_619":{"entryPoint":1374,"id":619,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_645":{"entryPoint":1842,"id":645,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_538":{"entryPoint":1831,"id":538,"parameterSlots":2,"returnSlots":0},"@supportsInterface_1492":{"entryPoint":712,"id":1492,"parameterSlots":1,"returnSlots":1},"@supportsInterface_2296":{"entryPoint":null,"id":2296,"parameterSlots":1,"returnSlots":1},"@supportsInterface_385":{"entryPoint":2171,"id":385,"parameterSlots":1,"returnSlots":1},"@symbol_444":{"entryPoint":1816,"id":444,"parameterSlots":0,"returnSlots":1},"@toString_2086":{"entryPoint":3016,"id":2086,"parameterSlots":1,"returnSlots":1},"@tokenByIndex_1558":{"entryPoint":1406,"id":1558,"parameterSlots":1,"returnSlots":1},"@tokenIdCounter_4572":{"entryPoint":null,"id":4572,"parameterSlots":0,"returnSlots":0},"@tokenOfOwnerByIndex_1521":{"entryPoint":1273,"id":1521,"parameterSlots":2,"returnSlots":1},"@tokenURI_4702":{"entryPoint":1865,"id":4702,"parameterSlots":1,"returnSlots":1},"@tokenURIs_4576":{"entryPoint":1719,"id":4576,"parameterSlots":0,"returnSlots":0},"@totalSupply_1531":{"entryPoint":null,"id":1531,"parameterSlots":0,"returnSlots":1},"@transferFrom_601":{"entryPoint":1129,"id":601,"parameterSlots":3,"returnSlots":0},"@uris_4583":{"entryPoint":957,"id":4583,"parameterSlots":0,"returnSlots":0},"abi_decode_address":{"entryPoint":5150,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":5280,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":5609,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":5220,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":5389,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":5307,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":5178,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":4990,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":6483,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":5125,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":5062,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52_t_stringliteral_1aa8fdda351331c29acd1810b7221962a68db950e62d3ad373ddf4bb48c6523f_t_string_memory_ptr_t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb_t_stringliteral_1f27a6fded7ec13570e26e45ccdc9e364fc50b012b92a66ec24ade67e4d34298_t_stringliteral_1142d87ae89da2e55c57bf6d4d08b8c1cbd98506048166b2165a9963aa8d182d_t_string_memory_ptr_t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0_t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":6147,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":6353,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_uint256_t_bytes32_t_address_t_address__to_t_uint256_t_bytes32_t_address_t_address__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":6422,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5106,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":6512,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":6531,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":6551,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":5787,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":5848,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_storage_ptr_to_t_string_storage":{"entryPoint":5926,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":5026,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":5660,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"increment_t_uint256":{"entryPoint":5762,"id":null,"parameterSlots":1,"returnSlots":1},"mod_t_uint256":{"entryPoint":5828,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":5740,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":5806,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":6574,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":5718,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":5367,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_bytes4":{"entryPoint":4965,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:12830:18","statements":[{"nodeType":"YulBlock","src":"6:3:18","statements":[]},{"body":{"nodeType":"YulBlock","src":"58:87:18","statements":[{"body":{"nodeType":"YulBlock","src":"123:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"132:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"135:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"125:6:18"},"nodeType":"YulFunctionCall","src":"125:12:18"},"nodeType":"YulExpressionStatement","src":"125:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"81:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"92:5:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"108:10:18","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"99:3:18"},"nodeType":"YulFunctionCall","src":"99:20:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"88:3:18"},"nodeType":"YulFunctionCall","src":"88:32:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"78:2:18"},"nodeType":"YulFunctionCall","src":"78:43:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"71:6:18"},"nodeType":"YulFunctionCall","src":"71:51:18"},"nodeType":"YulIf","src":"68:71:18"}]},"name":"validator_revert_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"47:5:18","type":""}],"src":"14:131:18"},{"body":{"nodeType":"YulBlock","src":"219:176:18","statements":[{"body":{"nodeType":"YulBlock","src":"265:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"274:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"277:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"267:6:18"},"nodeType":"YulFunctionCall","src":"267:12:18"},"nodeType":"YulExpressionStatement","src":"267:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"240:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"249:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"236:3:18"},"nodeType":"YulFunctionCall","src":"236:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"261:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"232:3:18"},"nodeType":"YulFunctionCall","src":"232:32:18"},"nodeType":"YulIf","src":"229:52:18"},{"nodeType":"YulVariableDeclaration","src":"290:36:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"316:9:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"303:12:18"},"nodeType":"YulFunctionCall","src":"303:23:18"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"294:5:18","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"359:5:18"}],"functionName":{"name":"validator_revert_bytes4","nodeType":"YulIdentifier","src":"335:23:18"},"nodeType":"YulFunctionCall","src":"335:30:18"},"nodeType":"YulExpressionStatement","src":"335:30:18"},{"nodeType":"YulAssignment","src":"374:15:18","value":{"name":"value","nodeType":"YulIdentifier","src":"384:5:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"374:6:18"}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"185:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"196:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"208:6:18","type":""}],"src":"150:245:18"},{"body":{"nodeType":"YulBlock","src":"495:92:18","statements":[{"nodeType":"YulAssignment","src":"505:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"517:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"528:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"513:3:18"},"nodeType":"YulFunctionCall","src":"513:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"505:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"547:9:18"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"572:6:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"565:6:18"},"nodeType":"YulFunctionCall","src":"565:14:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"558:6:18"},"nodeType":"YulFunctionCall","src":"558:22:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"540:6:18"},"nodeType":"YulFunctionCall","src":"540:41:18"},"nodeType":"YulExpressionStatement","src":"540:41:18"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"464:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"475:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"486:4:18","type":""}],"src":"400:187:18"},{"body":{"nodeType":"YulBlock","src":"658:184:18","statements":[{"nodeType":"YulVariableDeclaration","src":"668:10:18","value":{"kind":"number","nodeType":"YulLiteral","src":"677:1:18","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"672:1:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"737:63:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"762:3:18"},{"name":"i","nodeType":"YulIdentifier","src":"767:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"758:3:18"},"nodeType":"YulFunctionCall","src":"758:11:18"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"781:3:18"},{"name":"i","nodeType":"YulIdentifier","src":"786:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"777:3:18"},"nodeType":"YulFunctionCall","src":"777:11:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"771:5:18"},"nodeType":"YulFunctionCall","src":"771:18:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"751:6:18"},"nodeType":"YulFunctionCall","src":"751:39:18"},"nodeType":"YulExpressionStatement","src":"751:39:18"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"698:1:18"},{"name":"length","nodeType":"YulIdentifier","src":"701:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"695:2:18"},"nodeType":"YulFunctionCall","src":"695:13:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"709:19:18","statements":[{"nodeType":"YulAssignment","src":"711:15:18","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"720:1:18"},{"kind":"number","nodeType":"YulLiteral","src":"723:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"716:3:18"},"nodeType":"YulFunctionCall","src":"716:10:18"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"711:1:18"}]}]},"pre":{"nodeType":"YulBlock","src":"691:3:18","statements":[]},"src":"687:113:18"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"820:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"825:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"816:3:18"},"nodeType":"YulFunctionCall","src":"816:16:18"},{"kind":"number","nodeType":"YulLiteral","src":"834:1:18","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"809:6:18"},"nodeType":"YulFunctionCall","src":"809:27:18"},"nodeType":"YulExpressionStatement","src":"809:27:18"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"636:3:18","type":""},{"name":"dst","nodeType":"YulTypedName","src":"641:3:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"646:6:18","type":""}],"src":"592:250:18"},{"body":{"nodeType":"YulBlock","src":"897:221:18","statements":[{"nodeType":"YulVariableDeclaration","src":"907:26:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"927:5:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"921:5:18"},"nodeType":"YulFunctionCall","src":"921:12:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"911:6:18","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"949:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"954:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"942:6:18"},"nodeType":"YulFunctionCall","src":"942:19:18"},"nodeType":"YulExpressionStatement","src":"942:19:18"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1009:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"1016:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1005:3:18"},"nodeType":"YulFunctionCall","src":"1005:16:18"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1027:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"1032:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1023:3:18"},"nodeType":"YulFunctionCall","src":"1023:14:18"},{"name":"length","nodeType":"YulIdentifier","src":"1039:6:18"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"970:34:18"},"nodeType":"YulFunctionCall","src":"970:76:18"},"nodeType":"YulExpressionStatement","src":"970:76:18"},{"nodeType":"YulAssignment","src":"1055:57:18","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1070:3:18"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1083:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"1091:2:18","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1079:3:18"},"nodeType":"YulFunctionCall","src":"1079:15:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1100:2:18","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1096:3:18"},"nodeType":"YulFunctionCall","src":"1096:7:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1075:3:18"},"nodeType":"YulFunctionCall","src":"1075:29:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1066:3:18"},"nodeType":"YulFunctionCall","src":"1066:39:18"},{"kind":"number","nodeType":"YulLiteral","src":"1107:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1062:3:18"},"nodeType":"YulFunctionCall","src":"1062:50:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1055:3:18"}]}]},"name":"abi_encode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"874:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"881:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"889:3:18","type":""}],"src":"847:271:18"},{"body":{"nodeType":"YulBlock","src":"1244:99:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1261:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1272:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1254:6:18"},"nodeType":"YulFunctionCall","src":"1254:21:18"},"nodeType":"YulExpressionStatement","src":"1254:21:18"},{"nodeType":"YulAssignment","src":"1284:53:18","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1310:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1322:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1333:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1318:3:18"},"nodeType":"YulFunctionCall","src":"1318:18:18"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"1292:17:18"},"nodeType":"YulFunctionCall","src":"1292:45:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1284:4:18"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1213:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1224:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1235:4:18","type":""}],"src":"1123:220:18"},{"body":{"nodeType":"YulBlock","src":"1418:110:18","statements":[{"body":{"nodeType":"YulBlock","src":"1464:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1473:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1476:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1466:6:18"},"nodeType":"YulFunctionCall","src":"1466:12:18"},"nodeType":"YulExpressionStatement","src":"1466:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1439:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"1448:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1435:3:18"},"nodeType":"YulFunctionCall","src":"1435:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"1460:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1431:3:18"},"nodeType":"YulFunctionCall","src":"1431:32:18"},"nodeType":"YulIf","src":"1428:52:18"},{"nodeType":"YulAssignment","src":"1489:33:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1512:9:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1499:12:18"},"nodeType":"YulFunctionCall","src":"1499:23:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1489:6:18"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1384:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1395:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1407:6:18","type":""}],"src":"1348:180:18"},{"body":{"nodeType":"YulBlock","src":"1634:102:18","statements":[{"nodeType":"YulAssignment","src":"1644:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1656:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1667:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1652:3:18"},"nodeType":"YulFunctionCall","src":"1652:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1644:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1686:9:18"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1701:6:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1717:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1722:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1713:3:18"},"nodeType":"YulFunctionCall","src":"1713:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"1726:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1709:3:18"},"nodeType":"YulFunctionCall","src":"1709:19:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1697:3:18"},"nodeType":"YulFunctionCall","src":"1697:32:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1679:6:18"},"nodeType":"YulFunctionCall","src":"1679:51:18"},"nodeType":"YulExpressionStatement","src":"1679:51:18"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1603:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1614:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1625:4:18","type":""}],"src":"1533:203:18"},{"body":{"nodeType":"YulBlock","src":"1790:124:18","statements":[{"nodeType":"YulAssignment","src":"1800:29:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1822:6:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1809:12:18"},"nodeType":"YulFunctionCall","src":"1809:20:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1800:5:18"}]},{"body":{"nodeType":"YulBlock","src":"1892:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1901:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1904:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1894:6:18"},"nodeType":"YulFunctionCall","src":"1894:12:18"},"nodeType":"YulExpressionStatement","src":"1894:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1851:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1862:5:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1877:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1882:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1873:3:18"},"nodeType":"YulFunctionCall","src":"1873:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"1886:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1869:3:18"},"nodeType":"YulFunctionCall","src":"1869:19:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1858:3:18"},"nodeType":"YulFunctionCall","src":"1858:31:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1848:2:18"},"nodeType":"YulFunctionCall","src":"1848:42:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1841:6:18"},"nodeType":"YulFunctionCall","src":"1841:50:18"},"nodeType":"YulIf","src":"1838:70:18"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1769:6:18","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1780:5:18","type":""}],"src":"1741:173:18"},{"body":{"nodeType":"YulBlock","src":"2006:167:18","statements":[{"body":{"nodeType":"YulBlock","src":"2052:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2061:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2064:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2054:6:18"},"nodeType":"YulFunctionCall","src":"2054:12:18"},"nodeType":"YulExpressionStatement","src":"2054:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2027:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"2036:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2023:3:18"},"nodeType":"YulFunctionCall","src":"2023:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"2048:2:18","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2019:3:18"},"nodeType":"YulFunctionCall","src":"2019:32:18"},"nodeType":"YulIf","src":"2016:52:18"},{"nodeType":"YulAssignment","src":"2077:39:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2106:9:18"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2087:18:18"},"nodeType":"YulFunctionCall","src":"2087:29:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2077:6:18"}]},{"nodeType":"YulAssignment","src":"2125:42:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2152:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"2163:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2148:3:18"},"nodeType":"YulFunctionCall","src":"2148:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2135:12:18"},"nodeType":"YulFunctionCall","src":"2135:32:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2125:6:18"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1964:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1975:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1987:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1995:6:18","type":""}],"src":"1919:254:18"},{"body":{"nodeType":"YulBlock","src":"2279:76:18","statements":[{"nodeType":"YulAssignment","src":"2289:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2301:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"2312:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2297:3:18"},"nodeType":"YulFunctionCall","src":"2297:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2289:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2331:9:18"},{"name":"value0","nodeType":"YulIdentifier","src":"2342:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2324:6:18"},"nodeType":"YulFunctionCall","src":"2324:25:18"},"nodeType":"YulExpressionStatement","src":"2324:25:18"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2248:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2259:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2270:4:18","type":""}],"src":"2178:177:18"},{"body":{"nodeType":"YulBlock","src":"2464:224:18","statements":[{"body":{"nodeType":"YulBlock","src":"2510:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2519:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2522:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2512:6:18"},"nodeType":"YulFunctionCall","src":"2512:12:18"},"nodeType":"YulExpressionStatement","src":"2512:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2485:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"2494:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2481:3:18"},"nodeType":"YulFunctionCall","src":"2481:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"2506:2:18","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2477:3:18"},"nodeType":"YulFunctionCall","src":"2477:32:18"},"nodeType":"YulIf","src":"2474:52:18"},{"nodeType":"YulAssignment","src":"2535:39:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2564:9:18"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2545:18:18"},"nodeType":"YulFunctionCall","src":"2545:29:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2535:6:18"}]},{"nodeType":"YulAssignment","src":"2583:48:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2616:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"2627:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2612:3:18"},"nodeType":"YulFunctionCall","src":"2612:18:18"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2593:18:18"},"nodeType":"YulFunctionCall","src":"2593:38:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2583:6:18"}]},{"nodeType":"YulAssignment","src":"2640:42:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2667:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"2678:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2663:3:18"},"nodeType":"YulFunctionCall","src":"2663:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2650:12:18"},"nodeType":"YulFunctionCall","src":"2650:32:18"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2640:6:18"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2414:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2425:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2437:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2445:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2453:6:18","type":""}],"src":"2360:328:18"},{"body":{"nodeType":"YulBlock","src":"2763:116:18","statements":[{"body":{"nodeType":"YulBlock","src":"2809:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2818:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2821:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2811:6:18"},"nodeType":"YulFunctionCall","src":"2811:12:18"},"nodeType":"YulExpressionStatement","src":"2811:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2784:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"2793:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2780:3:18"},"nodeType":"YulFunctionCall","src":"2780:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"2805:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2776:3:18"},"nodeType":"YulFunctionCall","src":"2776:32:18"},"nodeType":"YulIf","src":"2773:52:18"},{"nodeType":"YulAssignment","src":"2834:39:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2863:9:18"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2844:18:18"},"nodeType":"YulFunctionCall","src":"2844:29:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2834:6:18"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2729:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2740:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2752:6:18","type":""}],"src":"2693:186:18"},{"body":{"nodeType":"YulBlock","src":"2968:263:18","statements":[{"body":{"nodeType":"YulBlock","src":"3014:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3023:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3026:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3016:6:18"},"nodeType":"YulFunctionCall","src":"3016:12:18"},"nodeType":"YulExpressionStatement","src":"3016:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2989:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"2998:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2985:3:18"},"nodeType":"YulFunctionCall","src":"2985:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"3010:2:18","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2981:3:18"},"nodeType":"YulFunctionCall","src":"2981:32:18"},"nodeType":"YulIf","src":"2978:52:18"},{"nodeType":"YulAssignment","src":"3039:39:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3068:9:18"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3049:18:18"},"nodeType":"YulFunctionCall","src":"3049:29:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3039:6:18"}]},{"nodeType":"YulVariableDeclaration","src":"3087:45:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3117:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3128:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3113:3:18"},"nodeType":"YulFunctionCall","src":"3113:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3100:12:18"},"nodeType":"YulFunctionCall","src":"3100:32:18"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3091:5:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"3185:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3194:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3197:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3187:6:18"},"nodeType":"YulFunctionCall","src":"3187:12:18"},"nodeType":"YulExpressionStatement","src":"3187:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3154:5:18"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3175:5:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3168:6:18"},"nodeType":"YulFunctionCall","src":"3168:13:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3161:6:18"},"nodeType":"YulFunctionCall","src":"3161:21:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3151:2:18"},"nodeType":"YulFunctionCall","src":"3151:32:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3144:6:18"},"nodeType":"YulFunctionCall","src":"3144:40:18"},"nodeType":"YulIf","src":"3141:60:18"},{"nodeType":"YulAssignment","src":"3210:15:18","value":{"name":"value","nodeType":"YulIdentifier","src":"3220:5:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3210:6:18"}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2926:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2937:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2949:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2957:6:18","type":""}],"src":"2884:347:18"},{"body":{"nodeType":"YulBlock","src":"3268:95:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3285:1:18","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3292:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3297:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3288:3:18"},"nodeType":"YulFunctionCall","src":"3288:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3278:6:18"},"nodeType":"YulFunctionCall","src":"3278:31:18"},"nodeType":"YulExpressionStatement","src":"3278:31:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3325:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3328:4:18","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3318:6:18"},"nodeType":"YulFunctionCall","src":"3318:15:18"},"nodeType":"YulExpressionStatement","src":"3318:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3349:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3352:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3342:6:18"},"nodeType":"YulFunctionCall","src":"3342:15:18"},"nodeType":"YulExpressionStatement","src":"3342:15:18"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"3236:127:18"},{"body":{"nodeType":"YulBlock","src":"3498:1008:18","statements":[{"body":{"nodeType":"YulBlock","src":"3545:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3554:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3557:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3547:6:18"},"nodeType":"YulFunctionCall","src":"3547:12:18"},"nodeType":"YulExpressionStatement","src":"3547:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3519:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"3528:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3515:3:18"},"nodeType":"YulFunctionCall","src":"3515:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"3540:3:18","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3511:3:18"},"nodeType":"YulFunctionCall","src":"3511:33:18"},"nodeType":"YulIf","src":"3508:53:18"},{"nodeType":"YulAssignment","src":"3570:39:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3599:9:18"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3580:18:18"},"nodeType":"YulFunctionCall","src":"3580:29:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3570:6:18"}]},{"nodeType":"YulAssignment","src":"3618:48:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3651:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3662:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3647:3:18"},"nodeType":"YulFunctionCall","src":"3647:18:18"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3628:18:18"},"nodeType":"YulFunctionCall","src":"3628:38:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3618:6:18"}]},{"nodeType":"YulAssignment","src":"3675:42:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3702:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3713:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3698:3:18"},"nodeType":"YulFunctionCall","src":"3698:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3685:12:18"},"nodeType":"YulFunctionCall","src":"3685:32:18"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3675:6:18"}]},{"nodeType":"YulVariableDeclaration","src":"3726:46:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3757:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3768:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3753:3:18"},"nodeType":"YulFunctionCall","src":"3753:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3740:12:18"},"nodeType":"YulFunctionCall","src":"3740:32:18"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3730:6:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3781:28:18","value":{"kind":"number","nodeType":"YulLiteral","src":"3791:18:18","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3785:2:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"3836:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3845:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3848:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3838:6:18"},"nodeType":"YulFunctionCall","src":"3838:12:18"},"nodeType":"YulExpressionStatement","src":"3838:12:18"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3824:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"3832:2:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3821:2:18"},"nodeType":"YulFunctionCall","src":"3821:14:18"},"nodeType":"YulIf","src":"3818:34:18"},{"nodeType":"YulVariableDeclaration","src":"3861:32:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3875:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"3886:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3871:3:18"},"nodeType":"YulFunctionCall","src":"3871:22:18"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"3865:2:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"3941:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3950:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3953:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3943:6:18"},"nodeType":"YulFunctionCall","src":"3943:12:18"},"nodeType":"YulExpressionStatement","src":"3943:12:18"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"3920:2:18"},{"kind":"number","nodeType":"YulLiteral","src":"3924:4:18","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3916:3:18"},"nodeType":"YulFunctionCall","src":"3916:13:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3931:7:18"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3912:3:18"},"nodeType":"YulFunctionCall","src":"3912:27:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3905:6:18"},"nodeType":"YulFunctionCall","src":"3905:35:18"},"nodeType":"YulIf","src":"3902:55:18"},{"nodeType":"YulVariableDeclaration","src":"3966:26:18","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"3989:2:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3976:12:18"},"nodeType":"YulFunctionCall","src":"3976:16:18"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"3970:2:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"4015:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4017:16:18"},"nodeType":"YulFunctionCall","src":"4017:18:18"},"nodeType":"YulExpressionStatement","src":"4017:18:18"}]},"condition":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"4007:2:18"},{"name":"_1","nodeType":"YulIdentifier","src":"4011:2:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4004:2:18"},"nodeType":"YulFunctionCall","src":"4004:10:18"},"nodeType":"YulIf","src":"4001:36:18"},{"nodeType":"YulVariableDeclaration","src":"4046:17:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4060:2:18","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4056:3:18"},"nodeType":"YulFunctionCall","src":"4056:7:18"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"4050:2:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4072:23:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4092:2:18","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4086:5:18"},"nodeType":"YulFunctionCall","src":"4086:9:18"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"4076:6:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4104:71:18","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4126:6:18"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"4150:2:18"},{"kind":"number","nodeType":"YulLiteral","src":"4154:4:18","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4146:3:18"},"nodeType":"YulFunctionCall","src":"4146:13:18"},{"name":"_4","nodeType":"YulIdentifier","src":"4161:2:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4142:3:18"},"nodeType":"YulFunctionCall","src":"4142:22:18"},{"kind":"number","nodeType":"YulLiteral","src":"4166:2:18","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4138:3:18"},"nodeType":"YulFunctionCall","src":"4138:31:18"},{"name":"_4","nodeType":"YulIdentifier","src":"4171:2:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4134:3:18"},"nodeType":"YulFunctionCall","src":"4134:40:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4122:3:18"},"nodeType":"YulFunctionCall","src":"4122:53:18"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"4108:10:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"4234:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4236:16:18"},"nodeType":"YulFunctionCall","src":"4236:18:18"},"nodeType":"YulExpressionStatement","src":"4236:18:18"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4193:10:18"},{"name":"_1","nodeType":"YulIdentifier","src":"4205:2:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4190:2:18"},"nodeType":"YulFunctionCall","src":"4190:18:18"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4213:10:18"},{"name":"memPtr","nodeType":"YulIdentifier","src":"4225:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4210:2:18"},"nodeType":"YulFunctionCall","src":"4210:22:18"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4187:2:18"},"nodeType":"YulFunctionCall","src":"4187:46:18"},"nodeType":"YulIf","src":"4184:72:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4272:2:18","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4276:10:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4265:6:18"},"nodeType":"YulFunctionCall","src":"4265:22:18"},"nodeType":"YulExpressionStatement","src":"4265:22:18"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4303:6:18"},{"name":"_3","nodeType":"YulIdentifier","src":"4311:2:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4296:6:18"},"nodeType":"YulFunctionCall","src":"4296:18:18"},"nodeType":"YulExpressionStatement","src":"4296:18:18"},{"body":{"nodeType":"YulBlock","src":"4360:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4369:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4372:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4362:6:18"},"nodeType":"YulFunctionCall","src":"4362:12:18"},"nodeType":"YulExpressionStatement","src":"4362:12:18"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"4337:2:18"},{"name":"_3","nodeType":"YulIdentifier","src":"4341:2:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4333:3:18"},"nodeType":"YulFunctionCall","src":"4333:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"4346:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4329:3:18"},"nodeType":"YulFunctionCall","src":"4329:20:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4351:7:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4326:2:18"},"nodeType":"YulFunctionCall","src":"4326:33:18"},"nodeType":"YulIf","src":"4323:53:18"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4402:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"4410:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4398:3:18"},"nodeType":"YulFunctionCall","src":"4398:15:18"},{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"4419:2:18"},{"kind":"number","nodeType":"YulLiteral","src":"4423:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4415:3:18"},"nodeType":"YulFunctionCall","src":"4415:11:18"},{"name":"_3","nodeType":"YulIdentifier","src":"4428:2:18"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"4385:12:18"},"nodeType":"YulFunctionCall","src":"4385:46:18"},"nodeType":"YulExpressionStatement","src":"4385:46:18"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4455:6:18"},{"name":"_3","nodeType":"YulIdentifier","src":"4463:2:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4451:3:18"},"nodeType":"YulFunctionCall","src":"4451:15:18"},{"kind":"number","nodeType":"YulLiteral","src":"4468:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4447:3:18"},"nodeType":"YulFunctionCall","src":"4447:24:18"},{"kind":"number","nodeType":"YulLiteral","src":"4473:1:18","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4440:6:18"},"nodeType":"YulFunctionCall","src":"4440:35:18"},"nodeType":"YulExpressionStatement","src":"4440:35:18"},{"nodeType":"YulAssignment","src":"4484:16:18","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"4494:6:18"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"4484:6:18"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3440:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3451:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3463:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3471:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3479:6:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3487:6:18","type":""}],"src":"3368:1138:18"},{"body":{"nodeType":"YulBlock","src":"4598:173:18","statements":[{"body":{"nodeType":"YulBlock","src":"4644:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4653:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4656:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4646:6:18"},"nodeType":"YulFunctionCall","src":"4646:12:18"},"nodeType":"YulExpressionStatement","src":"4646:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4619:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"4628:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4615:3:18"},"nodeType":"YulFunctionCall","src":"4615:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"4640:2:18","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4611:3:18"},"nodeType":"YulFunctionCall","src":"4611:32:18"},"nodeType":"YulIf","src":"4608:52:18"},{"nodeType":"YulAssignment","src":"4669:39:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4698:9:18"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4679:18:18"},"nodeType":"YulFunctionCall","src":"4679:29:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4669:6:18"}]},{"nodeType":"YulAssignment","src":"4717:48:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4750:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4761:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4746:3:18"},"nodeType":"YulFunctionCall","src":"4746:18:18"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4727:18:18"},"nodeType":"YulFunctionCall","src":"4727:38:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4717:6:18"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4556:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4567:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4579:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4587:6:18","type":""}],"src":"4511:260:18"},{"body":{"nodeType":"YulBlock","src":"4831:325:18","statements":[{"nodeType":"YulAssignment","src":"4841:22:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4855:1:18","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"4858:4:18"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"4851:3:18"},"nodeType":"YulFunctionCall","src":"4851:12:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4841:6:18"}]},{"nodeType":"YulVariableDeclaration","src":"4872:38:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4902:4:18"},{"kind":"number","nodeType":"YulLiteral","src":"4908:1:18","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4898:3:18"},"nodeType":"YulFunctionCall","src":"4898:12:18"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"4876:18:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"4949:31:18","statements":[{"nodeType":"YulAssignment","src":"4951:27:18","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4965:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"4973:4:18","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4961:3:18"},"nodeType":"YulFunctionCall","src":"4961:17:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4951:6:18"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4929:18:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4922:6:18"},"nodeType":"YulFunctionCall","src":"4922:26:18"},"nodeType":"YulIf","src":"4919:61:18"},{"body":{"nodeType":"YulBlock","src":"5039:111:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5060:1:18","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5067:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"5072:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5063:3:18"},"nodeType":"YulFunctionCall","src":"5063:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5053:6:18"},"nodeType":"YulFunctionCall","src":"5053:31:18"},"nodeType":"YulExpressionStatement","src":"5053:31:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5104:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5107:4:18","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5097:6:18"},"nodeType":"YulFunctionCall","src":"5097:15:18"},"nodeType":"YulExpressionStatement","src":"5097:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5132:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5135:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5125:6:18"},"nodeType":"YulFunctionCall","src":"5125:15:18"},"nodeType":"YulExpressionStatement","src":"5125:15:18"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4995:18:18"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5018:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"5026:2:18","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5015:2:18"},"nodeType":"YulFunctionCall","src":"5015:14:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4992:2:18"},"nodeType":"YulFunctionCall","src":"4992:38:18"},"nodeType":"YulIf","src":"4989:161:18"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"4811:4:18","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"4820:6:18","type":""}],"src":"4776:380:18"},{"body":{"nodeType":"YulBlock","src":"5318:218:18","statements":[{"nodeType":"YulAssignment","src":"5328:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5340:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5351:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5336:3:18"},"nodeType":"YulFunctionCall","src":"5336:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5328:4:18"}]},{"nodeType":"YulVariableDeclaration","src":"5363:29:18","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5381:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"5386:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5377:3:18"},"nodeType":"YulFunctionCall","src":"5377:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"5390:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5373:3:18"},"nodeType":"YulFunctionCall","src":"5373:19:18"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"5367:2:18","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5408:9:18"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5423:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"5431:2:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5419:3:18"},"nodeType":"YulFunctionCall","src":"5419:15:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5401:6:18"},"nodeType":"YulFunctionCall","src":"5401:34:18"},"nodeType":"YulExpressionStatement","src":"5401:34:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5455:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5466:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5451:3:18"},"nodeType":"YulFunctionCall","src":"5451:18:18"},{"name":"value1","nodeType":"YulIdentifier","src":"5471:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5444:6:18"},"nodeType":"YulFunctionCall","src":"5444:34:18"},"nodeType":"YulExpressionStatement","src":"5444:34:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5498:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5509:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5494:3:18"},"nodeType":"YulFunctionCall","src":"5494:18:18"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"5518:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"5526:2:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5514:3:18"},"nodeType":"YulFunctionCall","src":"5514:15:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5487:6:18"},"nodeType":"YulFunctionCall","src":"5487:43:18"},"nodeType":"YulExpressionStatement","src":"5487:43:18"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5271:9:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5282:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5290:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5298:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5309:4:18","type":""}],"src":"5161:375:18"},{"body":{"nodeType":"YulBlock","src":"5670:145:18","statements":[{"nodeType":"YulAssignment","src":"5680:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5692:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5703:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5688:3:18"},"nodeType":"YulFunctionCall","src":"5688:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5680:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5722:9:18"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5737:6:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5753:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"5758:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5749:3:18"},"nodeType":"YulFunctionCall","src":"5749:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"5762:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5745:3:18"},"nodeType":"YulFunctionCall","src":"5745:19:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5733:3:18"},"nodeType":"YulFunctionCall","src":"5733:32:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5715:6:18"},"nodeType":"YulFunctionCall","src":"5715:51:18"},"nodeType":"YulExpressionStatement","src":"5715:51:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5786:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5797:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5782:3:18"},"nodeType":"YulFunctionCall","src":"5782:18:18"},{"name":"value1","nodeType":"YulIdentifier","src":"5802:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5775:6:18"},"nodeType":"YulFunctionCall","src":"5775:34:18"},"nodeType":"YulExpressionStatement","src":"5775:34:18"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5631:9:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5642:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5650:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5661:4:18","type":""}],"src":"5541:274:18"},{"body":{"nodeType":"YulBlock","src":"5852:95:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5869:1:18","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5876:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"5881:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5872:3:18"},"nodeType":"YulFunctionCall","src":"5872:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5862:6:18"},"nodeType":"YulFunctionCall","src":"5862:31:18"},"nodeType":"YulExpressionStatement","src":"5862:31:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5909:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5912:4:18","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5902:6:18"},"nodeType":"YulFunctionCall","src":"5902:15:18"},"nodeType":"YulExpressionStatement","src":"5902:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5933:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5936:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5926:6:18"},"nodeType":"YulFunctionCall","src":"5926:15:18"},"nodeType":"YulExpressionStatement","src":"5926:15:18"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"5820:127:18"},{"body":{"nodeType":"YulBlock","src":"5984:95:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6001:1:18","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6008:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"6013:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6004:3:18"},"nodeType":"YulFunctionCall","src":"6004:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5994:6:18"},"nodeType":"YulFunctionCall","src":"5994:31:18"},"nodeType":"YulExpressionStatement","src":"5994:31:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6041:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6044:4:18","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6034:6:18"},"nodeType":"YulFunctionCall","src":"6034:15:18"},"nodeType":"YulExpressionStatement","src":"6034:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6065:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6068:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6058:6:18"},"nodeType":"YulFunctionCall","src":"6058:15:18"},"nodeType":"YulExpressionStatement","src":"6058:15:18"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"5952:127:18"},{"body":{"nodeType":"YulBlock","src":"6131:88:18","statements":[{"body":{"nodeType":"YulBlock","src":"6162:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6164:16:18"},"nodeType":"YulFunctionCall","src":"6164:18:18"},"nodeType":"YulExpressionStatement","src":"6164:18:18"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6147:5:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6158:1:18","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6154:3:18"},"nodeType":"YulFunctionCall","src":"6154:6:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6144:2:18"},"nodeType":"YulFunctionCall","src":"6144:17:18"},"nodeType":"YulIf","src":"6141:43:18"},{"nodeType":"YulAssignment","src":"6193:20:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6204:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"6211:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6200:3:18"},"nodeType":"YulFunctionCall","src":"6200:13:18"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"6193:3:18"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6113:5:18","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"6123:3:18","type":""}],"src":"6084:135:18"},{"body":{"nodeType":"YulBlock","src":"6273:79:18","statements":[{"nodeType":"YulAssignment","src":"6283:17:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6295:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"6298:1:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6291:3:18"},"nodeType":"YulFunctionCall","src":"6291:9:18"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"6283:4:18"}]},{"body":{"nodeType":"YulBlock","src":"6324:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6326:16:18"},"nodeType":"YulFunctionCall","src":"6326:18:18"},"nodeType":"YulExpressionStatement","src":"6326:18:18"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"6315:4:18"},{"name":"x","nodeType":"YulIdentifier","src":"6321:1:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6312:2:18"},"nodeType":"YulFunctionCall","src":"6312:11:18"},"nodeType":"YulIf","src":"6309:37:18"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6255:1:18","type":""},{"name":"y","nodeType":"YulTypedName","src":"6258:1:18","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"6264:4:18","type":""}],"src":"6224:128:18"},{"body":{"nodeType":"YulBlock","src":"6560:261:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6577:3:18"},{"name":"value0","nodeType":"YulIdentifier","src":"6582:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6570:6:18"},"nodeType":"YulFunctionCall","src":"6570:19:18"},"nodeType":"YulExpressionStatement","src":"6570:19:18"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6609:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"6614:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6605:3:18"},"nodeType":"YulFunctionCall","src":"6605:12:18"},{"name":"value1","nodeType":"YulIdentifier","src":"6619:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6598:6:18"},"nodeType":"YulFunctionCall","src":"6598:28:18"},"nodeType":"YulExpressionStatement","src":"6598:28:18"},{"nodeType":"YulVariableDeclaration","src":"6635:41:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6649:26:18","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6645:3:18"},"nodeType":"YulFunctionCall","src":"6645:31:18"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6639:2:18","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6696:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"6701:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6692:3:18"},"nodeType":"YulFunctionCall","src":"6692:12:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6714:2:18","type":"","value":"96"},{"name":"value2","nodeType":"YulIdentifier","src":"6718:6:18"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6710:3:18"},"nodeType":"YulFunctionCall","src":"6710:15:18"},{"name":"_1","nodeType":"YulIdentifier","src":"6727:2:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6706:3:18"},"nodeType":"YulFunctionCall","src":"6706:24:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6685:6:18"},"nodeType":"YulFunctionCall","src":"6685:46:18"},"nodeType":"YulExpressionStatement","src":"6685:46:18"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6751:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"6756:2:18","type":"","value":"84"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6747:3:18"},"nodeType":"YulFunctionCall","src":"6747:12:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6769:2:18","type":"","value":"96"},{"name":"value3","nodeType":"YulIdentifier","src":"6773:6:18"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6765:3:18"},"nodeType":"YulFunctionCall","src":"6765:15:18"},{"name":"_1","nodeType":"YulIdentifier","src":"6782:2:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6761:3:18"},"nodeType":"YulFunctionCall","src":"6761:24:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6740:6:18"},"nodeType":"YulFunctionCall","src":"6740:46:18"},"nodeType":"YulExpressionStatement","src":"6740:46:18"},{"nodeType":"YulAssignment","src":"6795:20:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6806:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"6811:3:18","type":"","value":"104"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6802:3:18"},"nodeType":"YulFunctionCall","src":"6802:13:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6795:3:18"}]}]},"name":"abi_encode_tuple_packed_t_uint256_t_bytes32_t_address_t_address__to_t_uint256_t_bytes32_t_address_t_address__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6512:3:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6517:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6525:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6533:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6541:6:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6552:3:18","type":""}],"src":"6357:464:18"},{"body":{"nodeType":"YulBlock","src":"6858:95:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6875:1:18","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6882:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"6887:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6878:3:18"},"nodeType":"YulFunctionCall","src":"6878:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6868:6:18"},"nodeType":"YulFunctionCall","src":"6868:31:18"},"nodeType":"YulExpressionStatement","src":"6868:31:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6915:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6918:4:18","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6908:6:18"},"nodeType":"YulFunctionCall","src":"6908:15:18"},"nodeType":"YulExpressionStatement","src":"6908:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6939:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6942:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6932:6:18"},"nodeType":"YulFunctionCall","src":"6932:15:18"},"nodeType":"YulExpressionStatement","src":"6932:15:18"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"6826:127:18"},{"body":{"nodeType":"YulBlock","src":"6996:74:18","statements":[{"body":{"nodeType":"YulBlock","src":"7019:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"7021:16:18"},"nodeType":"YulFunctionCall","src":"7021:18:18"},"nodeType":"YulExpressionStatement","src":"7021:18:18"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"7016:1:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7009:6:18"},"nodeType":"YulFunctionCall","src":"7009:9:18"},"nodeType":"YulIf","src":"7006:35:18"},{"nodeType":"YulAssignment","src":"7050:14:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7059:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"7062:1:18"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"7055:3:18"},"nodeType":"YulFunctionCall","src":"7055:9:18"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"7050:1:18"}]}]},"name":"mod_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6981:1:18","type":""},{"name":"y","nodeType":"YulTypedName","src":"6984:1:18","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"6990:1:18","type":""}],"src":"6958:112:18"},{"body":{"nodeType":"YulBlock","src":"7131:65:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7148:1:18","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"7151:3:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7141:6:18"},"nodeType":"YulFunctionCall","src":"7141:14:18"},"nodeType":"YulExpressionStatement","src":"7141:14:18"},{"nodeType":"YulAssignment","src":"7164:26:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7182:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7185:4:18","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"7172:9:18"},"nodeType":"YulFunctionCall","src":"7172:18:18"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"7164:4:18"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"7114:3:18","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"7122:4:18","type":""}],"src":"7075:121:18"},{"body":{"nodeType":"YulBlock","src":"7282:464:18","statements":[{"body":{"nodeType":"YulBlock","src":"7315:425:18","statements":[{"nodeType":"YulVariableDeclaration","src":"7329:11:18","value":{"kind":"number","nodeType":"YulLiteral","src":"7339:1:18","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"7333:2:18","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"7360:2:18"},{"name":"array","nodeType":"YulIdentifier","src":"7364:5:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7353:6:18"},"nodeType":"YulFunctionCall","src":"7353:17:18"},"nodeType":"YulExpressionStatement","src":"7353:17:18"},{"nodeType":"YulVariableDeclaration","src":"7383:31:18","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"7405:2:18"},{"kind":"number","nodeType":"YulLiteral","src":"7409:4:18","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"7395:9:18"},"nodeType":"YulFunctionCall","src":"7395:19:18"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"7387:4:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7427:57:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7450:4:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7460:1:18","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"7467:10:18"},{"kind":"number","nodeType":"YulLiteral","src":"7479:2:18","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7463:3:18"},"nodeType":"YulFunctionCall","src":"7463:19:18"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7456:3:18"},"nodeType":"YulFunctionCall","src":"7456:27:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7446:3:18"},"nodeType":"YulFunctionCall","src":"7446:38:18"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"7431:11:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"7521:23:18","statements":[{"nodeType":"YulAssignment","src":"7523:19:18","value":{"name":"data","nodeType":"YulIdentifier","src":"7538:4:18"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"7523:11:18"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"7503:10:18"},{"kind":"number","nodeType":"YulLiteral","src":"7515:4:18","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7500:2:18"},"nodeType":"YulFunctionCall","src":"7500:20:18"},"nodeType":"YulIf","src":"7497:47:18"},{"nodeType":"YulVariableDeclaration","src":"7557:41:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7571:4:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7581:1:18","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"7588:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"7593:2:18","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7584:3:18"},"nodeType":"YulFunctionCall","src":"7584:12:18"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7577:3:18"},"nodeType":"YulFunctionCall","src":"7577:20:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7567:3:18"},"nodeType":"YulFunctionCall","src":"7567:31:18"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"7561:2:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7611:24:18","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"7624:11:18"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"7615:5:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"7709:21:18","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"7718:5:18"},{"name":"_1","nodeType":"YulIdentifier","src":"7725:2:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7711:6:18"},"nodeType":"YulFunctionCall","src":"7711:17:18"},"nodeType":"YulExpressionStatement","src":"7711:17:18"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"7659:5:18"},{"name":"_2","nodeType":"YulIdentifier","src":"7666:2:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7656:2:18"},"nodeType":"YulFunctionCall","src":"7656:13:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7670:26:18","statements":[{"nodeType":"YulAssignment","src":"7672:22:18","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"7685:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"7692:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7681:3:18"},"nodeType":"YulFunctionCall","src":"7681:13:18"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"7672:5:18"}]}]},"pre":{"nodeType":"YulBlock","src":"7652:3:18","statements":[]},"src":"7648:82:18"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"7298:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"7303:2:18","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7295:2:18"},"nodeType":"YulFunctionCall","src":"7295:11:18"},"nodeType":"YulIf","src":"7292:448:18"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"7254:5:18","type":""},{"name":"len","nodeType":"YulTypedName","src":"7261:3:18","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"7266:10:18","type":""}],"src":"7201:545:18"},{"body":{"nodeType":"YulBlock","src":"7836:81:18","statements":[{"nodeType":"YulAssignment","src":"7846:65:18","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7861:4:18"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7879:1:18","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"7882:3:18"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7875:3:18"},"nodeType":"YulFunctionCall","src":"7875:11:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7892:1:18","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7888:3:18"},"nodeType":"YulFunctionCall","src":"7888:6:18"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7871:3:18"},"nodeType":"YulFunctionCall","src":"7871:24:18"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7867:3:18"},"nodeType":"YulFunctionCall","src":"7867:29:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7857:3:18"},"nodeType":"YulFunctionCall","src":"7857:40:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7903:1:18","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"7906:3:18"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7899:3:18"},"nodeType":"YulFunctionCall","src":"7899:11:18"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7854:2:18"},"nodeType":"YulFunctionCall","src":"7854:57:18"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"7846:4:18"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"7813:4:18","type":""},{"name":"len","nodeType":"YulTypedName","src":"7819:3:18","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"7827:4:18","type":""}],"src":"7751:166:18"},{"body":{"nodeType":"YulBlock","src":"8019:1338:18","statements":[{"body":{"nodeType":"YulBlock","src":"8046:9:18","statements":[{"nodeType":"YulLeave","src":"8048:5:18"}]},"condition":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8035:4:18"},{"name":"src","nodeType":"YulIdentifier","src":"8041:3:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8032:2:18"},"nodeType":"YulFunctionCall","src":"8032:13:18"},"nodeType":"YulIf","src":"8029:26:18"},{"nodeType":"YulVariableDeclaration","src":"8064:51:18","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8110:3:18"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"8104:5:18"},"nodeType":"YulFunctionCall","src":"8104:10:18"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"8078:25:18"},"nodeType":"YulFunctionCall","src":"8078:37:18"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"8068:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"8158:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"8160:16:18"},"nodeType":"YulFunctionCall","src":"8160:18:18"},"nodeType":"YulExpressionStatement","src":"8160:18:18"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8130:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"8138:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8127:2:18"},"nodeType":"YulFunctionCall","src":"8127:30:18"},"nodeType":"YulIf","src":"8124:56:18"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8233:4:18"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8271:4:18"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"8265:5:18"},"nodeType":"YulFunctionCall","src":"8265:11:18"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"8239:25:18"},"nodeType":"YulFunctionCall","src":"8239:38:18"},{"name":"newLen","nodeType":"YulIdentifier","src":"8279:6:18"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"8189:43:18"},"nodeType":"YulFunctionCall","src":"8189:97:18"},"nodeType":"YulExpressionStatement","src":"8189:97:18"},{"nodeType":"YulVariableDeclaration","src":"8295:18:18","value":{"kind":"number","nodeType":"YulLiteral","src":"8312:1:18","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"8299:9:18","type":""}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"8359:741:18","statements":[{"nodeType":"YulVariableDeclaration","src":"8373:35:18","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8392:6:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8404:2:18","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"8400:3:18"},"nodeType":"YulFunctionCall","src":"8400:7:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8388:3:18"},"nodeType":"YulFunctionCall","src":"8388:20:18"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"8377:7:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8421:47:18","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8464:3:18"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"8434:29:18"},"nodeType":"YulFunctionCall","src":"8434:34:18"},"variables":[{"name":"src_1","nodeType":"YulTypedName","src":"8425:5:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8481:49:18","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8525:4:18"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"8495:29:18"},"nodeType":"YulFunctionCall","src":"8495:35:18"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"8485:6:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8543:18:18","value":{"name":"srcOffset","nodeType":"YulIdentifier","src":"8552:9:18"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"8547:1:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"8631:194:18","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8656:6:18"},{"arguments":[{"arguments":[{"name":"src_1","nodeType":"YulIdentifier","src":"8674:5:18"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8681:9:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8670:3:18"},"nodeType":"YulFunctionCall","src":"8670:21:18"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"8664:5:18"},"nodeType":"YulFunctionCall","src":"8664:28:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8649:6:18"},"nodeType":"YulFunctionCall","src":"8649:44:18"},"nodeType":"YulExpressionStatement","src":"8649:44:18"},{"nodeType":"YulVariableDeclaration","src":"8710:11:18","value":{"kind":"number","nodeType":"YulLiteral","src":"8720:1:18","type":"","value":"1"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"8714:2:18","type":""}]},{"nodeType":"YulAssignment","src":"8738:25:18","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8752:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"8760:2:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8748:3:18"},"nodeType":"YulFunctionCall","src":"8748:15:18"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8738:6:18"}]},{"nodeType":"YulAssignment","src":"8780:31:18","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8797:9:18"},{"name":"_1","nodeType":"YulIdentifier","src":"8808:2:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8793:3:18"},"nodeType":"YulFunctionCall","src":"8793:18:18"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8780:9:18"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8585:1:18"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"8588:7:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8582:2:18"},"nodeType":"YulFunctionCall","src":"8582:14:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"8597:21:18","statements":[{"nodeType":"YulAssignment","src":"8599:17:18","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8608:1:18"},{"kind":"number","nodeType":"YulLiteral","src":"8611:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8604:3:18"},"nodeType":"YulFunctionCall","src":"8604:12:18"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"8599:1:18"}]}]},"pre":{"nodeType":"YulBlock","src":"8578:3:18","statements":[]},"src":"8574:251:18"},{"body":{"nodeType":"YulBlock","src":"8873:168:18","statements":[{"nodeType":"YulVariableDeclaration","src":"8891:45:18","value":{"arguments":[{"arguments":[{"name":"src_1","nodeType":"YulIdentifier","src":"8918:5:18"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8925:9:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8914:3:18"},"nodeType":"YulFunctionCall","src":"8914:21:18"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"8908:5:18"},"nodeType":"YulFunctionCall","src":"8908:28:18"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"8895:9:18","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8960:6:18"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"8972:9:18"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8999:1:18","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"9002:6:18"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8995:3:18"},"nodeType":"YulFunctionCall","src":"8995:14:18"},{"kind":"number","nodeType":"YulLiteral","src":"9011:3:18","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8991:3:18"},"nodeType":"YulFunctionCall","src":"8991:24:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9021:1:18","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"9017:3:18"},"nodeType":"YulFunctionCall","src":"9017:6:18"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"8987:3:18"},"nodeType":"YulFunctionCall","src":"8987:37:18"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"8983:3:18"},"nodeType":"YulFunctionCall","src":"8983:42:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8968:3:18"},"nodeType":"YulFunctionCall","src":"8968:58:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8953:6:18"},"nodeType":"YulFunctionCall","src":"8953:74:18"},"nodeType":"YulExpressionStatement","src":"8953:74:18"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"8844:7:18"},{"name":"newLen","nodeType":"YulIdentifier","src":"8853:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8841:2:18"},"nodeType":"YulFunctionCall","src":"8841:19:18"},"nodeType":"YulIf","src":"8838:203:18"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"9061:4:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9075:1:18","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"9078:6:18"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9071:3:18"},"nodeType":"YulFunctionCall","src":"9071:14:18"},{"kind":"number","nodeType":"YulLiteral","src":"9087:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9067:3:18"},"nodeType":"YulFunctionCall","src":"9067:22:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"9054:6:18"},"nodeType":"YulFunctionCall","src":"9054:36:18"},"nodeType":"YulExpressionStatement","src":"9054:36:18"}]},"nodeType":"YulCase","src":"8352:748:18","value":{"kind":"number","nodeType":"YulLiteral","src":"8357:1:18","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"9117:234:18","statements":[{"nodeType":"YulVariableDeclaration","src":"9131:14:18","value":{"kind":"number","nodeType":"YulLiteral","src":"9144:1:18","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"9135:5:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"9180:67:18","statements":[{"nodeType":"YulAssignment","src":"9198:35:18","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9217:3:18"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"9222:9:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9213:3:18"},"nodeType":"YulFunctionCall","src":"9213:19:18"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"9207:5:18"},"nodeType":"YulFunctionCall","src":"9207:26:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9198:5:18"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"9161:6:18"},"nodeType":"YulIf","src":"9158:89:18"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"9267:4:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9326:5:18"},{"name":"newLen","nodeType":"YulIdentifier","src":"9333:6:18"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"9273:52:18"},"nodeType":"YulFunctionCall","src":"9273:67:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"9260:6:18"},"nodeType":"YulFunctionCall","src":"9260:81:18"},"nodeType":"YulExpressionStatement","src":"9260:81:18"}]},"nodeType":"YulCase","src":"9109:242:18","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8332:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"8340:2:18","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8329:2:18"},"nodeType":"YulFunctionCall","src":"8329:14:18"},"nodeType":"YulSwitch","src":"8322:1029:18"}]},"name":"copy_byte_array_to_storage_from_t_string_storage_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"8004:4:18","type":""},{"name":"src","nodeType":"YulTypedName","src":"8010:3:18","type":""}],"src":"7922:1435:18"},{"body":{"nodeType":"YulBlock","src":"10256:798:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10273:3:18"},{"hexValue":"7b","kind":"string","nodeType":"YulLiteral","src":"10278:3:18","type":"","value":"{"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10266:6:18"},"nodeType":"YulFunctionCall","src":"10266:16:18"},"nodeType":"YulExpressionStatement","src":"10266:16:18"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10302:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"10307:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10298:3:18"},"nodeType":"YulFunctionCall","src":"10298:11:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10315:3:18","type":"","value":"128"},{"kind":"number","nodeType":"YulLiteral","src":"10320:34:18","type":"","value":"0x226e616d65223a225345324e46542023"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10311:3:18"},"nodeType":"YulFunctionCall","src":"10311:44:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10291:6:18"},"nodeType":"YulFunctionCall","src":"10291:65:18"},"nodeType":"YulExpressionStatement","src":"10291:65:18"},{"nodeType":"YulVariableDeclaration","src":"10365:27:18","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10385:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10379:5:18"},"nodeType":"YulFunctionCall","src":"10379:13:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"10369:6:18","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10440:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"10448:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10436:3:18"},"nodeType":"YulFunctionCall","src":"10436:17:18"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10459:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"10464:2:18","type":"","value":"17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10455:3:18"},"nodeType":"YulFunctionCall","src":"10455:12:18"},{"name":"length","nodeType":"YulIdentifier","src":"10469:6:18"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"10401:34:18"},"nodeType":"YulFunctionCall","src":"10401:75:18"},"nodeType":"YulExpressionStatement","src":"10401:75:18"},{"nodeType":"YulVariableDeclaration","src":"10485:26:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10499:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"10504:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10495:3:18"},"nodeType":"YulFunctionCall","src":"10495:16:18"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"10489:2:18","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"10531:2:18"},{"kind":"number","nodeType":"YulLiteral","src":"10535:2:18","type":"","value":"17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10527:3:18"},"nodeType":"YulFunctionCall","src":"10527:11:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10544:3:18","type":"","value":"242"},{"kind":"number","nodeType":"YulLiteral","src":"10549:4:18","type":"","value":"2187"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10540:3:18"},"nodeType":"YulFunctionCall","src":"10540:14:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10520:6:18"},"nodeType":"YulFunctionCall","src":"10520:35:18"},"nodeType":"YulExpressionStatement","src":"10520:35:18"},{"expression":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"10575:2:18"},{"kind":"number","nodeType":"YulLiteral","src":"10579:2:18","type":"","value":"19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10571:3:18"},"nodeType":"YulFunctionCall","src":"10571:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"10584:66:18","type":"","value":"0x226465736372697074696f6e223a2253636166666f6c642d4554482032207361"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10564:6:18"},"nodeType":"YulFunctionCall","src":"10564:87:18"},"nodeType":"YulExpressionStatement","src":"10564:87:18"},{"expression":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"10671:2:18"},{"kind":"number","nodeType":"YulLiteral","src":"10675:2:18","type":"","value":"51"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10667:3:18"},"nodeType":"YulFunctionCall","src":"10667:11:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10684:3:18","type":"","value":"178"},{"kind":"number","nodeType":"YulLiteral","src":"10689:22:18","type":"","value":"0x1b5c1b1948139195088b"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10680:3:18"},"nodeType":"YulFunctionCall","src":"10680:32:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10660:6:18"},"nodeType":"YulFunctionCall","src":"10660:53:18"},"nodeType":"YulExpressionStatement","src":"10660:53:18"},{"expression":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"10733:2:18"},{"kind":"number","nodeType":"YulLiteral","src":"10737:2:18","type":"","value":"61"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10729:3:18"},"nodeType":"YulFunctionCall","src":"10729:11:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10746:3:18","type":"","value":"128"},{"kind":"number","nodeType":"YulLiteral","src":"10751:34:18","type":"","value":"0x22696d616765223a22697066733a2f2f"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10742:3:18"},"nodeType":"YulFunctionCall","src":"10742:44:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10722:6:18"},"nodeType":"YulFunctionCall","src":"10722:65:18"},"nodeType":"YulExpressionStatement","src":"10722:65:18"},{"nodeType":"YulVariableDeclaration","src":"10796:29:18","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"10818:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10812:5:18"},"nodeType":"YulFunctionCall","src":"10812:13:18"},"variables":[{"name":"length_1","nodeType":"YulTypedName","src":"10800:8:18","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"10873:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"10881:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10869:3:18"},"nodeType":"YulFunctionCall","src":"10869:17:18"},{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"10892:2:18"},{"kind":"number","nodeType":"YulLiteral","src":"10896:2:18","type":"","value":"77"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10888:3:18"},"nodeType":"YulFunctionCall","src":"10888:11:18"},{"name":"length_1","nodeType":"YulIdentifier","src":"10901:8:18"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"10834:34:18"},"nodeType":"YulFunctionCall","src":"10834:76:18"},"nodeType":"YulExpressionStatement","src":"10834:76:18"},{"nodeType":"YulVariableDeclaration","src":"10919:27:18","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"10933:2:18"},{"name":"length_1","nodeType":"YulIdentifier","src":"10937:8:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10929:3:18"},"nodeType":"YulFunctionCall","src":"10929:17:18"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"10923:2:18","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"10966:2:18"},{"kind":"number","nodeType":"YulLiteral","src":"10970:2:18","type":"","value":"77"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10962:3:18"},"nodeType":"YulFunctionCall","src":"10962:11:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10979:3:18","type":"","value":"249"},{"kind":"number","nodeType":"YulLiteral","src":"10984:2:18","type":"","value":"17"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10975:3:18"},"nodeType":"YulFunctionCall","src":"10975:12:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10955:6:18"},"nodeType":"YulFunctionCall","src":"10955:33:18"},"nodeType":"YulExpressionStatement","src":"10955:33:18"},{"expression":{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"11008:2:18"},{"kind":"number","nodeType":"YulLiteral","src":"11012:2:18","type":"","value":"78"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11004:3:18"},"nodeType":"YulFunctionCall","src":"11004:11:18"},{"hexValue":"7d","kind":"string","nodeType":"YulLiteral","src":"11017:3:18","type":"","value":"}"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10997:6:18"},"nodeType":"YulFunctionCall","src":"10997:24:18"},"nodeType":"YulExpressionStatement","src":"10997:24:18"},{"nodeType":"YulAssignment","src":"11030:18:18","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"11041:2:18"},{"kind":"number","nodeType":"YulLiteral","src":"11045:2:18","type":"","value":"79"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11037:3:18"},"nodeType":"YulFunctionCall","src":"11037:11:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11030:3:18"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52_t_stringliteral_1aa8fdda351331c29acd1810b7221962a68db950e62d3ad373ddf4bb48c6523f_t_string_memory_ptr_t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb_t_stringliteral_1f27a6fded7ec13570e26e45ccdc9e364fc50b012b92a66ec24ade67e4d34298_t_stringliteral_1142d87ae89da2e55c57bf6d4d08b8c1cbd98506048166b2165a9963aa8d182d_t_string_memory_ptr_t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0_t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10224:3:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10229:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10237:6:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10248:3:18","type":""}],"src":"9362:1692:18"},{"body":{"nodeType":"YulBlock","src":"11299:221:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11316:3:18"},{"hexValue":"646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c","kind":"string","nodeType":"YulLiteral","src":"11321:31:18","type":"","value":"data:application/json;base64,"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11309:6:18"},"nodeType":"YulFunctionCall","src":"11309:44:18"},"nodeType":"YulExpressionStatement","src":"11309:44:18"},{"nodeType":"YulVariableDeclaration","src":"11362:27:18","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11382:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11376:5:18"},"nodeType":"YulFunctionCall","src":"11376:13:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"11366:6:18","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11437:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"11445:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11433:3:18"},"nodeType":"YulFunctionCall","src":"11433:17:18"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11456:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"11461:2:18","type":"","value":"29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11452:3:18"},"nodeType":"YulFunctionCall","src":"11452:12:18"},{"name":"length","nodeType":"YulIdentifier","src":"11466:6:18"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"11398:34:18"},"nodeType":"YulFunctionCall","src":"11398:75:18"},"nodeType":"YulExpressionStatement","src":"11398:75:18"},{"nodeType":"YulAssignment","src":"11482:32:18","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11497:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"11502:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11493:3:18"},"nodeType":"YulFunctionCall","src":"11493:16:18"},{"kind":"number","nodeType":"YulLiteral","src":"11511:2:18","type":"","value":"29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11489:3:18"},"nodeType":"YulFunctionCall","src":"11489:25:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11482:3:18"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11275:3:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11280:6:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11291:3:18","type":""}],"src":"11059:461:18"},{"body":{"nodeType":"YulBlock","src":"11728:286:18","statements":[{"nodeType":"YulVariableDeclaration","src":"11738:29:18","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11756:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"11761:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11752:3:18"},"nodeType":"YulFunctionCall","src":"11752:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"11765:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11748:3:18"},"nodeType":"YulFunctionCall","src":"11748:19:18"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"11742:2:18","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11783:9:18"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11798:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"11806:2:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11794:3:18"},"nodeType":"YulFunctionCall","src":"11794:15:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11776:6:18"},"nodeType":"YulFunctionCall","src":"11776:34:18"},"nodeType":"YulExpressionStatement","src":"11776:34:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11830:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"11841:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11826:3:18"},"nodeType":"YulFunctionCall","src":"11826:18:18"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11850:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"11858:2:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11846:3:18"},"nodeType":"YulFunctionCall","src":"11846:15:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11819:6:18"},"nodeType":"YulFunctionCall","src":"11819:43:18"},"nodeType":"YulExpressionStatement","src":"11819:43:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11882:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"11893:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11878:3:18"},"nodeType":"YulFunctionCall","src":"11878:18:18"},{"name":"value2","nodeType":"YulIdentifier","src":"11898:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11871:6:18"},"nodeType":"YulFunctionCall","src":"11871:34:18"},"nodeType":"YulExpressionStatement","src":"11871:34:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11925:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"11936:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11921:3:18"},"nodeType":"YulFunctionCall","src":"11921:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"11941:3:18","type":"","value":"128"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11914:6:18"},"nodeType":"YulFunctionCall","src":"11914:31:18"},"nodeType":"YulExpressionStatement","src":"11914:31:18"},{"nodeType":"YulAssignment","src":"11954:54:18","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"11980:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11992:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"12003:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11988:3:18"},"nodeType":"YulFunctionCall","src":"11988:19:18"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"11962:17:18"},"nodeType":"YulFunctionCall","src":"11962:46:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11954:4:18"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11673:9:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"11684:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11692:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11700:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11708:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11719:4:18","type":""}],"src":"11525:489:18"},{"body":{"nodeType":"YulBlock","src":"12099:169:18","statements":[{"body":{"nodeType":"YulBlock","src":"12145:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12154:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12157:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12147:6:18"},"nodeType":"YulFunctionCall","src":"12147:12:18"},"nodeType":"YulExpressionStatement","src":"12147:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12120:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"12129:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12116:3:18"},"nodeType":"YulFunctionCall","src":"12116:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"12141:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12112:3:18"},"nodeType":"YulFunctionCall","src":"12112:32:18"},"nodeType":"YulIf","src":"12109:52:18"},{"nodeType":"YulVariableDeclaration","src":"12170:29:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12189:9:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12183:5:18"},"nodeType":"YulFunctionCall","src":"12183:16:18"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"12174:5:18","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12232:5:18"}],"functionName":{"name":"validator_revert_bytes4","nodeType":"YulIdentifier","src":"12208:23:18"},"nodeType":"YulFunctionCall","src":"12208:30:18"},"nodeType":"YulExpressionStatement","src":"12208:30:18"},{"nodeType":"YulAssignment","src":"12247:15:18","value":{"name":"value","nodeType":"YulIdentifier","src":"12257:5:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12247:6:18"}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12065:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12076:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12088:6:18","type":""}],"src":"12019:249:18"},{"body":{"nodeType":"YulBlock","src":"12321:77:18","statements":[{"nodeType":"YulAssignment","src":"12331:16:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"12342:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"12345:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12338:3:18"},"nodeType":"YulFunctionCall","src":"12338:9:18"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"12331:3:18"}]},{"body":{"nodeType":"YulBlock","src":"12370:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"12372:16:18"},"nodeType":"YulFunctionCall","src":"12372:18:18"},"nodeType":"YulExpressionStatement","src":"12372:18:18"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"12362:1:18"},{"name":"sum","nodeType":"YulIdentifier","src":"12365:3:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12359:2:18"},"nodeType":"YulFunctionCall","src":"12359:10:18"},"nodeType":"YulIf","src":"12356:36:18"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"12304:1:18","type":""},{"name":"y","nodeType":"YulTypedName","src":"12307:1:18","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"12313:3:18","type":""}],"src":"12273:125:18"},{"body":{"nodeType":"YulBlock","src":"12449:74:18","statements":[{"body":{"nodeType":"YulBlock","src":"12472:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"12474:16:18"},"nodeType":"YulFunctionCall","src":"12474:18:18"},"nodeType":"YulExpressionStatement","src":"12474:18:18"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"12469:1:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12462:6:18"},"nodeType":"YulFunctionCall","src":"12462:9:18"},"nodeType":"YulIf","src":"12459:35:18"},{"nodeType":"YulAssignment","src":"12503:14:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"12512:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"12515:1:18"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"12508:3:18"},"nodeType":"YulFunctionCall","src":"12508:9:18"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"12503:1:18"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"12434:1:18","type":""},{"name":"y","nodeType":"YulTypedName","src":"12437:1:18","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"12443:1:18","type":""}],"src":"12403:120:18"},{"body":{"nodeType":"YulBlock","src":"12580:116:18","statements":[{"nodeType":"YulAssignment","src":"12590:20:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"12605:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"12608:1:18"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"12601:3:18"},"nodeType":"YulFunctionCall","src":"12601:9:18"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"12590:7:18"}]},{"body":{"nodeType":"YulBlock","src":"12668:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"12670:16:18"},"nodeType":"YulFunctionCall","src":"12670:18:18"},"nodeType":"YulExpressionStatement","src":"12670:18:18"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"12639:1:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12632:6:18"},"nodeType":"YulFunctionCall","src":"12632:9:18"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"12646:1:18"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"12653:7:18"},{"name":"x","nodeType":"YulIdentifier","src":"12662:1:18"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"12649:3:18"},"nodeType":"YulFunctionCall","src":"12649:15:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"12643:2:18"},"nodeType":"YulFunctionCall","src":"12643:22:18"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"12629:2:18"},"nodeType":"YulFunctionCall","src":"12629:37:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12622:6:18"},"nodeType":"YulFunctionCall","src":"12622:45:18"},"nodeType":"YulIf","src":"12619:71:18"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"12559:1:18","type":""},{"name":"y","nodeType":"YulTypedName","src":"12562:1:18","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"12568:7:18","type":""}],"src":"12528:168:18"},{"body":{"nodeType":"YulBlock","src":"12733:95:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12750:1:18","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12757:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"12762:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"12753:3:18"},"nodeType":"YulFunctionCall","src":"12753:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12743:6:18"},"nodeType":"YulFunctionCall","src":"12743:31:18"},"nodeType":"YulExpressionStatement","src":"12743:31:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12790:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"12793:4:18","type":"","value":"0x31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12783:6:18"},"nodeType":"YulFunctionCall","src":"12783:15:18"},"nodeType":"YulExpressionStatement","src":"12783:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12814:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12817:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12807:6:18"},"nodeType":"YulFunctionCall","src":"12807:15:18"},"nodeType":"YulExpressionStatement","src":"12807:15:18"}]},"name":"panic_error_0x31","nodeType":"YulFunctionDefinition","src":"12701:127:18"}]},"contents":"{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value3 := memPtr\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, _1))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_packed_t_uint256_t_bytes32_t_address_t_address__to_t_uint256_t_bytes32_t_address_t_address__nonPadded_inplace_fromStack_reversed(pos, value3, value2, value1, value0) -> end\n    {\n        mstore(pos, value0)\n        mstore(add(pos, 32), value1)\n        let _1 := not(0xffffffffffffffffffffffff)\n        mstore(add(pos, 64), and(shl(96, value2), _1))\n        mstore(add(pos, 84), and(shl(96, value3), _1))\n        end := add(pos, 104)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_storage_ptr_to_t_string_storage(slot, src)\n    {\n        if eq(slot, src) { leave }\n        let newLen := extract_byte_array_length(sload(src))\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let src_1 := array_dataslot_string_storage(src)\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := srcOffset\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, sload(add(src_1, srcOffset)))\n                let _1 := 1\n                dstPtr := add(dstPtr, _1)\n                srcOffset := add(srcOffset, _1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := sload(add(src_1, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := sload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_packed_t_stringliteral_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52_t_stringliteral_1aa8fdda351331c29acd1810b7221962a68db950e62d3ad373ddf4bb48c6523f_t_string_memory_ptr_t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb_t_stringliteral_1f27a6fded7ec13570e26e45ccdc9e364fc50b012b92a66ec24ade67e4d34298_t_stringliteral_1142d87ae89da2e55c57bf6d4d08b8c1cbd98506048166b2165a9963aa8d182d_t_string_memory_ptr_t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0_t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, \"{\")\n        mstore(add(pos, 1), shl(128, 0x226e616d65223a225345324e46542023))\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), add(pos, 17), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 17), shl(242, 2187))\n        mstore(add(_1, 19), 0x226465736372697074696f6e223a2253636166666f6c642d4554482032207361)\n        mstore(add(_1, 51), shl(178, 0x1b5c1b1948139195088b))\n        mstore(add(_1, 61), shl(128, 0x22696d616765223a22697066733a2f2f))\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), add(_1, 77), length_1)\n        let _2 := add(_1, length_1)\n        mstore(add(_2, 77), shl(249, 17))\n        mstore(add(_2, 78), \"}\")\n        end := add(_2, 79)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, \"data:application/json;base64,\")\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), add(pos, 29), length)\n        end := add(add(pos, length), 29)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n}","id":18,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061012c5760003560e01c80636352211e116100ad57806398bdf6f51161007157806398bdf6f514610273578063a22cb4651461027c578063b88d4fde1461028f578063c87b56dd146102a2578063e985e9c5146102b557600080fd5b80636352211e1461021f578063691c65d4146102325780636c8b703f1461024557806370a082311461025857806395d89b411461026b57600080fd5b806318160ddd116100f457806318160ddd146101c157806323b872dd146101d35780632f745c59146101e657806342842e0e146101f95780634f6ccce71461020c57600080fd5b806301ffc9a71461013157806306fdde0314610159578063081812fc1461016e578063095ea7b3146101995780631253c546146101ae575b600080fd5b61014461013f36600461137e565b6102c8565b60405190151581526020015b60405180910390f35b6101616102f3565b60405161015091906113f2565b61018161017c366004611405565b610385565b6040516001600160a01b039091168152602001610150565b6101ac6101a736600461143a565b6103ae565b005b6101616101bc366004611405565b6103bd565b6008545b604051908152602001610150565b6101ac6101e1366004611464565b610469565b6101c56101f436600461143a565b6104f9565b6101ac610207366004611464565b61055e565b6101c561021a366004611405565b61057e565b61018161022d366004611405565b6105d7565b6101c56102403660046114a0565b6105e2565b610161610253366004611405565b6106b7565b6101c56102663660046114a0565b6106d0565b610161610718565b6101c5600a5481565b6101ac61028a3660046114bb565b610727565b6101ac61029d36600461150d565b610732565b6101616102b0366004611405565b610749565b6101446102c33660046115e9565b61084d565b60006001600160e01b0319821663780e9d6360e01b14806102ed57506102ed8261087b565b92915050565b6060600080546103029061161c565b80601f016020809104026020016040519081016040528092919081815260200182805461032e9061161c565b801561037b5780601f106103505761010080835404028352916020019161037b565b820191906000526020600020905b81548152906001019060200180831161035e57829003601f168201915b5050505050905090565b6000610390826108cb565b506000828152600460205260409020546001600160a01b03166102ed565b6103b9828233610904565b5050565b600c81815481106103cd57600080fd5b9060005260206000200160009150905080546103e89061161c565b80601f01602080910402602001604051908101604052809291908181526020018280546104149061161c565b80156104615780601f1061043657610100808354040283529160200191610461565b820191906000526020600020905b81548152906001019060200180831161044457829003601f168201915b505050505081565b6001600160a01b03821661049857604051633250574960e11b8152600060048201526024015b60405180910390fd5b60006104a5838333610911565b9050836001600160a01b0316816001600160a01b0316146104f3576040516364283d7b60e01b81526001600160a01b038086166004830152602482018490528216604482015260640161048f565b50505050565b6000610504836106d0565b82106105355760405163295f44f760e21b81526001600160a01b03841660048201526024810183905260440161048f565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b61057983838360405180602001604052806000815250610732565b505050565b600061058960085490565b82106105b25760405163295f44f760e21b8152600060048201526024810183905260440161048f565b600882815481106105c5576105c5611656565b90600052602060002001549050919050565b60006102ed826108cb565b600a8054600091826105f383611682565b919050555061060482600a546109e6565b600a5460009061061560014361169b565b6040805160208101939093529040908201526bffffffffffffffffffffffff1933606090811b82168184015230901b16607482015260880160408051601f198184030181529190528051602090910120600c80549192509061067790836116c4565b8154811061068757610687611656565b60009182526020808320600a548452600b9091526040909220916106ac910182611726565b5050600a5492915050565b600b60205260009081526040902080546103e89061161c565b60006001600160a01b0382166106fc576040516322718ad960e21b81526000600482015260240161048f565b506001600160a01b031660009081526003602052604090205490565b6060600180546103029061161c565b6103b9338383610a00565b61073d848484610469565b6104f384848484610a9f565b6060610754826108cb565b506000828152600b60205260408120805461076e9061161c565b80601f016020809104026020016040519081016040528092919081815260200182805461079a9061161c565b80156107e75780601f106107bc576101008083540402835291602001916107e7565b820191906000526020600020905b8154815290600101906020018083116107ca57829003601f168201915b5050505050905060006107f984610bc8565b8260405160200161080b929190611803565b604051602081830303815290604052905061082581610c5b565b60405160200161083591906118d1565b60405160208183030381529060405292505050919050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b14806108ac57506001600160e01b03198216635b5e139f60e01b145b806102ed57506301ffc9a760e01b6001600160e01b03198316146102ed565b6000818152600260205260408120546001600160a01b0316806102ed57604051637e27328960e01b81526004810184905260240161048f565b6105798383836001610dbb565b60008061091f858585610ec1565b90506001600160a01b03811661097c5761097784600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b61099f565b846001600160a01b0316816001600160a01b03161461099f5761099f8185610fba565b6001600160a01b0385166109bb576109b68461104b565b6109de565b846001600160a01b0316816001600160a01b0316146109de576109de85856110fa565b949350505050565b6103b982826040518060200160405280600081525061114a565b6001600160a01b038216610a3257604051630b61174360e31b81526001600160a01b038316600482015260240161048f565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b156104f357604051630a85bd0160e11b81526001600160a01b0384169063150b7a0290610ae1903390889087908790600401611916565b6020604051808303816000875af1925050508015610b1c575060408051601f3d908101601f19168201909252610b1991810190611953565b60015b610b85573d808015610b4a576040519150601f19603f3d011682016040523d82523d6000602084013e610b4f565b606091505b508051600003610b7d57604051633250574960e11b81526001600160a01b038516600482015260240161048f565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b14610bc157604051633250574960e11b81526001600160a01b038516600482015260240161048f565b5050505050565b60606000610bd583611161565b600101905060008167ffffffffffffffff811115610bf557610bf56114f7565b6040519080825280601f01601f191660200182016040528015610c1f576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610c2957509392505050565b60608151600003610c7a57505060408051602081019091526000815290565b60006040518060600160405280604081526020016119c56040913990506000600384516002610ca99190611970565b610cb39190611983565b610cbe906004611997565b67ffffffffffffffff811115610cd657610cd66114f7565b6040519080825280601f01601f191660200182016040528015610d00576020820181803683370190505b50905060018201602082018586518701602081018051600082525b82841015610d76576003840193508351603f8160121c168701518653600186019550603f81600c1c168701518653600186019550603f8160061c168701518653600186019550603f8116870151865350600185019450610d1b565b9052505085516003900660018114610d955760028114610da857610db0565b603d6001830353603d6002830353610db0565b603d60018303535b509195945050505050565b8080610dcf57506001600160a01b03821615155b15610e91576000610ddf846108cb565b90506001600160a01b03831615801590610e0b5750826001600160a01b0316816001600160a01b031614155b8015610e1e5750610e1c818461084d565b155b15610e475760405163a9fbf51f60e01b81526001600160a01b038416600482015260240161048f565b8115610e8f5783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5050600090815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b6000828152600260205260408120546001600160a01b0390811690831615610eee57610eee818486611239565b6001600160a01b03811615610f2c57610f0b600085600080610dbb565b6001600160a01b038116600090815260036020526040902080546000190190555b6001600160a01b03851615610f5b576001600160a01b0385166000908152600360205260409020805460010190555b60008481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b6000610fc5836106d0565b600083815260076020526040902054909150808214611018576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b60085460009061105d9060019061169b565b6000838152600960205260408120546008805493945090928490811061108557611085611656565b9060005260206000200154905080600883815481106110a6576110a6611656565b60009182526020808320909101929092558281526009909152604080822084905585825281205560088054806110de576110de6119ae565b6001900381819060005260206000200160009055905550505050565b60006001611107846106d0565b611111919061169b565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b611154838361129d565b6105796000848484610a9f565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106111a05772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef810000000083106111cc576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106111ea57662386f26fc10000830492506010015b6305f5e1008310611202576305f5e100830492506008015b612710831061121657612710830492506004015b60648310611228576064830492506002015b600a83106102ed5760010192915050565b611244838383611302565b610579576001600160a01b03831661127257604051637e27328960e01b81526004810182905260240161048f565b60405163177e802f60e01b81526001600160a01b03831660048201526024810182905260440161048f565b6001600160a01b0382166112c757604051633250574960e11b81526000600482015260240161048f565b60006112d583836000610911565b90506001600160a01b03811615610579576040516339e3563760e11b81526000600482015260240161048f565b60006001600160a01b038316158015906109de5750826001600160a01b0316846001600160a01b0316148061133c575061133c848461084d565b806109de5750506000908152600460205260409020546001600160a01b03908116911614919050565b6001600160e01b03198116811461137b57600080fd5b50565b60006020828403121561139057600080fd5b813561139b81611365565b9392505050565b60005b838110156113bd5781810151838201526020016113a5565b50506000910152565b600081518084526113de8160208601602086016113a2565b601f01601f19169290920160200192915050565b60208152600061139b60208301846113c6565b60006020828403121561141757600080fd5b5035919050565b80356001600160a01b038116811461143557600080fd5b919050565b6000806040838503121561144d57600080fd5b6114568361141e565b946020939093013593505050565b60008060006060848603121561147957600080fd5b6114828461141e565b92506114906020850161141e565b9150604084013590509250925092565b6000602082840312156114b257600080fd5b61139b8261141e565b600080604083850312156114ce57600080fd5b6114d78361141e565b9150602083013580151581146114ec57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561152357600080fd5b61152c8561141e565b935061153a6020860161141e565b925060408501359150606085013567ffffffffffffffff8082111561155e57600080fd5b818701915087601f83011261157257600080fd5b813581811115611584576115846114f7565b604051601f8201601f19908116603f011681019083821181831017156115ac576115ac6114f7565b816040528281528a60208487010111156115c557600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600080604083850312156115fc57600080fd5b6116058361141e565b91506116136020840161141e565b90509250929050565b600181811c9082168061163057607f821691505b60208210810361165057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016116945761169461166c565b5060010190565b818103818111156102ed576102ed61166c565b634e487b7160e01b600052601260045260246000fd5b6000826116d3576116d36116ae565b500690565b601f82111561057957600081815260208120601f850160051c810160208610156116ff5750805b601f850160051c820191505b8181101561171e5782815560010161170b565b505050505050565b818103611731575050565b61173b825461161c565b67ffffffffffffffff811115611753576117536114f7565b61176781611761845461161c565b846116d8565b6000601f82116001811461179b57600083156117835750848201545b600019600385901b1c1916600184901b178455610bc1565b600085815260209020601f19841690600086815260209020845b838110156117d557828601548255600195860195909101906020016117b5565b50858310156117f35781850154600019600388901b60f8161c191681555b5050505050600190811b01905550565b607b60f81b81526f226e616d65223a225345324e4654202360801b600182015282516000906118398160118501602088016113a2565b61088b60f21b6011918401918201527f226465736372697074696f6e223a2253636166666f6c642d45544820322073616013820152691b5c1b1948139195088b60b21b60338201526f22696d616765223a22697066733a2f2f60801b603d82015283516118ad81604d8401602088016113a2565b601160f91b604d9290910191820152607d60f81b604e820152604f01949350505050565b7f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c00000081526000825161190981601d8501602087016113a2565b91909101601d0192915050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611949908301846113c6565b9695505050505050565b60006020828403121561196557600080fd5b815161139b81611365565b808201808211156102ed576102ed61166c565b600082611992576119926116ae565b500490565b80820281158282048414176102ed576102ed61166c565b634e487b7160e01b600052603160045260246000fdfe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa2646970667358221220691a4f43e4b3939076223d8615d37902e37d791e61e50f9cde3ed0eef26e193a64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0xAD JUMPI DUP1 PUSH4 0x98BDF6F5 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x98BDF6F5 EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x2B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x691C65D4 EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0x6C8B703F EQ PUSH2 0x245 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x26B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x20C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0x1253C546 EQ PUSH2 0x1AE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x144 PUSH2 0x13F CALLDATASIZE PUSH1 0x4 PUSH2 0x137E JUMP JUMPDEST PUSH2 0x2C8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x161 PUSH2 0x2F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x150 SWAP2 SWAP1 PUSH2 0x13F2 JUMP JUMPDEST PUSH2 0x181 PUSH2 0x17C CALLDATASIZE PUSH1 0x4 PUSH2 0x1405 JUMP JUMPDEST PUSH2 0x385 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x150 JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x1A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x143A JUMP JUMPDEST PUSH2 0x3AE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x161 PUSH2 0x1BC CALLDATASIZE PUSH1 0x4 PUSH2 0x1405 JUMP JUMPDEST PUSH2 0x3BD JUMP JUMPDEST PUSH1 0x8 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x150 JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x1E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1464 JUMP JUMPDEST PUSH2 0x469 JUMP JUMPDEST PUSH2 0x1C5 PUSH2 0x1F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x143A JUMP JUMPDEST PUSH2 0x4F9 JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x207 CALLDATASIZE PUSH1 0x4 PUSH2 0x1464 JUMP JUMPDEST PUSH2 0x55E JUMP JUMPDEST PUSH2 0x1C5 PUSH2 0x21A CALLDATASIZE PUSH1 0x4 PUSH2 0x1405 JUMP JUMPDEST PUSH2 0x57E JUMP JUMPDEST PUSH2 0x181 PUSH2 0x22D CALLDATASIZE PUSH1 0x4 PUSH2 0x1405 JUMP JUMPDEST PUSH2 0x5D7 JUMP JUMPDEST PUSH2 0x1C5 PUSH2 0x240 CALLDATASIZE PUSH1 0x4 PUSH2 0x14A0 JUMP JUMPDEST PUSH2 0x5E2 JUMP JUMPDEST PUSH2 0x161 PUSH2 0x253 CALLDATASIZE PUSH1 0x4 PUSH2 0x1405 JUMP JUMPDEST PUSH2 0x6B7 JUMP JUMPDEST PUSH2 0x1C5 PUSH2 0x266 CALLDATASIZE PUSH1 0x4 PUSH2 0x14A0 JUMP JUMPDEST PUSH2 0x6D0 JUMP JUMPDEST PUSH2 0x161 PUSH2 0x718 JUMP JUMPDEST PUSH2 0x1C5 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x28A CALLDATASIZE PUSH1 0x4 PUSH2 0x14BB JUMP JUMPDEST PUSH2 0x727 JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x29D CALLDATASIZE PUSH1 0x4 PUSH2 0x150D JUMP JUMPDEST PUSH2 0x732 JUMP JUMPDEST PUSH2 0x161 PUSH2 0x2B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1405 JUMP JUMPDEST PUSH2 0x749 JUMP JUMPDEST PUSH2 0x144 PUSH2 0x2C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x15E9 JUMP JUMPDEST PUSH2 0x84D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x780E9D63 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x2ED JUMPI POP PUSH2 0x2ED DUP3 PUSH2 0x87B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x302 SWAP1 PUSH2 0x161C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x32E SWAP1 PUSH2 0x161C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x37B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x350 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x37B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x35E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x390 DUP3 PUSH2 0x8CB JUMP JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2ED JUMP JUMPDEST PUSH2 0x3B9 DUP3 DUP3 CALLER PUSH2 0x904 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xC DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x3CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 SLOAD PUSH2 0x3E8 SWAP1 PUSH2 0x161C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x414 SWAP1 PUSH2 0x161C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x461 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x436 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x461 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x444 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x498 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4A5 DUP4 DUP4 CALLER PUSH2 0x911 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x4F3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x64283D7B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x48F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x504 DUP4 PUSH2 0x6D0 JUMP JUMPDEST DUP3 LT PUSH2 0x535 JUMPI PUSH1 0x40 MLOAD PUSH4 0x295F44F7 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x48F JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x579 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x732 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x589 PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST DUP3 LT PUSH2 0x5B2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x295F44F7 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x48F JUMP JUMPDEST PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x5C5 JUMPI PUSH2 0x5C5 PUSH2 0x1656 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2ED DUP3 PUSH2 0x8CB JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0x0 SWAP2 DUP3 PUSH2 0x5F3 DUP4 PUSH2 0x1682 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x604 DUP3 PUSH1 0xA SLOAD PUSH2 0x9E6 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x0 SWAP1 PUSH2 0x615 PUSH1 0x1 NUMBER PUSH2 0x169B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP1 BLOCKHASH SWAP1 DUP3 ADD MSTORE PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT CALLER PUSH1 0x60 SWAP1 DUP2 SHL DUP3 AND DUP2 DUP5 ADD MSTORE ADDRESS SWAP1 SHL AND PUSH1 0x74 DUP3 ADD MSTORE PUSH1 0x88 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 PUSH1 0xC DUP1 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0x677 SWAP1 DUP4 PUSH2 0x16C4 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x687 JUMPI PUSH2 0x687 PUSH2 0x1656 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0xA SLOAD DUP5 MSTORE PUSH1 0xB SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 SWAP2 PUSH2 0x6AC SWAP2 ADD DUP3 PUSH2 0x1726 JUMP JUMPDEST POP POP PUSH1 0xA SLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x3E8 SWAP1 PUSH2 0x161C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6FC JUMPI PUSH1 0x40 MLOAD PUSH4 0x22718AD9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x48F JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x302 SWAP1 PUSH2 0x161C JUMP JUMPDEST PUSH2 0x3B9 CALLER DUP4 DUP4 PUSH2 0xA00 JUMP JUMPDEST PUSH2 0x73D DUP5 DUP5 DUP5 PUSH2 0x469 JUMP JUMPDEST PUSH2 0x4F3 DUP5 DUP5 DUP5 DUP5 PUSH2 0xA9F JUMP JUMPDEST PUSH1 0x60 PUSH2 0x754 DUP3 PUSH2 0x8CB JUMP JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0x76E SWAP1 PUSH2 0x161C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x79A SWAP1 PUSH2 0x161C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7E7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7BC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7E7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7CA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x7F9 DUP5 PUSH2 0xBC8 JUMP JUMPDEST DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x80B SWAP3 SWAP2 SWAP1 PUSH2 0x1803 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0x825 DUP2 PUSH2 0xC5B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x835 SWAP2 SWAP1 PUSH2 0x18D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x8AC JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x2ED JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x2ED JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x2ED JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x48F JUMP JUMPDEST PUSH2 0x579 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xDBB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x91F DUP6 DUP6 DUP6 PUSH2 0xEC1 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x97C JUMPI PUSH2 0x977 DUP5 PUSH1 0x8 DUP1 SLOAD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD DUP4 SSTORE SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 ADD SSTORE JUMP JUMPDEST PUSH2 0x99F JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x99F JUMPI PUSH2 0x99F DUP2 DUP6 PUSH2 0xFBA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x9BB JUMPI PUSH2 0x9B6 DUP5 PUSH2 0x104B JUMP JUMPDEST PUSH2 0x9DE JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x9DE JUMPI PUSH2 0x9DE DUP6 DUP6 PUSH2 0x10FA JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x3B9 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x114A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA32 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB611743 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x48F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0x4F3 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xAE1 SWAP1 CALLER SWAP1 DUP9 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x1916 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xB1C JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xB19 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1953 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xB85 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xB4A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB4F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xB7D JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x48F JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ PUSH2 0xBC1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x48F JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xBD5 DUP4 PUSH2 0x1161 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBF5 JUMPI PUSH2 0xBF5 PUSH2 0x14F7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xC1F JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0xC29 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD PUSH1 0x0 SUB PUSH2 0xC7A JUMPI POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x19C5 PUSH1 0x40 SWAP2 CODECOPY SWAP1 POP PUSH1 0x0 PUSH1 0x3 DUP5 MLOAD PUSH1 0x2 PUSH2 0xCA9 SWAP2 SWAP1 PUSH2 0x1970 JUMP JUMPDEST PUSH2 0xCB3 SWAP2 SWAP1 PUSH2 0x1983 JUMP JUMPDEST PUSH2 0xCBE SWAP1 PUSH1 0x4 PUSH2 0x1997 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCD6 JUMPI PUSH2 0xCD6 PUSH2 0x14F7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xD00 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x1 DUP3 ADD PUSH1 0x20 DUP3 ADD DUP6 DUP7 MLOAD DUP8 ADD PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x0 DUP3 MSTORE JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0xD76 JUMPI PUSH1 0x3 DUP5 ADD SWAP4 POP DUP4 MLOAD PUSH1 0x3F DUP2 PUSH1 0x12 SHR AND DUP8 ADD MLOAD DUP7 MSTORE8 PUSH1 0x1 DUP7 ADD SWAP6 POP PUSH1 0x3F DUP2 PUSH1 0xC SHR AND DUP8 ADD MLOAD DUP7 MSTORE8 PUSH1 0x1 DUP7 ADD SWAP6 POP PUSH1 0x3F DUP2 PUSH1 0x6 SHR AND DUP8 ADD MLOAD DUP7 MSTORE8 PUSH1 0x1 DUP7 ADD SWAP6 POP PUSH1 0x3F DUP2 AND DUP8 ADD MLOAD DUP7 MSTORE8 POP PUSH1 0x1 DUP6 ADD SWAP5 POP PUSH2 0xD1B JUMP JUMPDEST SWAP1 MSTORE POP POP DUP6 MLOAD PUSH1 0x3 SWAP1 MOD PUSH1 0x1 DUP2 EQ PUSH2 0xD95 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xDA8 JUMPI PUSH2 0xDB0 JUMP JUMPDEST PUSH1 0x3D PUSH1 0x1 DUP4 SUB MSTORE8 PUSH1 0x3D PUSH1 0x2 DUP4 SUB MSTORE8 PUSH2 0xDB0 JUMP JUMPDEST PUSH1 0x3D PUSH1 0x1 DUP4 SUB MSTORE8 JUMPDEST POP SWAP2 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0xDCF JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0xE91 JUMPI PUSH1 0x0 PUSH2 0xDDF DUP5 PUSH2 0x8CB JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xE0B JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xE1E JUMPI POP PUSH2 0xE1C DUP2 DUP5 PUSH2 0x84D JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xE47 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9FBF51F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x48F JUMP JUMPDEST DUP2 ISZERO PUSH2 0xE8F JUMPI DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND ISZERO PUSH2 0xEEE JUMPI PUSH2 0xEEE DUP2 DUP5 DUP7 PUSH2 0x1239 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xF2C JUMPI PUSH2 0xF0B PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH2 0xDBB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0xF5B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP8 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFC5 DUP4 PUSH2 0x6D0 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP1 DUP3 EQ PUSH2 0x1018 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD DUP5 DUP5 MSTORE DUP2 DUP5 KECCAK256 DUP2 SWAP1 SSTORE DUP4 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP2 SWAP1 SSTORE JUMPDEST POP PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP5 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP4 MSTORE PUSH1 0x6 DUP2 MSTORE DUP4 DUP4 KECCAK256 SWAP2 DUP4 MSTORE MSTORE SWAP1 DUP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x105D SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x169B JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x8 DUP1 SLOAD SWAP4 SWAP5 POP SWAP1 SWAP3 DUP5 SWAP1 DUP2 LT PUSH2 0x1085 JUMPI PUSH2 0x1085 PUSH2 0x1656 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x10A6 JUMPI PUSH2 0x10A6 PUSH2 0x1656 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 DUP2 MSTORE PUSH1 0x9 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP5 SWAP1 SSTORE DUP6 DUP3 MSTORE DUP2 KECCAK256 SSTORE PUSH1 0x8 DUP1 SLOAD DUP1 PUSH2 0x10DE JUMPI PUSH2 0x10DE PUSH2 0x19AE JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x1107 DUP5 PUSH2 0x6D0 JUMP JUMPDEST PUSH2 0x1111 SWAP2 SWAP1 PUSH2 0x169B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE SWAP4 DUP3 MSTORE PUSH1 0x7 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST PUSH2 0x1154 DUP4 DUP4 PUSH2 0x129D JUMP JUMPDEST PUSH2 0x579 PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0xA9F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0x11A0 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x11CC JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x11EA JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1202 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1216 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1228 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x2ED JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1244 DUP4 DUP4 DUP4 PUSH2 0x1302 JUMP JUMPDEST PUSH2 0x579 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1272 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x48F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x177E802F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x48F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x12C7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x48F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12D5 DUP4 DUP4 PUSH1 0x0 PUSH2 0x911 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x579 JUMPI PUSH1 0x40 MLOAD PUSH4 0x39E35637 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x48F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x9DE JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x133C JUMPI POP PUSH2 0x133C DUP5 DUP5 PUSH2 0x84D JUMP JUMPDEST DUP1 PUSH2 0x9DE JUMPI POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x137B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1390 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x139B DUP2 PUSH2 0x1365 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x13BD JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x13A5 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x13DE DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x13A2 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x139B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x13C6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1417 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1435 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x144D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1456 DUP4 PUSH2 0x141E JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1479 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1482 DUP5 PUSH2 0x141E JUMP JUMPDEST SWAP3 POP PUSH2 0x1490 PUSH1 0x20 DUP6 ADD PUSH2 0x141E JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139B DUP3 PUSH2 0x141E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14D7 DUP4 PUSH2 0x141E JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x14EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1523 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x152C DUP6 PUSH2 0x141E JUMP JUMPDEST SWAP4 POP PUSH2 0x153A PUSH1 0x20 DUP7 ADD PUSH2 0x141E JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x155E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1572 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1584 JUMPI PUSH2 0x1584 PUSH2 0x14F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x15AC JUMPI PUSH2 0x15AC PUSH2 0x14F7 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x15C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1605 DUP4 PUSH2 0x141E JUMP JUMPDEST SWAP2 POP PUSH2 0x1613 PUSH1 0x20 DUP5 ADD PUSH2 0x141E JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1630 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1650 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1694 JUMPI PUSH2 0x1694 PUSH2 0x166C JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x2ED JUMPI PUSH2 0x2ED PUSH2 0x166C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x16D3 JUMPI PUSH2 0x16D3 PUSH2 0x16AE JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x579 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x16FF JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x171E JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x170B JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 DUP2 SUB PUSH2 0x1731 JUMPI POP POP JUMP JUMPDEST PUSH2 0x173B DUP3 SLOAD PUSH2 0x161C JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1753 JUMPI PUSH2 0x1753 PUSH2 0x14F7 JUMP JUMPDEST PUSH2 0x1767 DUP2 PUSH2 0x1761 DUP5 SLOAD PUSH2 0x161C JUMP JUMPDEST DUP5 PUSH2 0x16D8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x179B JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0x1783 JUMPI POP DUP5 DUP3 ADD SLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0xBC1 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x1F NOT DUP5 AND SWAP1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP5 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x17D5 JUMPI DUP3 DUP7 ADD SLOAD DUP3 SSTORE PUSH1 0x1 SWAP6 DUP7 ADD SWAP6 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD PUSH2 0x17B5 JUMP JUMPDEST POP DUP6 DUP4 LT ISZERO PUSH2 0x17F3 JUMPI DUP2 DUP6 ADD SLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x7B PUSH1 0xF8 SHL DUP2 MSTORE PUSH16 0x226E616D65223A225345324E46542023 PUSH1 0x80 SHL PUSH1 0x1 DUP3 ADD MSTORE DUP3 MLOAD PUSH1 0x0 SWAP1 PUSH2 0x1839 DUP2 PUSH1 0x11 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x13A2 JUMP JUMPDEST PUSH2 0x88B PUSH1 0xF2 SHL PUSH1 0x11 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE PUSH32 0x226465736372697074696F6E223A2253636166666F6C642D4554482032207361 PUSH1 0x13 DUP3 ADD MSTORE PUSH10 0x1B5C1B1948139195088B PUSH1 0xB2 SHL PUSH1 0x33 DUP3 ADD MSTORE PUSH16 0x22696D616765223A22697066733A2F2F PUSH1 0x80 SHL PUSH1 0x3D DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x18AD DUP2 PUSH1 0x4D DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x13A2 JUMP JUMPDEST PUSH1 0x11 PUSH1 0xF9 SHL PUSH1 0x4D SWAP3 SWAP1 SWAP2 ADD SWAP2 DUP3 ADD MSTORE PUSH1 0x7D PUSH1 0xF8 SHL PUSH1 0x4E DUP3 ADD MSTORE PUSH1 0x4F ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x646174613A6170706C69636174696F6E2F6A736F6E3B6261736536342C000000 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x1909 DUP2 PUSH1 0x1D DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x13A2 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0x1D ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1949 SWAP1 DUP4 ADD DUP5 PUSH2 0x13C6 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1965 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x139B DUP2 PUSH2 0x1365 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2ED JUMPI PUSH2 0x2ED PUSH2 0x166C JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1992 JUMPI PUSH2 0x1992 PUSH2 0x16AE JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x2ED JUMPI PUSH2 0x2ED PUSH2 0x166C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID COINBASE TIMESTAMP NUMBER PREVRANDAO GASLIMIT CHAINID SELFBALANCE BASEFEE 0x49 0x4A 0x4B 0x4C 0x4D 0x4E 0x4F POP MLOAD MSTORE MSTORE8 SLOAD SSTORE JUMP JUMPI PC MSIZE GAS PUSH2 0x6263 PUSH5 0x6566676869 PUSH11 0x6B6C6D6E6F707172737475 PUSH23 0x7778797A303132333435363738392B2FA2646970667358 0x22 SLT KECCAK256 PUSH10 0x1A4F43E4B3939076223D DUP7 ISZERO 0xD3 PUSH26 0x2E37D791E61E50F9CDE3ED0EEF26E193A64736F6C6343000814 STOP CALLER ","sourceMap":"306:1612:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1435:222:5;;;;;;:::i;:::-;;:::i;:::-;;;565:14:18;;558:22;540:41;;528:2;513:18;1435:222:5;;;;;;;;2365:89:2;;;:::i;:::-;;;;;;;:::i;3497:154::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1697:32:18;;;1679:51;;1667:2;1652:18;3497:154:2;1533:203:18;3323:113:2;;;;;;:::i;:::-;;:::i;:::-;;440:232:17;;;;;;:::i;:::-;;:::i;2062:102:5:-;2140:10;:17;2062:102;;;2324:25:18;;;2312:2;2297:18;2062:102:5;2178:177:18;4143:578:2;;;;;;:::i;:::-;;:::i;1736:255:5:-;;;;;;:::i;:::-;;:::i;4787:132:2:-;;;;;;:::i;:::-;;:::i;2236:226:5:-;;;;;;:::i;:::-;;:::i;2185:118:2:-;;;;;;:::i;:::-;;:::i;856:403:17:-;;;;;;:::i;:::-;;:::i;383:51::-;;;;;;:::i;:::-;;:::i;1920:208:2:-;;;;;;:::i;:::-;;:::i;2518:93::-;;;:::i;348:29:17:-;;;;;;3718:144:2;;;;;;:::i;:::-;;:::i;4985:208::-;;;;;;:::i;:::-;;:::i;1265:651:17:-;;;;;;:::i;:::-;;:::i;3928:153:2:-;;;;;;:::i;:::-;;:::i;1435:222:5:-;1537:4;-1:-1:-1;;;;;;1560:50:5;;-1:-1:-1;;;1560:50:5;;:90;;;1614:36;1638:11;1614:23;:36::i;:::-;1553:97;1435:222;-1:-1:-1;;1435:222:5:o;2365:89:2:-;2410:13;2442:5;2435:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:89;:::o;3497:154::-;3564:7;3583:22;3597:7;3583:13;:22::i;:::-;-1:-1:-1;6008:7:2;6034:24;;;:15;:24;;;;;;-1:-1:-1;;;;;6034:24:2;3623:21;5938:127;3323:113;3394:35;3403:2;3407:7;735:10:9;3394:8:2;:35::i;:::-;3323:113;;:::o;440:232:17:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4143:578:2:-;-1:-1:-1;;;;;4237:16:2;;4233:87;;4276:33;;-1:-1:-1;;;4276:33:2;;4306:1;4276:33;;;1679:51:18;1652:18;;4276:33:2;;;;;;;;4233:87;4538:21;4562:34;4570:2;4574:7;735:10:9;4562:7:2;:34::i;:::-;4538:58;;4627:4;-1:-1:-1;;;;;4610:21:2;:13;-1:-1:-1;;;;;4610:21:2;;4606:109;;4654:50;;-1:-1:-1;;;4654:50:2;;-1:-1:-1;;;;;5419:15:18;;;4654:50:2;;;5401:34:18;5451:18;;;5444:34;;;5514:15;;5494:18;;;5487:43;5336:18;;4654:50:2;5161:375:18;4606:109:2;4223:498;4143:578;;;:::o;1736:255:5:-;1824:7;1856:16;1866:5;1856:9;:16::i;:::-;1847:5;:25;1843:99;;1895:36;;-1:-1:-1;;;1895:36:5;;-1:-1:-1;;;;;5733:32:18;;1895:36:5;;;5715:51:18;5782:18;;;5775:34;;;5688:18;;1895:36:5;5541:274:18;1843:99:5;-1:-1:-1;;;;;;1958:19:5;;;;;;;;:12;:19;;;;;;;;:26;;;;;;;;;1736:255::o;4787:132:2:-;4873:39;4890:4;4896:2;4900:7;4873:39;;;;;;;;;;;;:16;:39::i;:::-;4787:132;;;:::o;2236:226:5:-;2302:7;2334:13;2140:10;:17;;2062:102;2334:13;2325:5;:22;2321:101;;2370:41;;-1:-1:-1;;;2370:41:5;;2401:1;2370:41;;;5715:51:18;5782:18;;;5775:34;;;5688:18;;2370:41:5;5541:274:18;2321:101:5;2438:10;2449:5;2438:17;;;;;;;;:::i;:::-;;;;;;;;;2431:24;;2236:226;;;:::o;2185:118:2:-;2248:7;2274:22;2288:7;2274:13;:22::i;856:403:17:-;921:14;:16;;902:7;;;921:16;;;:::i;:::-;;;;;;947:29;957:2;961:14;;947:9;:29::i;:::-;1055:14;;987:25;;1081:16;1096:1;1081:12;:16;:::i;:::-;1038:88;;;;;;6570:19:18;;;;1071:27:17;;6605:12:18;;;6598:28;-1:-1:-1;;1100:10:17;6714:2:18;6710:15;;;6706:24;;6692:12;;;6685:46;1120:4:17;6765:15:18;;6761:24;6747:12;;;6740:46;6802:13;;1038:88:17;;;-1:-1:-1;;1038:88:17;;;;;;;;;1015:121;;1038:88;1015:121;;;;1175:4;1209:11;;1015:121;;-1:-1:-1;1175:4:17;1180:40;;1015:121;1180:40;:::i;:::-;1175:46;;;;;;;;:::i;:::-;;;;;;;;;1157:14;;1147:25;;:9;:25;;;;;;;;:74;;1175:46;1147:25;:74;:::i;:::-;-1:-1:-1;;1238:14:17;;;856:403;-1:-1:-1;;856:403:17:o;383:51::-;;;;;;;;;;;;;;;;:::i;1920:208:2:-;1983:7;-1:-1:-1;;;;;2006:19:2;;2002:87;;2048:30;;-1:-1:-1;;;2048:30:2;;2075:1;2048:30;;;1679:51:18;1652:18;;2048:30:2;1533:203:18;2002:87:2;-1:-1:-1;;;;;;2105:16:2;;;;;:9;:16;;;;;;;1920:208::o;2518:93::-;2565:13;2597:7;2590:14;;;;;:::i;3718:144::-;3803:52;735:10:9;3836:8:2;3846;3803:18;:52::i;4985:208::-;5098:31;5111:4;5117:2;5121:7;5098:12;:31::i;:::-;5139:47;5162:4;5168:2;5172:7;5181:4;5139:22;:47::i;1265:651:17:-;1330:13;1355:22;1369:7;1355:13;:22::i;:::-;-1:-1:-1;1387:22:17;1412:18;;;:9;:18;;;;;1387:43;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1441:17;1551:25;1568:7;1551:16;:25::i;:::-;1722:8;1461:318;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1441:338;;1879:19;1893:4;1879:13;:19::i;:::-;1804:104;;;;;;;;:::i;:::-;;;;;;;;;;;;;1790:119;;;;1265:651;;;:::o;3928:153:2:-;-1:-1:-1;;;;;4039:25:2;;;4016:4;4039:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;3928:153::o;1561:300::-;1663:4;-1:-1:-1;;;;;;1698:40:2;;-1:-1:-1;;;1698:40:2;;:104;;-1:-1:-1;;;;;;;1754:48:2;;-1:-1:-1;;;1754:48:2;1698:104;:156;;;-1:-1:-1;;;;;;;;;;861:40:12;;;1818:36:2;762:146:12;16138:241:2;16201:7;5799:16;;;:7;:16;;;;;;-1:-1:-1;;;;;5799:16:2;;16263:88;;16309:31;;-1:-1:-1;;;16309:31:2;;;;;2324:25:18;;;2297:18;;16309:31:2;2178:177:18;14418:120:2;14498:33;14507:2;14511:7;14520:4;14526;14498:8;:33::i;2518:625:5:-;2613:7;2632:21;2656:32;2670:2;2674:7;2683:4;2656:13;:32::i;:::-;2632:56;-1:-1:-1;;;;;;2703:27:5;;2699:210;;2746:40;2778:7;3949:10;:17;;3922:24;;;;:15;:24;;;;;:44;;;3976:24;;;;;;;;;;;;3846:161;2746:40;2699:210;;;2824:2;-1:-1:-1;;;;;2807:19:5;:13;-1:-1:-1;;;;;2807:19:5;;2803:106;;2842:56;2875:13;2890:7;2842:32;:56::i;:::-;-1:-1:-1;;;;;2922:16:5;;2918:188;;2954:45;2991:7;2954:36;:45::i;:::-;2918:188;;;3037:2;-1:-1:-1;;;;;3020:19:5;:13;-1:-1:-1;;;;;3020:19:5;;3016:90;;3055:40;3083:2;3087:7;3055:27;:40::i;:::-;3123:13;2518:625;-1:-1:-1;;;;2518:625:5:o;10633:100:2:-;10700:26;10710:2;10714:7;10700:26;;;;;;;;;;;;:9;:26::i;15591:312::-;-1:-1:-1;;;;;15698:22:2;;15694:91;;15743:31;;-1:-1:-1;;;15743:31:2;;-1:-1:-1;;;;;1697:32:18;;15743:31:2;;;1679:51:18;1652:18;;15743:31:2;1533:203:18;15694:91:2;-1:-1:-1;;;;;15794:25:2;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;15794:46:2;;;;;;;;;;15855:41;;540::18;;;15855::2;;513:18:18;15855:41:2;;;;;;;15591:312;;;:::o;16918:782::-;-1:-1:-1;;;;;17034:14:2;;;:18;17030:664;;17072:71;;-1:-1:-1;;;17072:71:2;;-1:-1:-1;;;;;17072:36:2;;;;;:71;;735:10:9;;17123:4:2;;17129:7;;17138:4;;17072:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17072:71:2;;;;;;;;-1:-1:-1;;17072:71:2;;;;;;;;;;;;:::i;:::-;;;17068:616;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17381:6;:13;17398:1;17381:18;17377:293;;17430:25;;-1:-1:-1;;;17430:25:2;;-1:-1:-1;;;;;1697:32:18;;17430:25:2;;;1679:51:18;1652:18;;17430:25:2;1533:203:18;17377:293:2;17622:6;17616:13;17607:6;17603:2;17599:15;17592:38;17068:616;-1:-1:-1;;;;;;17190:51:2;;-1:-1:-1;;;17190:51:2;17186:130;;17272:25;;-1:-1:-1;;;17272:25:2;;-1:-1:-1;;;;;1697:32:18;;17272:25:2;;;1679:51:18;1652:18;;17272:25:2;1533:203:18;17186:130:2;17144:186;16918:782;;;;:::o;637:698:11:-;693:13;742:14;759:17;770:5;759:10;:17::i;:::-;779:1;759:21;742:38;;794:20;828:6;817:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:18:11;-1:-1:-1;794:41:11;-1:-1:-1;955:28:11;;;971:2;955:28;1010:282;-1:-1:-1;;1041:5:11;-1:-1:-1;;;1175:2:11;1164:14;;1159:32;1041:5;1146:46;1236:2;1227:11;;;-1:-1:-1;1256:21:11;1010:282;1256:21;-1:-1:-1;1312:6:11;637:698;-1:-1:-1;;;637:698:11:o;476:3382:8:-;534:13;766:4;:11;781:1;766:16;762:31;;-1:-1:-1;;784:9:8;;;;;;;;;-1:-1:-1;784:9:8;;;476:3382::o;762:31::-;843:19;865:6;;;;;;;;;;;;;;;;;843:28;;1274:20;1333:1;1314:4;:11;1328:1;1314:15;;;;:::i;:::-;1313:21;;;;:::i;:::-;1308:27;;:1;:27;:::i;:::-;1297:39;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1297:39:8;;1274:62;;1511:1;1504:5;1500:13;1612:4;1604:6;1600:17;1645:4;1692;1686:11;1680:4;1676:22;1940:4;1932:6;1928:17;1982:8;1976:15;2021:4;2011:8;2004:22;2093:1259;2126:6;2117:7;2114:19;2093:1259;;;2228:1;2219:7;2215:15;2204:26;;2266:7;2260:14;2853:4;2845:5;2841:2;2837:14;2833:25;2823:8;2819:40;2813:47;2802:9;2794:67;2906:1;2895:9;2891:17;2878:30;;2996:4;2988:5;2984:2;2980:14;2976:25;2966:8;2962:40;2956:47;2945:9;2937:67;3049:1;3038:9;3034:17;3021:30;;3138:4;3130:5;3127:1;3123:13;3119:24;3109:8;3105:39;3099:46;3088:9;3080:66;3191:1;3180:9;3176:17;3163:30;;3272:4;3265:5;3261:16;3251:8;3247:31;3241:38;3230:9;3222:58;;3325:1;3314:9;3310:17;3297:30;;2093:1259;;;3413:28;;-1:-1:-1;;3586:11:8;;3599:1;3582:19;;3619:1;3614:120;;;;3752:1;3747:71;;;;3575:243;;3614:120;3666:4;3662:1;3651:9;3647:17;3639:32;3715:4;3711:1;3700:9;3696:17;3688:32;3614:120;;3747:71;3799:4;3795:1;3784:9;3780:17;3772:32;3575:243;-1:-1:-1;3845:6:8;;476:3382;-1:-1:-1;;;;;476:3382:8:o;14720:662:2:-;14880:9;:31;;;-1:-1:-1;;;;;;14893:18:2;;;;14880:31;14876:460;;;14927:13;14943:22;14957:7;14943:13;:22::i;:::-;14927:38;-1:-1:-1;;;;;;15093:18:2;;;;;;:35;;;15124:4;-1:-1:-1;;;;;15115:13:2;:5;-1:-1:-1;;;;;15115:13:2;;;15093:35;:69;;;;;15133:29;15150:5;15157:4;15133:16;:29::i;:::-;15132:30;15093:69;15089:142;;;15189:27;;-1:-1:-1;;;15189:27:2;;-1:-1:-1;;;;;1697:32:18;;15189:27:2;;;1679:51:18;1652:18;;15189:27:2;1533:203:18;15089:142:2;15249:9;15245:81;;;15303:7;15299:2;-1:-1:-1;;;;;15283:28:2;15292:5;-1:-1:-1;;;;;15283:28:2;;;;;;;;;;;15245:81;14913:423;14876:460;-1:-1:-1;;15346:24:2;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;15346:29:2;-1:-1:-1;;;;;15346:29:2;;;;;;;;;;14720:662::o;8838:795::-;8924:7;5799:16;;;:7;:16;;;;;;-1:-1:-1;;;;;5799:16:2;;;;9035:18;;;9031:86;;9069:37;9086:4;9092;9098:7;9069:16;:37::i;:::-;-1:-1:-1;;;;;9161:18:2;;;9157:256;;9277:48;9294:1;9298:7;9315:1;9319:5;9277:8;:48::i;:::-;-1:-1:-1;;;;;9368:15:2;;;;;;:9;:15;;;;;:20;;-1:-1:-1;;9368:20:2;;;9157:256;-1:-1:-1;;;;;9427:16:2;;;9423:107;;-1:-1:-1;;;;;9487:13:2;;;;;;:9;:13;;;;;:18;;9504:1;9487:18;;;9423:107;9540:16;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9540:21:2;-1:-1:-1;;;;;9540:21:2;;;;;;;;;9577:27;;9540:16;;9577:27;;;;;;;9622:4;8838:795;-1:-1:-1;;;;8838:795:2:o;4624:959:5:-;4886:22;4911:15;4921:4;4911:9;:15::i;:::-;4936:18;4957:26;;;:17;:26;;;;;;4886:40;;-1:-1:-1;5087:28:5;;;5083:323;;-1:-1:-1;;;;;5153:18:5;;5131:19;5153:18;;;:12;:18;;;;;;;;:34;;;;;;;;;5202:30;;;;;;:44;;;5318:30;;:17;:30;;;;;:43;;;5083:323;-1:-1:-1;5499:26:5;;;;:17;:26;;;;;;;;5492:33;;;-1:-1:-1;;;;;5542:18:5;;;;;:12;:18;;;;;:34;;;;;;;5535:41;4624:959::o;5871:1061::-;6145:10;:17;6120:22;;6145:21;;6165:1;;6145:21;:::i;:::-;6176:18;6197:24;;;:15;:24;;;;;;6565:10;:26;;6120:46;;-1:-1:-1;6197:24:5;;6120:46;;6565:26;;;;;;:::i;:::-;;;;;;;;;6543:48;;6627:11;6602:10;6613;6602:22;;;;;;;;:::i;:::-;;;;;;;;;;;;:36;;;;6706:28;;;:15;:28;;;;;;;:41;;;6875:24;;;;;6868:31;6909:10;:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;5942:990;;;5871:1061;:::o;3437:214::-;3521:14;3554:1;3538:13;3548:2;3538:9;:13::i;:::-;:17;;;;:::i;:::-;-1:-1:-1;;;;;3565:16:5;;;;;;;:12;:16;;;;;;;;:24;;;;;;;;:34;;;3609:26;;;:17;:26;;;;;;:35;;;;-1:-1:-1;3437:214:5:o;10954:182:2:-;11048:18;11054:2;11058:7;11048:5;:18::i;:::-;11076:53;11107:1;11111:2;11115:7;11124:4;11076:22;:53::i;12214:916:14:-;12267:7;;-1:-1:-1;;;12342:17:14;;12338:103;;-1:-1:-1;;;12379:17:14;;;-1:-1:-1;12424:2:14;12414:12;12338:103;12467:8;12458:5;:17;12454:103;;12504:8;12495:17;;;-1:-1:-1;12540:2:14;12530:12;12454:103;12583:8;12574:5;:17;12570:103;;12620:8;12611:17;;;-1:-1:-1;12656:2:14;12646:12;12570:103;12699:7;12690:5;:16;12686:100;;12735:7;12726:16;;;-1:-1:-1;12770:1:14;12760:11;12686:100;12812:7;12803:5;:16;12799:100;;12848:7;12839:16;;;-1:-1:-1;12883:1:14;12873:11;12799:100;12925:7;12916:5;:16;12912:100;;12961:7;12952:16;;;-1:-1:-1;12996:1:14;12986:11;12912:100;13038:7;13029:5;:16;13025:66;;13075:1;13065:11;13117:6;12214:916;-1:-1:-1;;12214:916:14:o;7082:368:2:-;7194:38;7208:5;7215:7;7224;7194:13;:38::i;:::-;7189:255;;-1:-1:-1;;;;;7252:19:2;;7248:186;;7298:31;;-1:-1:-1;;;7298:31:2;;;;;2324:25:18;;;2297:18;;7298:31:2;2178:177:18;7248:186:2;7375:44;;-1:-1:-1;;;7375:44:2;;-1:-1:-1;;;;;5733:32:18;;7375:44:2;;;5715:51:18;5782:18;;;5775:34;;;5688:18;;7375:44:2;5541:274:18;9955:327:2;-1:-1:-1;;;;;10022:16:2;;10018:87;;10061:33;;-1:-1:-1;;;10061:33:2;;10091:1;10061:33;;;1679:51:18;1652:18;;10061:33:2;1533:203:18;10018:87:2;10114:21;10138:32;10146:2;10150:7;10167:1;10138:7;:32::i;:::-;10114:56;-1:-1:-1;;;;;;10184:27:2;;;10180:96;;10234:31;;-1:-1:-1;;;10234:31:2;;10262:1;10234:31;;;1679:51:18;1652:18;;10234:31:2;1533:203:18;6376:272:2;6479:4;-1:-1:-1;;;;;6514:21:2;;;;;;:127;;;6561:7;-1:-1:-1;;;;;6552:16:2;:5;-1:-1:-1;;;;;6552:16:2;;:52;;;;6572:32;6589:5;6596:7;6572:16;:32::i;:::-;6552:88;;;-1:-1:-1;;6008:7:2;6034:24;;;:15;:24;;;;;;-1:-1:-1;;;;;6034:24:2;;;6608:32;;;;6495:146;-1:-1:-1;6376:272:2:o;14:131:18:-;-1:-1:-1;;;;;;88:32:18;;78:43;;68:71;;135:1;132;125:12;68:71;14:131;:::o;150:245::-;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;:::-;384:5;150:245;-1:-1:-1;;;150:245:18:o;592:250::-;677:1;687:113;701:6;698:1;695:13;687:113;;;777:11;;;771:18;758:11;;;751:39;723:2;716:10;687:113;;;-1:-1:-1;;834:1:18;816:16;;809:27;592:250::o;847:271::-;889:3;927:5;921:12;954:6;949:3;942:19;970:76;1039:6;1032:4;1027:3;1023:14;1016:4;1009:5;1005:16;970:76;:::i;:::-;1100:2;1079:15;-1:-1:-1;;1075:29:18;1066:39;;;;1107:4;1062:50;;847:271;-1:-1:-1;;847:271:18:o;1123:220::-;1272:2;1261:9;1254:21;1235:4;1292:45;1333:2;1322:9;1318:18;1310:6;1292:45;:::i;1348:180::-;1407:6;1460:2;1448:9;1439:7;1435:23;1431:32;1428:52;;;1476:1;1473;1466:12;1428:52;-1:-1:-1;1499:23:18;;1348:180;-1:-1:-1;1348:180:18:o;1741:173::-;1809:20;;-1:-1:-1;;;;;1858:31:18;;1848:42;;1838:70;;1904:1;1901;1894:12;1838:70;1741:173;;;:::o;1919:254::-;1987:6;1995;2048:2;2036:9;2027:7;2023:23;2019:32;2016:52;;;2064:1;2061;2054:12;2016:52;2087:29;2106:9;2087:29;:::i;:::-;2077:39;2163:2;2148:18;;;;2135:32;;-1:-1:-1;;;1919:254:18:o;2360:328::-;2437:6;2445;2453;2506:2;2494:9;2485:7;2481:23;2477:32;2474:52;;;2522:1;2519;2512:12;2474:52;2545:29;2564:9;2545:29;:::i;:::-;2535:39;;2593:38;2627:2;2616:9;2612:18;2593:38;:::i;:::-;2583:48;;2678:2;2667:9;2663:18;2650:32;2640:42;;2360:328;;;;;:::o;2693:186::-;2752:6;2805:2;2793:9;2784:7;2780:23;2776:32;2773:52;;;2821:1;2818;2811:12;2773:52;2844:29;2863:9;2844:29;:::i;2884:347::-;2949:6;2957;3010:2;2998:9;2989:7;2985:23;2981:32;2978:52;;;3026:1;3023;3016:12;2978:52;3049:29;3068:9;3049:29;:::i;:::-;3039:39;;3128:2;3117:9;3113:18;3100:32;3175:5;3168:13;3161:21;3154:5;3151:32;3141:60;;3197:1;3194;3187:12;3141:60;3220:5;3210:15;;;2884:347;;;;;:::o;3236:127::-;3297:10;3292:3;3288:20;3285:1;3278:31;3328:4;3325:1;3318:15;3352:4;3349:1;3342:15;3368:1138;3463:6;3471;3479;3487;3540:3;3528:9;3519:7;3515:23;3511:33;3508:53;;;3557:1;3554;3547:12;3508:53;3580:29;3599:9;3580:29;:::i;:::-;3570:39;;3628:38;3662:2;3651:9;3647:18;3628:38;:::i;:::-;3618:48;;3713:2;3702:9;3698:18;3685:32;3675:42;;3768:2;3757:9;3753:18;3740:32;3791:18;3832:2;3824:6;3821:14;3818:34;;;3848:1;3845;3838:12;3818:34;3886:6;3875:9;3871:22;3861:32;;3931:7;3924:4;3920:2;3916:13;3912:27;3902:55;;3953:1;3950;3943:12;3902:55;3989:2;3976:16;4011:2;4007;4004:10;4001:36;;;4017:18;;:::i;:::-;4092:2;4086:9;4060:2;4146:13;;-1:-1:-1;;4142:22:18;;;4166:2;4138:31;4134:40;4122:53;;;4190:18;;;4210:22;;;4187:46;4184:72;;;4236:18;;:::i;:::-;4276:10;4272:2;4265:22;4311:2;4303:6;4296:18;4351:7;4346:2;4341;4337;4333:11;4329:20;4326:33;4323:53;;;4372:1;4369;4362:12;4323:53;4428:2;4423;4419;4415:11;4410:2;4402:6;4398:15;4385:46;4473:1;4468:2;4463;4455:6;4451:15;4447:24;4440:35;4494:6;4484:16;;;;;;;3368:1138;;;;;;;:::o;4511:260::-;4579:6;4587;4640:2;4628:9;4619:7;4615:23;4611:32;4608:52;;;4656:1;4653;4646:12;4608:52;4679:29;4698:9;4679:29;:::i;:::-;4669:39;;4727:38;4761:2;4750:9;4746:18;4727:38;:::i;:::-;4717:48;;4511:260;;;;;:::o;4776:380::-;4855:1;4851:12;;;;4898;;;4919:61;;4973:4;4965:6;4961:17;4951:27;;4919:61;5026:2;5018:6;5015:14;4995:18;4992:38;4989:161;;5072:10;5067:3;5063:20;5060:1;5053:31;5107:4;5104:1;5097:15;5135:4;5132:1;5125:15;4989:161;;4776:380;;;:::o;5820:127::-;5881:10;5876:3;5872:20;5869:1;5862:31;5912:4;5909:1;5902:15;5936:4;5933:1;5926:15;5952:127;6013:10;6008:3;6004:20;6001:1;5994:31;6044:4;6041:1;6034:15;6068:4;6065:1;6058:15;6084:135;6123:3;6144:17;;;6141:43;;6164:18;;:::i;:::-;-1:-1:-1;6211:1:18;6200:13;;6084:135::o;6224:128::-;6291:9;;;6312:11;;;6309:37;;;6326:18;;:::i;6826:127::-;6887:10;6882:3;6878:20;6875:1;6868:31;6918:4;6915:1;6908:15;6942:4;6939:1;6932:15;6958:112;6990:1;7016;7006:35;;7021:18;;:::i;:::-;-1:-1:-1;7055:9:18;;6958:112::o;7201:545::-;7303:2;7298:3;7295:11;7292:448;;;7339:1;7364:5;7360:2;7353:17;7409:4;7405:2;7395:19;7479:2;7467:10;7463:19;7460:1;7456:27;7450:4;7446:38;7515:4;7503:10;7500:20;7497:47;;;-1:-1:-1;7538:4:18;7497:47;7593:2;7588:3;7584:12;7581:1;7577:20;7571:4;7567:31;7557:41;;7648:82;7666:2;7659:5;7656:13;7648:82;;;7711:17;;;7692:1;7681:13;7648:82;;;7652:3;;;7201:545;;;:::o;7922:1435::-;8041:3;8035:4;8032:13;8029:26;;8048:5;;7922:1435::o;8029:26::-;8078:37;8110:3;8104:10;8078:37;:::i;:::-;8138:18;8130:6;8127:30;8124:56;;;8160:18;;:::i;:::-;8189:97;8279:6;8239:38;8271:4;8265:11;8239:38;:::i;:::-;8233:4;8189:97;:::i;:::-;8312:1;8340:2;8332:6;8329:14;8357:1;8352:748;;;;9144:1;9161:6;9158:89;;;-1:-1:-1;9213:19:18;;;9207:26;9158:89;-1:-1:-1;;7879:1:18;7875:11;;;7871:24;7867:29;7857:40;7903:1;7899:11;;;7854:57;9260:81;;8322:1029;;8352:748;7148:1;7141:14;;;7185:4;7172:18;;-1:-1:-1;;8388:20:18;;;7148:1;7141:14;;;7185:4;7172:18;;8552:9;8574:251;8588:7;8585:1;8582:14;8574:251;;;8670:21;;;8664:28;8649:44;;8720:1;8793:18;;;;8748:15;;;;8611:4;8604:12;8574:251;;;8578:3;8853:6;8844:7;8841:19;8838:203;;;8914:21;;;8908:28;-1:-1:-1;;8999:1:18;8995:14;;;9011:3;8991:24;8987:37;8983:42;8968:58;8953:74;;8838:203;-1:-1:-1;;;;;9087:1:18;9071:14;;;9067:22;9054:36;;-1:-1:-1;7922:1435:18:o;9362:1692::-;-1:-1:-1;;;10266:16:18;;-1:-1:-1;;;10307:1:18;10298:11;;10291:65;10379:13;;-1:-1:-1;;10401:75:18;10379:13;10464:2;10455:12;;10448:4;10436:17;;10401:75;:::i;:::-;-1:-1:-1;;;10535:2:18;10495:16;;;10527:11;;;10520:35;10584:66;10579:2;10571:11;;10564:87;-1:-1:-1;;;10675:2:18;10667:11;;10660:53;-1:-1:-1;;;10737:2:18;10729:11;;10722:65;10812:13;;10834:76;10812:13;10896:2;10888:11;;10881:4;10869:17;;10834:76;:::i;:::-;-1:-1:-1;;;10970:2:18;10929:17;;;;10962:11;;;10955:33;-1:-1:-1;;;11012:2:18;11004:11;;10997:24;11045:2;11037:11;;9362:1692;-1:-1:-1;;;;9362:1692:18:o;11059:461::-;11321:31;11316:3;11309:44;11291:3;11382:6;11376:13;11398:75;11466:6;11461:2;11456:3;11452:12;11445:4;11437:6;11433:17;11398:75;:::i;:::-;11493:16;;;;11511:2;11489:25;;11059:461;-1:-1:-1;;11059:461:18:o;11525:489::-;-1:-1:-1;;;;;11794:15:18;;;11776:34;;11846:15;;11841:2;11826:18;;11819:43;11893:2;11878:18;;11871:34;;;11941:3;11936:2;11921:18;;11914:31;;;11719:4;;11962:46;;11988:19;;11980:6;11962:46;:::i;:::-;11954:54;11525:489;-1:-1:-1;;;;;;11525:489:18:o;12019:249::-;12088:6;12141:2;12129:9;12120:7;12116:23;12112:32;12109:52;;;12157:1;12154;12147:12;12109:52;12189:9;12183:16;12208:30;12232:5;12208:30;:::i;12273:125::-;12338:9;;;12359:10;;;12356:36;;;12372:18;;:::i;12403:120::-;12443:1;12469;12459:35;;12474:18;;:::i;:::-;-1:-1:-1;12508:9:18;;12403:120::o;12528:168::-;12601:9;;;12632;;12649:15;;;12643:22;;12629:37;12619:71;;12670:18;;:::i;12701:127::-;12762:10;12757:3;12753:20;12750:1;12743:31;12793:4;12790:1;12783:15;12817:4;12814:1;12807:15"},"gasEstimates":{"creation":{"codeDepositCost":"1342800","executionCost":"infinite","totalCost":"infinite"},"external":{"approve(address,uint256)":"31537","balanceOf(address)":"2678","getApproved(uint256)":"infinite","isApprovedForAll(address,address)":"infinite","mintItem(address)":"infinite","name()":"infinite","ownerOf(uint256)":"infinite","safeTransferFrom(address,address,uint256)":"infinite","safeTransferFrom(address,address,uint256,bytes)":"infinite","setApprovalForAll(address,bool)":"26703","supportsInterface(bytes4)":"infinite","symbol()":"infinite","tokenByIndex(uint256)":"6826","tokenIdCounter()":"2317","tokenOfOwnerByIndex(address,uint256)":"4997","tokenURI(uint256)":"infinite","tokenURIs(uint256)":"infinite","totalSupply()":"2304","transferFrom(address,address,uint256)":"infinite","uris(uint256)":"infinite"},"internal":{"_baseURI()":"infinite"}},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","mintItem(address)":"691c65d4","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenByIndex(uint256)":"4f6ccce7","tokenIdCounter()":"98bdf6f5","tokenOfOwnerByIndex(address,uint256)":"2f745c59","tokenURI(uint256)":"c87b56dd","tokenURIs(uint256)":"6c8b703f","totalSupply()":"18160ddd","transferFrom(address,address,uint256)":"23b872dd","uris(uint256)":"1253c546"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ERC721EnumerableForbiddenBatchMint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"ERC721OutOfBoundsIndex\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mintItem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenIdCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURIs\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uris\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721EnumerableForbiddenBatchMint()\":[{\"details\":\"Batch mint is not allowed.\"}],\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721OutOfBoundsIndex(address,uint256)\":[{\"details\":\"An `owner`'s token query was out of bounds for `index`. NOTE: The owner being `address(0)` indicates a global out of bounds index.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SE2NFT.sol\":\"SE2NFT\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC721} from \\\"./IERC721.sol\\\";\\nimport {IERC721Receiver} from \\\"./IERC721Receiver.sol\\\";\\nimport {IERC721Metadata} from \\\"./extensions/IERC721Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {Strings} from \\\"../../utils/Strings.sol\\\";\\nimport {IERC165, ERC165} from \\\"../../utils/introspection/ERC165.sol\\\";\\nimport {IERC721Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    mapping(uint256 tokenId => address) private _owners;\\n\\n    mapping(address owner => uint256) private _balances;\\n\\n    mapping(uint256 tokenId => address) private _tokenApprovals;\\n\\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual returns (uint256) {\\n        if (owner == address(0)) {\\n            revert ERC721InvalidOwner(address(0));\\n        }\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\\n        return _requireOwned(tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\\n        _requireOwned(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual {\\n        _approve(to, tokenId, _msgSender());\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\\n        _requireOwned(tokenId);\\n\\n        return _getApproved(tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\\n        if (to == address(0)) {\\n            revert ERC721InvalidReceiver(address(0));\\n        }\\n        // Setting an \\\"auth\\\" arguments enables the `_isAuthorized` check which verifies that the token exists\\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\\n        address previousOwner = _update(to, tokenId, _msgSender());\\n        if (previousOwner != from) {\\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\\n        }\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\\n        transferFrom(from, to, tokenId);\\n        _checkOnERC721Received(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\\n     *\\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\\n     */\\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\\n        return _owners[tokenId];\\n    }\\n\\n    /**\\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\\n     */\\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\\n     * particular (ignoring whether it is owned by `owner`).\\n     *\\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\\n     * assumption.\\n     */\\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        return\\n            spender != address(0) &&\\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\\n     * the `spender` for the specific `tokenId`.\\n     *\\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\\n     * assumption.\\n     */\\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\\n        if (!_isAuthorized(owner, spender, tokenId)) {\\n            if (owner == address(0)) {\\n                revert ERC721NonexistentToken(tokenId);\\n            } else {\\n                revert ERC721InsufficientApproval(spender, tokenId);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Unsafe write access to the balances, used by extensions that \\\"mint\\\" tokens using an {ownerOf} override.\\n     *\\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\\n     *\\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\\n     * remain consistent with one another.\\n     */\\n    function _increaseBalance(address account, uint128 value) internal virtual {\\n        unchecked {\\n            _balances[account] += value;\\n        }\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\\n     *\\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\\n     */\\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\\n        address from = _ownerOf(tokenId);\\n\\n        // Perform (optional) operator check\\n        if (auth != address(0)) {\\n            _checkAuthorized(from, auth, tokenId);\\n        }\\n\\n        // Execute the update\\n        if (from != address(0)) {\\n            // Clear approval. No need to re-authorize or emit the Approval event\\n            _approve(address(0), tokenId, address(0), false);\\n\\n            unchecked {\\n                _balances[from] -= 1;\\n            }\\n        }\\n\\n        if (to != address(0)) {\\n            unchecked {\\n                _balances[to] += 1;\\n            }\\n        }\\n\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        return from;\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal {\\n        if (to == address(0)) {\\n            revert ERC721InvalidReceiver(address(0));\\n        }\\n        address previousOwner = _update(to, tokenId, address(0));\\n        if (previousOwner != address(0)) {\\n            revert ERC721InvalidSender(address(0));\\n        }\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\\n        _mint(to, tokenId);\\n        _checkOnERC721Received(address(0), to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal {\\n        address previousOwner = _update(address(0), tokenId, address(0));\\n        if (previousOwner == address(0)) {\\n            revert ERC721NonexistentToken(tokenId);\\n        }\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(address from, address to, uint256 tokenId) internal {\\n        if (to == address(0)) {\\n            revert ERC721InvalidReceiver(address(0));\\n        }\\n        address previousOwner = _update(to, tokenId, address(0));\\n        if (previousOwner == address(0)) {\\n            revert ERC721NonexistentToken(tokenId);\\n        } else if (previousOwner != from) {\\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\\n        }\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - `to` cannot be the zero address.\\n     * - `from` cannot be the zero address.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\\n        _safeTransfer(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\\n        _transfer(from, to, tokenId);\\n        _checkOnERC721Received(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address to, uint256 tokenId, address auth) internal {\\n        _approve(to, tokenId, auth, true);\\n    }\\n\\n    /**\\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\\n     * emitted in the context of transfers.\\n     */\\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\\n        // Avoid reading the owner unless necessary\\n        if (emitEvent || auth != address(0)) {\\n            address owner = _requireOwned(tokenId);\\n\\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\\n                revert ERC721InvalidApprover(auth);\\n            }\\n\\n            if (emitEvent) {\\n                emit Approval(owner, to, tokenId);\\n            }\\n        }\\n\\n        _tokenApprovals[tokenId] = to;\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Requirements:\\n     * - operator can't be the address zero.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\\n        if (operator == address(0)) {\\n            revert ERC721InvalidOperator(operator);\\n        }\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\\n     * Returns the owner.\\n     *\\n     * Overrides to ownership logic should be done to {_ownerOf}.\\n     */\\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\\n        address owner = _ownerOf(tokenId);\\n        if (owner == address(0)) {\\n            revert ERC721NonexistentToken(tokenId);\\n        }\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     */\\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\\n        if (to.code.length > 0) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                if (retval != IERC721Receiver.onERC721Received.selector) {\\n                    revert ERC721InvalidReceiver(to);\\n                }\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert ERC721InvalidReceiver(to);\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\\n     *   {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the address zero.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\\n     * reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/ERC721Enumerable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ERC721} from \\\"../ERC721.sol\\\";\\nimport {IERC721Enumerable} from \\\"./IERC721Enumerable.sol\\\";\\nimport {IERC165} from \\\"../../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev This implements an optional extension of {ERC721} defined in the EIP that adds enumerability\\n * of all the token ids in the contract as well as all token ids owned by each account.\\n *\\n * CAUTION: `ERC721` extensions that implement custom `balanceOf` logic, such as `ERC721Consecutive`,\\n * interfere with enumerability and should not be used together with `ERC721Enumerable`.\\n */\\nabstract contract ERC721Enumerable is ERC721, IERC721Enumerable {\\n    mapping(address owner => mapping(uint256 index => uint256)) private _ownedTokens;\\n    mapping(uint256 tokenId => uint256) private _ownedTokensIndex;\\n\\n    uint256[] private _allTokens;\\n    mapping(uint256 tokenId => uint256) private _allTokensIndex;\\n\\n    /**\\n     * @dev An `owner`'s token query was out of bounds for `index`.\\n     *\\n     * NOTE: The owner being `address(0)` indicates a global out of bounds index.\\n     */\\n    error ERC721OutOfBoundsIndex(address owner, uint256 index);\\n\\n    /**\\n     * @dev Batch mint is not allowed.\\n     */\\n    error ERC721EnumerableForbiddenBatchMint();\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC721) returns (bool) {\\n        return interfaceId == type(IERC721Enumerable).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721Enumerable-tokenOfOwnerByIndex}.\\n     */\\n    function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual returns (uint256) {\\n        if (index >= balanceOf(owner)) {\\n            revert ERC721OutOfBoundsIndex(owner, index);\\n        }\\n        return _ownedTokens[owner][index];\\n    }\\n\\n    /**\\n     * @dev See {IERC721Enumerable-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _allTokens.length;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Enumerable-tokenByIndex}.\\n     */\\n    function tokenByIndex(uint256 index) public view virtual returns (uint256) {\\n        if (index >= totalSupply()) {\\n            revert ERC721OutOfBoundsIndex(address(0), index);\\n        }\\n        return _allTokens[index];\\n    }\\n\\n    /**\\n     * @dev See {ERC721-_update}.\\n     */\\n    function _update(address to, uint256 tokenId, address auth) internal virtual override returns (address) {\\n        address previousOwner = super._update(to, tokenId, auth);\\n\\n        if (previousOwner == address(0)) {\\n            _addTokenToAllTokensEnumeration(tokenId);\\n        } else if (previousOwner != to) {\\n            _removeTokenFromOwnerEnumeration(previousOwner, tokenId);\\n        }\\n        if (to == address(0)) {\\n            _removeTokenFromAllTokensEnumeration(tokenId);\\n        } else if (previousOwner != to) {\\n            _addTokenToOwnerEnumeration(to, tokenId);\\n        }\\n\\n        return previousOwner;\\n    }\\n\\n    /**\\n     * @dev Private function to add a token to this extension's ownership-tracking data structures.\\n     * @param to address representing the new owner of the given token ID\\n     * @param tokenId uint256 ID of the token to be added to the tokens list of the given address\\n     */\\n    function _addTokenToOwnerEnumeration(address to, uint256 tokenId) private {\\n        uint256 length = balanceOf(to) - 1;\\n        _ownedTokens[to][length] = tokenId;\\n        _ownedTokensIndex[tokenId] = length;\\n    }\\n\\n    /**\\n     * @dev Private function to add a token to this extension's token tracking data structures.\\n     * @param tokenId uint256 ID of the token to be added to the tokens list\\n     */\\n    function _addTokenToAllTokensEnumeration(uint256 tokenId) private {\\n        _allTokensIndex[tokenId] = _allTokens.length;\\n        _allTokens.push(tokenId);\\n    }\\n\\n    /**\\n     * @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\\n     * while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\\n     * gas optimizations e.g. when performing a transfer operation (avoiding double writes).\\n     * This has O(1) time complexity, but alters the order of the _ownedTokens array.\\n     * @param from address representing the previous owner of the given token ID\\n     * @param tokenId uint256 ID of the token to be removed from the tokens list of the given address\\n     */\\n    function _removeTokenFromOwnerEnumeration(address from, uint256 tokenId) private {\\n        // To prevent a gap in from's tokens array, we store the last token in the index of the token to delete, and\\n        // then delete the last slot (swap and pop).\\n\\n        uint256 lastTokenIndex = balanceOf(from);\\n        uint256 tokenIndex = _ownedTokensIndex[tokenId];\\n\\n        // When the token to delete is the last token, the swap operation is unnecessary\\n        if (tokenIndex != lastTokenIndex) {\\n            uint256 lastTokenId = _ownedTokens[from][lastTokenIndex];\\n\\n            _ownedTokens[from][tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\\n            _ownedTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\\n        }\\n\\n        // This also deletes the contents at the last position of the array\\n        delete _ownedTokensIndex[tokenId];\\n        delete _ownedTokens[from][lastTokenIndex];\\n    }\\n\\n    /**\\n     * @dev Private function to remove a token from this extension's token tracking data structures.\\n     * This has O(1) time complexity, but alters the order of the _allTokens array.\\n     * @param tokenId uint256 ID of the token to be removed from the tokens list\\n     */\\n    function _removeTokenFromAllTokensEnumeration(uint256 tokenId) private {\\n        // To prevent a gap in the tokens array, we store the last token in the index of the token to delete, and\\n        // then delete the last slot (swap and pop).\\n\\n        uint256 lastTokenIndex = _allTokens.length - 1;\\n        uint256 tokenIndex = _allTokensIndex[tokenId];\\n\\n        // When the token to delete is the last token, the swap operation is unnecessary. However, since this occurs so\\n        // rarely (when the last minted token is burnt) that we still do the swap here to avoid the gas cost of adding\\n        // an 'if' statement (like in _removeTokenFromOwnerEnumeration)\\n        uint256 lastTokenId = _allTokens[lastTokenIndex];\\n\\n        _allTokens[tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\\n        _allTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\\n\\n        // This also deletes the contents at the last position of the array\\n        delete _allTokensIndex[tokenId];\\n        _allTokens.pop();\\n    }\\n\\n    /**\\n     * See {ERC721-_increaseBalance}. We need that to account tokens that were minted in batch\\n     */\\n    function _increaseBalance(address account, uint128 amount) internal virtual override {\\n        if (amount > 0) {\\n            revert ERC721EnumerableForbiddenBatchMint();\\n        }\\n        super._increaseBalance(account, amount);\\n    }\\n}\\n\",\"keccak256\":\"0x36797469c391ea5ba27408e6ca8adf0824ba6f3adea9c139be18bd6f63232c16\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Enumerable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC721} from \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Enumerable is IERC721 {\\n    /**\\n     * @dev Returns the total amount of tokens stored by the contract.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\\n     */\\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\\n     * Use along with {totalSupply} to enumerate all tokens.\\n     */\\n    function tokenByIndex(uint256 index) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x3d6954a93ac198a2ffa384fa58ccf18e7e235263e051a394328002eff4e073de\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC721} from \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Base64.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.2) (utils/Base64.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides a set of functions to operate with Base64 strings.\\n */\\nlibrary Base64 {\\n    /**\\n     * @dev Base64 Encoding/Decoding Table\\n     */\\n    string internal constant _TABLE = \\\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\\\";\\n\\n    /**\\n     * @dev Converts a `bytes` to its Bytes64 `string` representation.\\n     */\\n    function encode(bytes memory data) internal pure returns (string memory) {\\n        /**\\n         * Inspired by Brecht Devos (Brechtpd) implementation - MIT licence\\n         * https://github.com/Brechtpd/base64/blob/e78d9fd951e7b0977ddca77d92dc85183770daf4/base64.sol\\n         */\\n        if (data.length == 0) return \\\"\\\";\\n\\n        // Loads the table into memory\\n        string memory table = _TABLE;\\n\\n        // Encoding takes 3 bytes chunks of binary data from `bytes` data parameter\\n        // and split into 4 numbers of 6 bits.\\n        // The final Base64 length should be `bytes` data length multiplied by 4/3 rounded up\\n        // - `data.length + 2`  -> Round up\\n        // - `/ 3`              -> Number of 3-bytes chunks\\n        // - `4 *`              -> 4 characters for each chunk\\n        string memory result = new string(4 * ((data.length + 2) / 3));\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            // Prepare the lookup table (skip the first \\\"length\\\" byte)\\n            let tablePtr := add(table, 1)\\n\\n            // Prepare result pointer, jump over length\\n            let resultPtr := add(result, 0x20)\\n            let dataPtr := data\\n            let endPtr := add(data, mload(data))\\n\\n            // In some cases, the last iteration will read bytes after the end of the data. We cache the value, and\\n            // set it to zero to make sure no dirty bytes are read in that section.\\n            let afterPtr := add(endPtr, 0x20)\\n            let afterCache := mload(afterPtr)\\n            mstore(afterPtr, 0x00)\\n\\n            // Run over the input, 3 bytes at a time\\n            for {\\n\\n            } lt(dataPtr, endPtr) {\\n\\n            } {\\n                // Advance 3 bytes\\n                dataPtr := add(dataPtr, 3)\\n                let input := mload(dataPtr)\\n\\n                // To write each character, shift the 3 byte (24 bits) chunk\\n                // 4 times in blocks of 6 bits for each character (18, 12, 6, 0)\\n                // and apply logical AND with 0x3F to bitmask the least significant 6 bits.\\n                // Use this as an index into the lookup table, mload an entire word\\n                // so the desired character is in the least significant byte, and\\n                // mstore8 this least significant byte into the result and continue.\\n\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(18, input), 0x3F))))\\n                resultPtr := add(resultPtr, 1) // Advance\\n\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(12, input), 0x3F))))\\n                resultPtr := add(resultPtr, 1) // Advance\\n\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(6, input), 0x3F))))\\n                resultPtr := add(resultPtr, 1) // Advance\\n\\n                mstore8(resultPtr, mload(add(tablePtr, and(input, 0x3F))))\\n                resultPtr := add(resultPtr, 1) // Advance\\n            }\\n\\n            // Reset the value that was cached\\n            mstore(afterPtr, afterCache)\\n\\n            // When data `bytes` is not exactly 3 bytes long\\n            // it is padded with `=` characters at the end\\n            switch mod(mload(data), 3)\\n            case 1 {\\n                mstore8(sub(resultPtr, 1), 0x3d)\\n                mstore8(sub(resultPtr, 2), 0x3d)\\n            }\\n            case 2 {\\n                mstore8(sub(resultPtr, 1), 0x3d)\\n            }\\n        }\\n\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0x09000342b85b1a06fa1f5b71bdeef7c449cd25799aac14fa9053d8abd18219aa\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Math} from \\\"./math/Math.sol\\\";\\nimport {SignedMath} from \\\"./math/SignedMath.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant HEX_DIGITS = \\\"0123456789abcdef\\\";\\n    uint8 private constant ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev The `value` string doesn't fit in the specified `length`.\\n     */\\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toStringSigned(int256 value) internal pure returns (string memory) {\\n        return string.concat(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMath.abs(value)));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        uint256 localValue = value;\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\\n            localValue >>= 4;\\n        }\\n        if (localValue != 0) {\\n            revert StringsInsufficientHexLength(value, length);\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\\n     * representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    /**\\n     * @dev Muldiv operation overflow.\\n     */\\n    error MathOverflowedMulDiv();\\n\\n    enum Rounding {\\n        Floor, // Toward negative infinity\\n        Ceil, // Toward positive infinity\\n        Trunc, // Toward zero\\n        Expand // Away from zero\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds towards infinity instead\\n     * of rounding towards zero.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (b == 0) {\\n            // Guarantee the same behavior as in a regular Solidity division.\\n            return a / b;\\n        }\\n\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\\n     * denominator == 0.\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\\n     * Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            if (denominator <= prod1) {\\n                revert MathOverflowedMulDiv();\\n            }\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\\n\\n            uint256 twos = denominator & (0 - denominator);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\\n            // works in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\\n     * towards zero.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\\n     */\\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\\n        return uint8(rounding) % 2 == 1;\\n    }\\n}\\n\",\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\"},\"contracts/SE2NFT.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0 <0.9.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC721/ERC721.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Base64.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Strings.sol\\\";\\n\\ncontract SE2NFT is ERC721Enumerable {\\n    uint256 public tokenIdCounter;\\n    mapping(uint256 tokenId => string) public tokenURIs;\\n    string[] public uris = [\\n        \\\"QmVHi3c4qkZcH3cJynzDXRm5n7dzc9R9TUtUcfnWQvhdcw\\\", // Zebra\\n        \\\"QmfVMAmNM1kDEBYrC2TPzQDoCRFH6F5tE1e9Mr4FkkR5Xr\\\", // Buffalo\\n        \\\"QmcvcUaKf6JyCXhLD1by6hJXNruPQGs3kkLg2W1xr7nF1j\\\" // Rhino\\n    ];\\n\\n    constructor() ERC721(\\\"SE2-ERC721-NFT\\\", \\\"SE2NFT\\\") {}\\n\\n    function _baseURI() internal pure override returns (string memory) {\\n        return \\\"https://ipfs.io/ipfs/\\\";\\n    }\\n\\n    function mintItem(address to) public returns (uint256) {\\n        tokenIdCounter++;\\n        _safeMint(to, tokenIdCounter);\\n\\n        bytes32 predictableRandom = keccak256(\\n            abi.encodePacked(tokenIdCounter, blockhash(block.number - 1), msg.sender, address(this))\\n        );\\n\\n        tokenURIs[tokenIdCounter] = uris[uint256(predictableRandom) % uris.length];\\n        return tokenIdCounter;\\n    }\\n\\n    function tokenURI(uint256 tokenId) public view override returns (string memory) {\\n        _requireOwned(tokenId);\\n        string memory imageCid = tokenURIs[tokenId];\\n\\n        bytes memory json = abi.encodePacked(\\n            \\\"{\\\",\\n                \\\"\\\\\\\"name\\\\\\\":\\\\\\\"SE2NFT #\\\",\\n                Strings.toString(tokenId),\\n                \\\"\\\\\\\",\\\",\\n                \\\"\\\\\\\"description\\\\\\\":\\\\\\\"Scaffold-ETH 2 sample NFT\\\\\\\",\\\",\\n                \\\"\\\\\\\"image\\\\\\\":\\\\\\\"ipfs://\\\",\\n                imageCid,\\n                \\\"\\\\\\\"\\\",\\n            \\\"}\\\"\\n        );\\n\\n        return string(abi.encodePacked(\\n            \\\"data:application/json;base64,\\\",\\n            Base64.encode(json)\\n        ));\\n    }\\n}\\n\",\"keccak256\":\"0x2db119f4e6ab270e7739b0989f01889356a5c927ac49286b6169bc2ec7be2f24\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":317,"contract":"contracts/SE2NFT.sol:SE2NFT","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":319,"contract":"contracts/SE2NFT.sol:SE2NFT","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":323,"contract":"contracts/SE2NFT.sol:SE2NFT","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":327,"contract":"contracts/SE2NFT.sol:SE2NFT","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":331,"contract":"contracts/SE2NFT.sol:SE2NFT","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":337,"contract":"contracts/SE2NFT.sol:SE2NFT","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":1447,"contract":"contracts/SE2NFT.sol:SE2NFT","label":"_ownedTokens","offset":0,"slot":"6","type":"t_mapping(t_address,t_mapping(t_uint256,t_uint256))"},{"astId":1451,"contract":"contracts/SE2NFT.sol:SE2NFT","label":"_ownedTokensIndex","offset":0,"slot":"7","type":"t_mapping(t_uint256,t_uint256)"},{"astId":1454,"contract":"contracts/SE2NFT.sol:SE2NFT","label":"_allTokens","offset":0,"slot":"8","type":"t_array(t_uint256)dyn_storage"},{"astId":1458,"contract":"contracts/SE2NFT.sol:SE2NFT","label":"_allTokensIndex","offset":0,"slot":"9","type":"t_mapping(t_uint256,t_uint256)"},{"astId":4572,"contract":"contracts/SE2NFT.sol:SE2NFT","label":"tokenIdCounter","offset":0,"slot":"10","type":"t_uint256"},{"astId":4576,"contract":"contracts/SE2NFT.sol:SE2NFT","label":"tokenURIs","offset":0,"slot":"11","type":"t_mapping(t_uint256,t_string_storage)"},{"astId":4583,"contract":"contracts/SE2NFT.sol:SE2NFT","label":"uris","offset":0,"slot":"12","type":"t_array(t_string_storage)dyn_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_string_storage)dyn_storage":{"base":"t_string_storage","encoding":"dynamic_array","label":"string[]","numberOfBytes":"32"},"t_array(t_uint256)dyn_storage":{"base":"t_uint256","encoding":"dynamic_array","label":"uint256[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_mapping(t_uint256,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(uint256 => uint256))","numberOfBytes":"32","value":"t_mapping(t_uint256,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_uint256,t_string_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => string)","numberOfBytes":"32","value":"t_string_storage"},"t_mapping(t_uint256,t_uint256)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}